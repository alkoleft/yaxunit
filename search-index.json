[{"documents":[{"i":1,"t":"У нас появился блог","u":"/yaxunit/blog/2023/04/29/01-first","b":["Заметки"]},{"i":3,"t":"YaxUnit. Версия 23.04","u":"/yaxunit/blog/2023/04/29/02-engine-release","b":["Заметки"]},{"i":16,"t":"EDT Test runner. Версия 23.04","u":"/yaxunit/blog/2023/04/29/03-plugin-release","b":["Заметки"]},{"i":20,"t":"YaxUnit. Версия 23.05","u":"/yaxunit/blog/2023/05/25/engine-release","b":["Заметки"]},{"i":33,"t":"YaxUnit. Версия 23.07","u":"/yaxunit/blog/2023/07/31/engine-release","b":["Заметки"]},{"i":47,"t":"YaxUnit. Версия 23.08","u":"/yaxunit/blog/2023/09/05/engine-release","b":["Заметки"]},{"i":61,"t":"YaxUnit. Версия 24.01","u":"/yaxunit/blog/2024/01/15/engine-release","b":["Заметки"]},{"i":83,"t":"EDT Test runner. Версия 24.02","u":"/yaxunit/blog/2024/02/29/plugin-release","b":["Заметки"]},{"i":89,"t":"","u":"/yaxunit/blog/archive","b":["Заметки"]},{"i":90,"t":"YaxUnit. Версия 24.02","u":"/yaxunit/blog/2024/02/29/engine-release","b":["Заметки"]},{"i":105,"t":"Кулинарная книга тестов","u":"/yaxunit/docs/cook-book/","b":["Описание"]},{"i":107,"t":"Утверждения","u":"/yaxunit/docs/features/assertions/","b":["Описание","Руководство","Утверждения"]},{"i":113,"t":"Утверждения для проверки наличия данных информационной базы","u":"/yaxunit/docs/features/assertions/assertions-db","b":["Описание","Руководство","Утверждения"]},{"i":119,"t":"Возможности YAxUnit","u":"/yaxunit/docs/features/","b":["Описание","Руководство"]},{"i":135,"t":"События","u":"/yaxunit/docs/features/events","b":["Описание","Руководство"]},{"i":137,"t":"Контекст","u":"/yaxunit/docs/features/context","b":["Описание","Руководство"]},{"i":142,"t":"Предикаты","u":"/yaxunit/docs/features/predicates","b":["Описание","Руководство"]},{"i":151,"t":"Мокирование","u":"/yaxunit/docs/features/mocking/","b":["Описание","Руководство","Мокирование"]},{"i":164,"t":"Отчеты о тестировании","u":"/yaxunit/docs/features/reports","b":["Описание","Руководство"]},{"i":170,"t":"Тестовые данные","u":"/yaxunit/docs/features/test-data/","b":["Описание","Руководство","Тестовые данные"]},{"i":180,"t":"Базовые утверждения","u":"/yaxunit/docs/features/assertions/assertions-base","b":["Описание","Руководство","Утверждения"]},{"i":215,"t":"Мокито","u":"/yaxunit/docs/features/mocking/mockito","b":["Описание","Руководство","Мокирование"]},{"i":229,"t":"Запросы","u":"/yaxunit/docs/features/queries","b":["Описание","Руководство"]},{"i":231,"t":"Дополнительные методы работы с данными","u":"/yaxunit/docs/features/test-data/data-manipulations","b":["Описание","Руководство","Тестовые данные"]},{"i":233,"t":"Удаление тестовых данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","b":["Описание","Руководство","Тестовые данные"]},{"i":241,"t":"Начало работы","u":"/yaxunit/docs/getting-started/","b":["Описание","Начало работы"]},{"i":243,"t":"Регистрация тестовых методов","u":"/yaxunit/docs/features/test-registration","b":["Описание","Руководство"]},{"i":245,"t":"Программное создание тестовых данных","u":"/yaxunit/docs/features/test-data/data-generation","b":["Описание","Руководство","Тестовые данные"]},{"i":262,"t":"Пишем первый тест","u":"/yaxunit/docs/getting-started/first-test","b":["Описание","Начало работы"]},{"i":267,"t":"Установка","u":"/yaxunit/docs/getting-started/install/","b":["Описание","Начало работы","Установка"]},{"i":278,"t":"Текучий интерфейс","u":"/yaxunit/docs/getting-started/fluent-api","b":["Описание","Начало работы"]},{"i":282,"t":"Рекомендации","u":"/yaxunit/docs/getting-started/recomendations","b":["Описание","Начало работы"]},{"i":286,"t":"Модули помощники","u":"/yaxunit/docs/getting-started/auxiliary-modules","b":["Описание","Начало работы"]},{"i":290,"t":"Конфигурация запуска","u":"/yaxunit/docs/getting-started/run/configuration","b":["Описание","Начало работы","Запуск и отладка тестов"]},{"i":298,"t":"Установка плагина для работы с тестами в EDT","u":"/yaxunit/docs/getting-started/install/install-plugin","b":["Описание","Начало работы","Установка"]},{"i":300,"t":"Организация тестов","u":"/yaxunit/docs/getting-started/structure","b":["Описание","Начало работы"]},{"i":307,"t":"Запуск и отладка тестов","u":"/yaxunit/docs/getting-started/run/","b":["Описание","Начало работы","Запуск и отладка тестов"]},{"i":323,"t":"Графический интерфейс","u":"/yaxunit/docs/yaxunit-ui","b":["Описание"]},{"i":330,"t":"Загрузка данных из макетов","u":"/yaxunit/docs/features/test-data/load-from-templates","b":["Описание","Руководство","Тестовые данные"]}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/1",[0,0.06]],["t/3",[0,0.037,1,1.606,2,2.66]],["t/16",[0,0.028,2,2.064,3,1.813,4,2.064,5,2.064]],["t/20",[0,0.037,1,1.606,6,3.15]],["t/33",[0,0.037,1,1.606,7,3.15]],["t/47",[0,0.037,1,1.606,8,3.15]],["t/61",[0,0.037,1,1.606,9,3.15]],["t/83",[0,0.028,3,1.813,4,2.064,5,2.064,10,2.064]],["t/89",[]],["t/90",[0,0.037,1,1.606,10,2.66]],["t/105",[0,0.059]],["t/107",[0,0.052]],["t/113",[0,0.061]],["t/119",[0,0.043,1,1.877]],["t/135",[0,0.052]],["t/137",[0,0.052]],["t/142",[0,0.052]],["t/151",[0,0.052]],["t/164",[0,0.059]],["t/170",[0,0.057]],["t/180",[0,0.057]],["t/215",[0,0.052]],["t/229",[0,0.052]],["t/231",[0,0.06]],["t/233",[0,0.059]],["t/241",[0,0.057]],["t/243",[0,0.059]],["t/245",[0,0.06]],["t/262",[0,0.059]],["t/267",[0,0.052]],["t/278",[0,0.057]],["t/282",[0,0.052]],["t/286",[0,0.057]],["t/290",[0,0.057]],["t/298",[0,0.059,3,1.357]],["t/300",[0,0.057]],["t/307",[0,0.06]],["t/323",[0,0.057]],["t/330",[0,0.06]]],"invertedIndex":[["",{"_index":0,"t":{"1":{"position":[[0,1],[2,3],[6,8],[15,4]]},"3":{"position":[[9,6]]},"16":{"position":[[17,6]]},"20":{"position":[[9,6]]},"33":{"position":[[9,6]]},"47":{"position":[[9,6]]},"61":{"position":[[9,6]]},"83":{"position":[[17,6]]},"90":{"position":[[9,6]]},"105":{"position":[[0,10],[11,5],[17,6]]},"107":{"position":[[0,11]]},"113":{"position":[[0,11],[12,3],[16,8],[25,7],[33,6],[40,14],[55,4]]},"119":{"position":[[0,11]]},"135":{"position":[[0,7]]},"137":{"position":[[0,8]]},"142":{"position":[[0,9]]},"151":{"position":[[0,11]]},"164":{"position":[[0,6],[7,1],[9,12]]},"170":{"position":[[0,8],[9,6]]},"180":{"position":[[0,7],[8,11]]},"215":{"position":[[0,6]]},"229":{"position":[[0,7]]},"231":{"position":[[0,14],[15,6],[22,6],[29,1],[31,7]]},"233":{"position":[[0,8],[9,8],[18,6]]},"241":{"position":[[0,6],[7,6]]},"243":{"position":[[0,11],[12,8],[21,7]]},"245":{"position":[[0,11],[12,8],[21,8],[30,6]]},"262":{"position":[[0,5],[6,6],[13,4]]},"267":{"position":[[0,9]]},"278":{"position":[[0,7],[8,9]]},"282":{"position":[[0,12]]},"286":{"position":[[0,6],[7,9]]},"290":{"position":[[0,12],[13,7]]},"298":{"position":[[0,9],[10,7],[18,3],[22,6],[29,1],[31,7],[39,1]]},"300":{"position":[[0,11],[12,6]]},"307":{"position":[[0,6],[7,1],[9,7],[17,6]]},"323":{"position":[[0,11],[12,9]]},"330":{"position":[[0,8],[9,6],[16,2],[19,7]]}}}],["23.04",{"_index":2,"t":{"3":{"position":[[16,5]]},"16":{"position":[[24,5]]}}}],["23.05",{"_index":6,"t":{"20":{"position":[[16,5]]}}}],["23.07",{"_index":7,"t":{"33":{"position":[[16,5]]}}}],["23.08",{"_index":8,"t":{"47":{"position":[[16,5]]}}}],["24.01",{"_index":9,"t":{"61":{"position":[[16,5]]}}}],["24.02",{"_index":10,"t":{"83":{"position":[[24,5]]},"90":{"position":[[16,5]]}}}],["edt",{"_index":3,"t":{"16":{"position":[[0,3]]},"83":{"position":[[0,3]]},"298":{"position":[[41,3]]}}}],["runner",{"_index":5,"t":{"16":{"position":[[9,7]]},"83":{"position":[[9,7]]}}}],["test",{"_index":4,"t":{"16":{"position":[[4,4]]},"83":{"position":[[4,4]]}}}],["yaxunit",{"_index":1,"t":{"3":{"position":[[0,8]]},"20":{"position":[[0,8]]},"33":{"position":[[0,8]]},"47":{"position":[[0,8]]},"61":{"position":[[0,8]]},"90":{"position":[[0,8]]},"119":{"position":[[12,7]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":5,"t":"Новое в версии","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#новое-в-версии","p":3},{"i":6,"t":"Тестовые данные","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#тестовые-данные","p":3},{"i":8,"t":"Мокирование","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#мокирование","p":3},{"i":10,"t":"Утверждения","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#утверждения","p":3},{"i":12,"t":"Документация","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#документация","p":3},{"i":14,"t":"Прочее","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#прочее","p":3},{"i":18,"t":"Новое в версии","u":"/yaxunit/blog/2023/04/29/03-plugin-release","h":"#новое-в-версии","p":16},{"i":22,"t":"Новое в версии","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#новое-в-версии","p":20},{"i":23,"t":"Тестовые данные","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#тестовые-данные","p":20},{"i":25,"t":"Мокито","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#мокито","p":20},{"i":27,"t":"Утверждения","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#утверждения","p":20},{"i":29,"t":"Запросы","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#запросы","p":20},{"i":31,"t":"Прочее","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#прочее","p":20},{"i":35,"t":"Новое в версии","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#новое-в-версии","p":33},{"i":36,"t":"Тестовые данные","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#тестовые-данные","p":33},{"i":38,"t":"Запросы","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#запросы","p":33},{"i":40,"t":"Прочее","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#прочее","p":33},{"i":42,"t":"Исправленные ошибки","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#исправленные-ошибки","p":33},{"i":43,"t":"Мокито","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#мокито","p":33},{"i":45,"t":"Утверждения","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#утверждения","p":33},{"i":49,"t":"Новое в версии","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#новое-в-версии","p":47},{"i":50,"t":"Тестовые данные","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#тестовые-данные","p":47},{"i":52,"t":"Утверждения","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#утверждения","p":47},{"i":54,"t":"Прочее","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#прочее","p":47},{"i":56,"t":"CI","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#ci","p":47},{"i":58,"t":"Исправленные ошибки","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#исправленные-ошибки","p":47},{"i":59,"t":"Прочее","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#прочее-1","p":47},{"i":63,"t":"Новое в версии","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#новое-в-версии","p":61},{"i":64,"t":"Тестовые данные","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#тестовые-данные","p":61},{"i":66,"t":"Утверждения","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#утверждения","p":61},{"i":68,"t":"Мокирование","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#мокирование","p":61},{"i":70,"t":"Прочее","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#прочее","p":61},{"i":72,"t":"Исправленные ошибки","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#исправленные-ошибки","p":61},{"i":73,"t":"Запуск","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#запуск","p":61},{"i":75,"t":"Мокирование","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#мокирование-1","p":61},{"i":77,"t":"Тестовые данные","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#тестовые-данные-1","p":61},{"i":79,"t":"CI","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#ci","p":61},{"i":81,"t":"Прочее","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#прочее-1","p":61},{"i":85,"t":"Новое в версии","u":"/yaxunit/blog/2024/02/29/plugin-release","h":"#новое-в-версии","p":83},{"i":87,"t":"Исправлены ошибки","u":"/yaxunit/blog/2024/02/29/plugin-release","h":"#исправлены-ошибки","p":83},{"i":92,"t":"Новое в версии","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#новое-в-версии","p":90},{"i":93,"t":"Тестовые данные","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#тестовые-данные","p":90},{"i":95,"t":"Утверждения","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#утверждения","p":90},{"i":97,"t":"Мокирование","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#мокирование","p":90},{"i":99,"t":"Запуск","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#запуск","p":90},{"i":101,"t":"Отчет о тестировании","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#отчет-о-тестировании","p":90},{"i":103,"t":"Исправленные ошибки","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#исправленные-ошибки","p":90},{"i":109,"t":"Зачем нужны утверждения YAxUnit","u":"/yaxunit/docs/features/assertions/","h":"#зачем-нужны-утверждения-yaxunit","p":107},{"i":111,"t":"Возможности","u":"/yaxunit/docs/features/assertions/","h":"#возможности","p":107},{"i":115,"t":"Доступные методы","u":"/yaxunit/docs/features/assertions/assertions-db","h":"#доступные-методы","p":113},{"i":117,"t":"Примеры","u":"/yaxunit/docs/features/assertions/assertions-db","h":"#примеры","p":113},{"i":121,"t":"Регистрация и настройка выполнения тестов","u":"/yaxunit/docs/features/","h":"#регистрация-и-настройка-выполнения-тестов","p":119},{"i":123,"t":"Реализация тестов","u":"/yaxunit/docs/features/","h":"#реализация-тестов","p":119},{"i":125,"t":"Создание тестовых данных","u":"/yaxunit/docs/features/","h":"#создание-тестовых-данных","p":119},{"i":127,"t":"Мокирование","u":"/yaxunit/docs/features/","h":"#мокирование","p":119},{"i":129,"t":"Проверка ожиданий","u":"/yaxunit/docs/features/","h":"#проверка-ожиданий","p":119},{"i":131,"t":"Методы-помощники","u":"/yaxunit/docs/features/","h":"#методы-помощники","p":119},{"i":133,"t":"Примеры","u":"/yaxunit/docs/features/","h":"#примеры","p":119},{"i":138,"t":"Механизм контекстов","u":"/yaxunit/docs/features/context","h":"#механизм-контекстов","p":137},{"i":140,"t":"Контексты тестового модуля","u":"/yaxunit/docs/features/context","h":"#контексты-тестового-модуля","p":137},{"i":144,"t":"Примеры использования","u":"/yaxunit/docs/features/predicates","h":"#примеры-использования","p":142},{"i":146,"t":"Особенности","u":"/yaxunit/docs/features/predicates","h":"#особенности","p":142},{"i":147,"t":"Особенности контекста","u":"/yaxunit/docs/features/predicates","h":"#особенности-контекста","p":142},{"i":149,"t":"Особенности реализации","u":"/yaxunit/docs/features/predicates","h":"#особенности-реализации","p":142},{"i":152,"t":"Вводная","u":"/yaxunit/docs/features/mocking/","h":"#вводная","p":151},{"i":154,"t":"Мокито","u":"/yaxunit/docs/features/mocking/","h":"#мокито","p":151},{"i":156,"t":"Моки","u":"/yaxunit/docs/features/mocking/","h":"#моки","p":151},{"i":158,"t":"HTTPСервисЗапрос","u":"/yaxunit/docs/features/mocking/","h":"#httpсервисзапрос","p":151},{"i":160,"t":"ADO.RecordSet","u":"/yaxunit/docs/features/mocking/","h":"#adorecordset","p":151},{"i":162,"t":"Создание своих моков","u":"/yaxunit/docs/features/mocking/","h":"#создание-своих-моков","p":151},{"i":166,"t":"Формат JUnit","u":"/yaxunit/docs/features/reports","h":"#формат-junit","p":164},{"i":168,"t":"Формат Allure","u":"/yaxunit/docs/features/reports","h":"#формат-allure","p":164},{"i":172,"t":"Подходы к работе с данными","u":"/yaxunit/docs/features/test-data/","h":"#подходы-к-работе-с-данными","p":170},{"i":174,"t":"Образ тестовой базы","u":"/yaxunit/docs/features/test-data/","h":"#образ-тестовой-базы","p":170},{"i":176,"t":"Ручное наполнение тестовой базы","u":"/yaxunit/docs/features/test-data/","h":"#ручное-наполнение-тес�товой-базы","p":170},{"i":178,"t":"Программное создание данных","u":"/yaxunit/docs/features/test-data/","h":"#программное-создание-данных","p":170},{"i":182,"t":"Доступные методы","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#доступные-методы","p":180},{"i":184,"t":"Сравнение значений","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#сравнение-значений","p":180},{"i":186,"t":"Проверка заполненности","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-заполненности","p":180},{"i":188,"t":"Проверка строк","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-строк","p":180},{"i":190,"t":"Проверка вхождения значения в интервал","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-вхождения-значения-в-интервал","p":180},{"i":192,"t":"Проверка типа значения","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-типа-значения","p":180},{"i":194,"t":"Проверка выполнения метода","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-выполнения-метода","p":180},{"i":196,"t":"Проверка наличия свойств/реквизитов","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-наличия-свойствреквизитов","p":180},{"i":198,"t":"Проверка коллекции","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-коллекции","p":180},{"i":200,"t":"Проверка на соответствие набору условий, предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-на-соответствие-набору-условий-предикату","p":180},{"i":202,"t":"Методы позиционирования","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#методы-позиционирования","p":180},{"i":204,"t":"Примеры","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#примеры","p":180},{"i":205,"t":"Базовые проверки","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#базовые-проверки","p":180},{"i":207,"t":"Проверка сложного объекта","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-сложного-объекта","p":180},{"i":209,"t":"Проверка вызова метода","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-вызова-метода","p":180},{"i":211,"t":"Проверка соответствия предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-соответствия-предикату","p":180},{"i":213,"t":"Проверка элементов коллекции на соответствие предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-элементов-коллекции-на-соответствие-предикату","p":180},{"i":217,"t":"Возможности","u":"/yaxunit/docs/features/mocking/mockito","h":"#возможности","p":215},{"i":219,"t":"Принцип работы","u":"/yaxunit/docs/features/mocking/mockito","h":"#принцип-работы","p":215},{"i":221,"t":"Настройка мокируемых методов","u":"/yaxunit/docs/features/mocking/mockito","h":"#настройка-мокируемых-методов","p":215},{"i":223,"t":"Обучение","u":"/yaxunit/docs/features/mocking/mockito","h":"#обучение","p":215},{"i":225,"t":"Тестовый прогон","u":"/yaxunit/docs/features/mocking/mockito","h":"#тестовый-прогон","p":215},{"i":227,"t":"Проверка","u":"/yaxunit/docs/features/mocking/mockito","h":"#проверка","p":215},{"i":235,"t":"Автоматические транзакции","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#автоматические-транзакции","p":233},{"i":237,"t":"Механизм удаления тестовых данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#механизм-удаления-тестовых-данных","p":233},{"i":239,"t":"Глобальная настройка удаления данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#глобальная-настройка-удаления-данных","p":233},{"i":247,"t":"Возможности","u":"/yaxunit/docs/features/test-data/data-generation","h":"#возможности","p":245},{"i":249,"t":"Генераторы случайных данных","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генераторы-случайных-данных","p":245},{"i":251,"t":"Методы создания данных в информационной базе","u":"/yaxunit/docs/features/test-data/data-generation","h":"#методы-создания-данных-в-информационной-базе","p":245},{"i":253,"t":"Загрузка данных из макетов","u":"/yaxunit/docs/features/test-data/data-generation","h":"#загрузка-данных-из-макетов","p":245},{"i":255,"t":"Работа с файлами","u":"/yaxunit/docs/features/test-data/data-generation","h":"#работа-с-файлами","p":245},{"i":257,"t":"Примеры","u":"/yaxunit/docs/features/test-data/data-generation","h":"#примеры","p":245},{"i":258,"t":"Генерация фейкового документа","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генерация-фейкового-документа","p":245},{"i":260,"t":"Генерация произвольных фейковых данных","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генерация-произвольных-фейковых-данных","p":245},{"i":263,"t":"Подготовка окружения","u":"/yaxunit/docs/getting-started/first-test","h":"#подготовка-окружения","p":262},{"i":265,"t":"Первый тест","u":"/yaxunit/docs/getting-started/first-test","h":"#первый-тест","p":262},{"i":269,"t":"Требования","u":"/yaxunit/docs/getting-started/install/","h":"#требования","p":267},{"i":271,"t":"Установка в EDT","u":"/yaxunit/docs/getting-started/install/","h":"#установка-в-edt","p":267},{"i":272,"t":"Первичная установка тестового движка в рабочее пространство (workspace)","u":"/yaxunit/docs/getting-started/install/","h":"#первичная-установка-тестового-движка-в-рабочее-пространство-workspace","p":267},{"i":274,"t":"Обновление тестового движка","u":"/yaxunit/docs/getting-started/install/","h":"#обновление-тестового-движка","p":267},{"i":276,"t":"Установка в конфигуратор","u":"/yaxunit/docs/getting-started/install/","h":"#установка-в-конфигуратор","p":267},{"i":280,"t":"Принцип работы текучих выражений в YAxUnit","u":"/yaxunit/docs/getting-started/fluent-api","h":"#принцип-работы-текучих-выражений-в-yaxunit","p":278},{"i":284,"t":"Внедрение","u":"/yaxunit/docs/getting-started/recomendations","h":"#внедрение","p":282},{"i":288,"t":"Конструкторы данных","u":"/yaxunit/docs/getting-started/auxiliary-modules","h":"#конструкторы-данных","p":286},{"i":292,"t":"Основные параметры","u":"/yaxunit/docs/getting-started/run/configuration","h":"#основные-параметры","p":290},{"i":294,"t":"Параметры фильтрации","u":"/yaxunit/docs/getting-started/run/configuration","h":"#параметры-фильтрации","p":290},{"i":296,"t":"Параметры логирования","u":"/yaxunit/docs/getting-started/run/configuration","h":"#параметры-логирования","p":290},{"i":301,"t":"Расширение с тестами","u":"/yaxunit/docs/getting-started/structure","h":"#расширение-с-тестами","p":300},{"i":303,"t":"Тестовые модули","u":"/yaxunit/docs/getting-started/structure","h":"#тестовые-модули","p":300},{"i":305,"t":"Тестовые методы","u":"/yaxunit/docs/getting-started/structure","h":"#тестовые-методы","p":300},{"i":309,"t":"Запуск из EDT","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-edt","p":307},{"i":311,"t":"Конфигурация запуска","u":"/yaxunit/docs/getting-started/run/","h":"#конфигурация-запуска","p":307},{"i":313,"t":"Запуск из боковой панели модуля","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-боковой-панели-модуля","p":307},{"i":315,"t":"Запуск из палитры команд","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-палитры-команд","p":307},{"i":317,"t":"Запуск из конфигуратора","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-конфигуратора","p":307},{"i":319,"t":"Запуск из предприятия","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-предприятия","p":307},{"i":321,"t":"Строка запуска предприятия","u":"/yaxunit/docs/getting-started/run/","h":"#строка-запуска-предприятия","p":307},{"i":325,"t":"Запуск тестов","u":"/yaxunit/docs/yaxunit-ui","h":"#запуск-тестов","p":323},{"i":327,"t":"Интерфейс отчета","u":"/yaxunit/docs/yaxunit-ui","h":"#интерфейс-отчета","p":323},{"i":328,"t":"Интерфейс настройки конфигурации","u":"/yaxunit/docs/yaxunit-ui","h":"#интерфейс-настройки-конфигурации","p":323},{"i":331,"t":"Описание","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#описание","p":330},{"i":333,"t":"Примеры","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#примеры","p":330},{"i":334,"t":"Загрузка всего макета","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-всего-макета","p":330},{"i":336,"t":"Загрузка области из макета","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-области-из-макета","p":330},{"i":338,"t":"Загрузка документа с табличной частью и проверка движений","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-документа-с-табличной-частью-и-проверка-движений","p":330},{"i":340,"t":"Заменяемые значения","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#заменяемые-значения","p":330},{"i":342,"t":"Заменяемые значения и составные типы","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#заменяемые-значения-и-составные-типы","p":330},{"i":344,"t":"Inline макеты, загрузка из Markdown","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#inline-макеты-загрузка-из-markdown","p":330},{"i":346,"t":"Другие методы загрузки","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#другие-методы-загрузки","p":330}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/5",[0,0.046]],["t/6",[0,0.045]],["t/8",[0,0.041]],["t/10",[0,0.041]],["t/12",[0,0.041]],["t/14",[0,0.041]],["t/18",[0,0.046]],["t/22",[0,0.046]],["t/23",[0,0.045]],["t/25",[0,0.041]],["t/27",[0,0.041]],["t/29",[0,0.041]],["t/31",[0,0.041]],["t/35",[0,0.046]],["t/36",[0,0.045]],["t/38",[0,0.041]],["t/40",[0,0.041]],["t/42",[0,0.045]],["t/43",[0,0.041]],["t/45",[0,0.041]],["t/49",[0,0.046]],["t/50",[0,0.045]],["t/52",[0,0.041]],["t/54",[0,0.041]],["t/56",[1,5.318]],["t/58",[0,0.045]],["t/59",[0,0.041]],["t/63",[0,0.046]],["t/64",[0,0.045]],["t/66",[0,0.041]],["t/68",[0,0.041]],["t/70",[0,0.041]],["t/72",[0,0.045]],["t/73",[0,0.041]],["t/75",[0,0.041]],["t/77",[0,0.045]],["t/79",[1,5.318]],["t/81",[0,0.041]],["t/85",[0,0.046]],["t/87",[0,0.045]],["t/92",[0,0.046]],["t/93",[0,0.045]],["t/95",[0,0.041]],["t/97",[0,0.041]],["t/99",[0,0.041]],["t/101",[0,0.046]],["t/103",[0,0.045]],["t/109",[0,0.043,2,3.161]],["t/111",[0,0.041]],["t/115",[0,0.045]],["t/117",[0,0.041]],["t/121",[0,0.048]],["t/123",[0,0.045]],["t/125",[0,0.046]],["t/127",[0,0.041]],["t/129",[0,0.045]],["t/131",[0,0.045]],["t/133",[0,0.041]],["t/138",[0,0.045]],["t/140",[0,0.046]],["t/144",[0,0.045]],["t/146",[0,0.041]],["t/147",[0,0.045]],["t/149",[0,0.045]],["t/152",[0,0.041]],["t/154",[0,0.041]],["t/156",[0,0.041]],["t/158",[3,5.986]],["t/160",[4,5.986]],["t/162",[0,0.046]],["t/166",[0,0.033,5,4.877]],["t/168",[0,0.033,6,4.877]],["t/172",[0,0.048]],["t/174",[0,0.046]],["t/176",[0,0.047]],["t/178",[0,0.046]],["t/182",[0,0.045]],["t/184",[0,0.045]],["t/186",[0,0.045]],["t/188",[0,0.045]],["t/190",[0,0.048]],["t/192",[0,0.046]],["t/194",[0,0.046]],["t/196",[0,0.046]],["t/198",[0,0.045]],["t/200",[0,0.048]],["t/202",[0,0.045]],["t/204",[0,0.041]],["t/205",[0,0.045]],["t/207",[0,0.046]],["t/209",[0,0.046]],["t/211",[0,0.046]],["t/213",[0,0.048]],["t/217",[0,0.041]],["t/219",[0,0.045]],["t/221",[0,0.046]],["t/223",[0,0.041]],["t/225",[0,0.045]],["t/227",[0,0.041]],["t/235",[0,0.045]],["t/237",[0,0.047]],["t/239",[0,0.047]],["t/247",[0,0.041]],["t/249",[0,0.046]],["t/251",[0,0.048]],["t/253",[0,0.047]],["t/255",[0,0.046]],["t/257",[0,0.041]],["t/258",[0,0.046]],["t/260",[0,0.047]],["t/263",[0,0.045]],["t/265",[0,0.045]],["t/269",[0,0.041]],["t/271",[0,0.04,7,3.655]],["t/272",[0,0.047,8,2.309]],["t/274",[0,0.046]],["t/276",[0,0.046]],["t/280",[0,0.045,2,2.488]],["t/284",[0,0.041]],["t/288",[0,0.045]],["t/292",[0,0.045]],["t/294",[0,0.045]],["t/296",[0,0.045]],["t/301",[0,0.046]],["t/303",[0,0.045]],["t/305",[0,0.045]],["t/309",[0,0.04,7,3.655]],["t/311",[0,0.045]],["t/313",[0,0.048]],["t/315",[0,0.047]],["t/317",[0,0.046]],["t/319",[0,0.046]],["t/321",[0,0.046]],["t/325",[0,0.045]],["t/327",[0,0.045]],["t/328",[0,0.046]],["t/331",[0,0.041]],["t/333",[0,0.041]],["t/334",[0,0.046]],["t/336",[0,0.047]],["t/338",[0,0.048]],["t/340",[0,0.045]],["t/342",[0,0.048]],["t/344",[0,0.04,9,3.134,10,3.134]],["t/346",[0,0.046]]],"invertedIndex":[["",{"_index":0,"t":{"5":{"position":[[0,5],[6,1],[8,6]]},"6":{"position":[[0,8],[9,6]]},"8":{"position":[[0,11]]},"10":{"position":[[0,11]]},"12":{"position":[[0,12]]},"14":{"position":[[0,6]]},"18":{"position":[[0,5],[6,1],[8,6]]},"22":{"position":[[0,5],[6,1],[8,6]]},"23":{"position":[[0,8],[9,6]]},"25":{"position":[[0,6]]},"27":{"position":[[0,11]]},"29":{"position":[[0,7]]},"31":{"position":[[0,6]]},"35":{"position":[[0,5],[6,1],[8,6]]},"36":{"position":[[0,8],[9,6]]},"38":{"position":[[0,7]]},"40":{"position":[[0,6]]},"42":{"position":[[0,12],[13,6]]},"43":{"position":[[0,6]]},"45":{"position":[[0,11]]},"49":{"position":[[0,5],[6,1],[8,6]]},"50":{"position":[[0,8],[9,6]]},"52":{"position":[[0,11]]},"54":{"position":[[0,6]]},"58":{"position":[[0,12],[13,6]]},"59":{"position":[[0,6]]},"63":{"position":[[0,5],[6,1],[8,6]]},"64":{"position":[[0,8],[9,6]]},"66":{"position":[[0,11]]},"68":{"position":[[0,11]]},"70":{"position":[[0,6]]},"72":{"position":[[0,12],[13,6]]},"73":{"position":[[0,6]]},"75":{"position":[[0,11]]},"77":{"position":[[0,8],[9,6]]},"81":{"position":[[0,6]]},"85":{"position":[[0,5],[6,1],[8,6]]},"87":{"position":[[0,10],[11,6]]},"92":{"position":[[0,5],[6,1],[8,6]]},"93":{"position":[[0,8],[9,6]]},"95":{"position":[[0,11]]},"97":{"position":[[0,11]]},"99":{"position":[[0,6]]},"101":{"position":[[0,5],[6,1],[8,12]]},"103":{"position":[[0,12],[13,6]]},"109":{"position":[[0,5],[6,5],[12,11]]},"111":{"position":[[0,11]]},"115":{"position":[[0,9],[10,6]]},"117":{"position":[[0,7]]},"121":{"position":[[0,11],[12,1],[14,9],[24,10],[35,6]]},"123":{"position":[[0,10],[11,6]]},"125":{"position":[[0,8],[9,8],[18,6]]},"127":{"position":[[0,11]]},"129":{"position":[[0,8],[9,8]]},"131":{"position":[[0,6],[7,9]]},"133":{"position":[[0,7]]},"138":{"position":[[0,8],[9,10]]},"140":{"position":[[0,9],[10,9],[20,6]]},"144":{"position":[[0,7],[8,13]]},"146":{"position":[[0,11]]},"147":{"position":[[0,11],[12,9]]},"149":{"position":[[0,11],[12,10]]},"152":{"position":[[0,7]]},"154":{"position":[[0,6]]},"156":{"position":[[0,4]]},"162":{"position":[[0,8],[9,5],[15,5]]},"166":{"position":[[0,6]]},"168":{"position":[[0,6]]},"172":{"position":[[0,7],[8,1],[10,6],[17,1],[19,7]]},"174":{"position":[[0,5],[6,8],[15,4]]},"176":{"position":[[0,6],[7,10],[18,8],[27,4]]},"178":{"position":[[0,11],[12,8],[21,6]]},"182":{"position":[[0,9],[10,6]]},"184":{"position":[[0,9],[10,8]]},"186":{"position":[[0,8],[9,13]]},"188":{"position":[[0,8],[9,5]]},"190":{"position":[[0,8],[9,9],[19,8],[28,1],[30,8]]},"192":{"position":[[0,8],[9,4],[14,8]]},"194":{"position":[[0,8],[9,10],[20,6]]},"196":{"position":[[0,8],[9,7],[17,18]]},"198":{"position":[[0,8],[9,9]]},"200":{"position":[[0,8],[9,2],[12,12],[25,6],[32,8],[41,9]]},"202":{"position":[[0,6],[7,16]]},"204":{"position":[[0,7]]},"205":{"position":[[0,7],[8,8]]},"207":{"position":[[0,8],[9,8],[18,7]]},"209":{"position":[[0,8],[9,6],[16,6]]},"211":{"position":[[0,8],[9,12],[22,9]]},"213":{"position":[[0,8],[9,9],[19,9],[29,2],[32,12],[45,9]]},"217":{"position":[[0,11]]},"219":{"position":[[0,7],[8,6]]},"221":{"position":[[0,9],[10,10],[21,7]]},"223":{"position":[[0,8]]},"225":{"position":[[0,8],[9,6]]},"227":{"position":[[0,8]]},"235":{"position":[[0,14],[15,10]]},"237":{"position":[[0,8],[9,8],[18,8],[27,6]]},"239":{"position":[[0,10],[11,9],[21,8],[30,6]]},"247":{"position":[[0,11]]},"249":{"position":[[0,10],[11,9],[21,6]]},"251":{"position":[[0,6],[7,8],[16,6],[23,1],[25,14],[40,4]]},"253":{"position":[[0,8],[9,6],[16,2],[19,7]]},"255":{"position":[[0,6],[7,1],[9,7]]},"257":{"position":[[0,7]]},"258":{"position":[[0,9],[10,9],[20,9]]},"260":{"position":[[0,9],[10,12],[23,8],[32,6]]},"263":{"position":[[0,10],[11,9]]},"265":{"position":[[0,6],[7,4]]},"269":{"position":[[0,10]]},"271":{"position":[[0,9],[10,1]]},"272":{"position":[[0,9],[10,9],[20,9],[30,6],[37,1],[39,7],[47,12]]},"274":{"position":[[0,10],[11,9],[21,6]]},"276":{"position":[[0,9],[10,1],[12,12]]},"280":{"position":[[0,7],[8,6],[15,7],[23,9],[33,1]]},"284":{"position":[[0,9]]},"288":{"position":[[0,12],[13,6]]},"292":{"position":[[0,8],[9,9]]},"294":{"position":[[0,9],[10,10]]},"296":{"position":[[0,9],[10,11]]},"301":{"position":[[0,10],[11,1],[13,7]]},"303":{"position":[[0,8],[9,6]]},"305":{"position":[[0,8],[9,6]]},"309":{"position":[[0,6],[7,2]]},"311":{"position":[[0,12],[13,7]]},"313":{"position":[[0,6],[7,2],[10,7],[18,6],[25,6]]},"315":{"position":[[0,6],[7,2],[10,7],[18,6]]},"317":{"position":[[0,6],[7,2],[10,13]]},"319":{"position":[[0,6],[7,2],[10,11]]},"321":{"position":[[0,6],[7,7],[15,11]]},"325":{"position":[[0,6],[7,6]]},"327":{"position":[[0,9],[10,6]]},"328":{"position":[[0,9],[10,9],[20,12]]},"331":{"position":[[0,8]]},"333":{"position":[[0,7]]},"334":{"position":[[0,8],[9,5],[15,6]]},"336":{"position":[[0,8],[9,7],[17,2],[20,6]]},"338":{"position":[[0,8],[9,9],[19,1],[21,9],[31,6],[38,1],[40,8],[49,8]]},"340":{"position":[[0,10],[11,8]]},"342":{"position":[[0,10],[11,8],[20,1],[22,9],[32,4]]},"344":{"position":[[7,7],[15,8],[24,2]]},"346":{"position":[[0,6],[7,6],[14,8]]}}}],["ado.recordset",{"_index":4,"t":{"160":{"position":[[0,13]]}}}],["allur",{"_index":6,"t":{"168":{"position":[[7,6]]}}}],["ci",{"_index":1,"t":{"56":{"position":[[0,2]]},"79":{"position":[[0,2]]}}}],["edt",{"_index":7,"t":{"271":{"position":[[12,3]]},"309":{"position":[[10,3]]}}}],["http",{"_index":3,"t":{"158":{"position":[[0,16]]}}}],["inlin",{"_index":9,"t":{"344":{"position":[[0,6]]}}}],["junit",{"_index":5,"t":{"166":{"position":[[7,5]]}}}],["markdown",{"_index":10,"t":{"344":{"position":[[27,8]]}}}],["workspac",{"_index":8,"t":{"272":{"position":[[60,11]]}}}],["yaxunit",{"_index":2,"t":{"109":{"position":[[24,7]]},"280":{"position":[[35,7]]}}}]],"pipeline":["stemmer"]}},{"documents":[{"i":2,"t":"Здесь мы будем размещать новости о выпусках релизов, небольшие заметки и прочее. Вы также можете добавлять свои посты делясь полезной информацией с сообществом. Для этого вам необходимо разместить его в каталоге documentation/blog Описание по созданию постов","s":"У нас появился блог","u":"/yaxunit/blog/2023/04/29/01-first","h":"","p":1},{"i":4,"t":"Release 23.04","s":"YaxUnit. Версия 23.04","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"","p":3},{"i":7,"t":"Новые ф-ии для удаления тестовых данных по ссылкам","s":"Тестовые данные","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#тестовые-данные","p":3},{"i":9,"t":"Восстановлена потерянная возможность задавать различное поведение для цепочки одинаковых вызовов Доступ к статистике вызовов методов при проверке Сброс статистики вызовов методов при нескольких \"прогонах\" в одном тесте Реализована возможность мокирования HTTP сервисов","s":"Мокирование","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#мокирование","p":3},{"i":11,"t":"Новое утверждение для сравнения коллекций (by @ViktorErmakov)","s":"Утверждения","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#утверждения","p":3},{"i":13,"t":"Создан статический сайт с документацией в удобном виде Обновлена и дополнена документация","s":"Документация","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#документация","p":3},{"i":15,"t":"Внесены доработки для более удобного использования в CI Доработан движок для работы в режиме без использования синхронных методов Внимание В ближайших версиях будет удален вариант точки входа в тестовый модуль ИсполняемыеСценарии с параметрами.","s":"Прочее","u":"/yaxunit/blog/2023/04/29/02-engine-release","h":"#прочее","p":3},{"i":17,"t":"Release 23.04","s":"EDT Test runner. Версия 23.04","u":"/yaxunit/blog/2023/04/29/03-plugin-release","h":"","p":16},{"i":19,"t":"Модернизирована панель просмотра ошибок тестов Реализована навигация между тестом и тестируемым методом Исправлена ошибка, при которой в дереве предметов отладки оставались записи Различные дополнения и правки в документации, включая исправление опечаток (спасибо @artbear) Исправлена ошибка конфликта с плагином git","s":"Новое в версии","u":"/yaxunit/blog/2023/04/29/03-plugin-release","h":"#новое-в-версии","p":16},{"i":21,"t":"Release 23.05","s":"YaxUnit. Версия 23.05","u":"/yaxunit/blog/2023/05/25/engine-release","h":"","p":20},{"i":24,"t":"Научили конструктор тестовых данных создавать данные в регистрах #69 Реализовано удаление тестовых данных созданных на клиенте #74 Добавлена возможность создания объекта без записи и формирование вариантов параметров #86 Реализована поддержка параметров заполнения для функции \"Фикция\" в тестовых данных #75 Сброс признака ОбменДанными.Загрузка после создании объекта через методы движка #92 Поддержка генератором тестовых данных создания группы #90 Возможность создавать несколько конструкторов тестовых данных #55 В конструктор тестовых данных добавлен метод заполнения обязательных полей фиктивными данными #93","s":"Тестовые данные","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#тестовые-данные","p":20},{"i":26,"t":"Использование предикатов при указании параметров мокируемого метода #98 Исправлена ошибка неправильного сравнение параметров при проверке вызовов Мокито #76. Спасибо @alexandr-yang Исправлена ошибка подбора реакции Мокито #62","s":"Мокито","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#мокито","p":20},{"i":28,"t":"Утверждения для проверки таблиц информационной базы #70","s":"Утверждения","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#утверждения","p":20},{"i":30,"t":"Расширение API для работы с запросами #94","s":"Запросы","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#запросы","p":20},{"i":32,"t":"Добавлена картинка подсистемы 16*16 #78. Спасибо @petypen Исправлены некоторые ошибки #85. Спасибо @potoyalo Добавлена настройки выполнения на уровень модуля #84","s":"Прочее","u":"/yaxunit/blog/2023/05/25/engine-release","h":"#прочее","p":20},{"i":34,"t":"Release 23.07","s":"YaxUnit. Версия 23.07","u":"/yaxunit/blog/2023/07/31/engine-release","h":"","p":33},{"i":37,"t":"Faker for YaxUnit (Генерация валидных бизнес), #88, #80. Спасибо @Daabramov","s":"Тестовые данные","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#тестовые-данные","p":33},{"i":39,"t":"Добавлены новые методы модуля ЮТЗапросы, #122. Спасибо @potoyalo","s":"Запросы","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#запросы","p":33},{"i":41,"t":"Переопределение обработчиков событий тестового модуля, #124. Спасибо @potoyalo Необязательное значение дополнительного свойства #106. Спасибо @alexandr-yang В репозиторий добавлена конфигурация для прогона тестов, #123","s":"Прочее","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#прочее","p":33},{"i":44,"t":"Исправлена ошибка определения предикатов при обучении, #108. Спасибо @dlyubanevich Исправлена ошибка анализа количества вызовов мокируемого метода, #118 Исправлена ошибка при мокировании метода вызываемого при установке параметров сеанса, #116","s":"Мокито","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#мокито","p":33},{"i":46,"t":"Исправлена ошибка проверки равенства значения соответствия, если ключом соответствия является не строка, #114. Спасибо @alexandr-yang","s":"Утверждения","u":"/yaxunit/blog/2023/07/31/engine-release","h":"#утверждения","p":33},{"i":48,"t":"Release 23.08","s":"YaxUnit. Версия 23.08","u":"/yaxunit/blog/2023/09/05/engine-release","h":"","p":47},{"i":51,"t":"Загрузка данных из табличного документа или таблицы markdown #133, документация. Спасибо @dlyubanevich Добавить возможность указывать тип фикции #121 Добавить возможность получать случайное значение перечисления #132 Тестовые данные, добавить метод СлучайныйИдентификатор #102","s":"Тестовые данные","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#тестовые-данные","p":47},{"i":53,"t":"Добавить в ассерты и предикаты поддержку проверки по регулярному выражению #138. Спасибо @Daabramov","s":"Утверждения","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#утверждения","p":47},{"i":55,"t":"Запуск и перезапуск тестов из предприятия #49, документация Пауза #136 Унифицированный механизм подключения внешних компонент - тихая установка, работа с отключенными синхронными вызовами.","s":"Прочее","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#прочее","p":47},{"i":57,"t":"Github CI, реализовано автотестирование движка под windows и linux #142 Вывод лога выполнения тестирования в консоль #144","s":"CI","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#ci","p":47},{"i":60,"t":"Подтягиваются глобальные общие модули #148. Спасибо @SeiOkami Исправлены выявленные ошибки #130. Спасибо @potoyalo","s":"Прочее","u":"/yaxunit/blog/2023/09/05/engine-release","h":"#прочее-1","p":47},{"i":62,"t":"Release 24.01","s":"YaxUnit. Версия 24.01","u":"/yaxunit/blog/2024/01/15/engine-release","h":"","p":61},{"i":65,"t":"Добавить возможность передать дополнительные свойства и режим загрузки в методы СоздатьЭлемент и СоздатьДокумент #181 Спасибо @SeiOkami Конструктор тестовых данных. Добавить метод перехода с заполнения табличной части на объект #167 Конструктор тестовых данных, добавить метод создания записи, который возвращает сам конструктор. #243","s":"Тестовые данные","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#тестовые-данные","p":61},{"i":67,"t":"Новое утверждение ОжидаетЧто(Объект).ИмеетМетод(ИмяМетода) #224 Добавить поддержку передачи значения по умолчанию #207 Спасибо @stolya Утверждения. Добавить поддержку проверки форматированных строк #199 Доработать утверждения ИБ для проверки строк неограниченной длины #187 Добавить поддержку предикатов в Утверждения.Содержит И Утверждения.НеСодержит #179 Утверждения для проверки исключений методов выполнять в транзакции #172 Перевод утверждений на использование предикатов #162 Сравнение табличных документов по содержимому #36","s":"Утверждения","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#утверждения","p":61},{"i":69,"t":"Мокито. Навести порядок с мокированием ссылочных объектов. #231 Настройка мокирования. Сократить настройку мокирования цепочки вызовов одного метода. #223","s":"Мокирование","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#мокирование","p":61},{"i":71,"t":"Поддержка англоязычных конфигураций #238 Спасибо @RichardTheLionJokes Вынести в ППИ метод получения свойства по по пути #214 Добавить метод получения движений документа #170 Сократить сообщение для сломанных тестов #169 Небольшые правки #165 Метод установки реквизита ссылки #158 Проверка зависших транзакций #143","s":"Прочее","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#прочее","p":61},{"i":74,"t":"Ошибка при чтении параметров запуска #241 Спасибо @1cgh Добавить поддержку работу инструмента под не полноправным пользователем #212 Спасибо @stolya Добавить возможность внутри тестов создавать внешнюю обработку по имени #193 Спасибо @SeiOkami Ошибка запуска тестов из файла настроек при запрещенных синхронных вызовах #188","s":"Запуск","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#запуск","p":61},{"i":76,"t":"Не работает мокирование методов обработки, при обучении через менеджер #217","s":"Мокирование","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#мокирование-1","p":61},{"i":78,"t":"Ошибка генерации случайного отрицательного числа без параметров #211","s":"Тестовые данные","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#тестовые-данные-1","p":61},{"i":80,"t":"Починить тесты движка для английской локали #160","s":"CI","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#ci","p":61},{"i":82,"t":"При поломке контекста движка в рамках теста возникает необработаная ошибка #234","s":"Прочее","u":"/yaxunit/blog/2024/01/15/engine-release","h":"#прочее-1","p":61},{"i":84,"t":"Release 24.02","s":"EDT Test runner. Версия 24.02","u":"/yaxunit/blog/2024/02/29/plugin-release","h":"","p":83},{"i":86,"t":"Реализована генерация тестовых модулей и тестов Реализована генерация моков для методов конфигурации Небольшие доработки UI Подробнее смотрите в документации","s":"Новое в версии","u":"/yaxunit/blog/2024/02/29/plugin-release","h":"#новое-в-версии","p":83},{"i":88,"t":"Исправлена ошибка \"Не удалось найти тестовый метод\"","s":"Исправлены ошибки","u":"/yaxunit/blog/2024/02/29/plugin-release","h":"#исправлены-ошибки","p":83},{"i":91,"t":"Release 24.02","s":"YaxUnit. Версия 24.02","u":"/yaxunit/blog/2024/02/29/engine-release","h":"","p":90},{"i":94,"t":"Добавлен метод генерации случайного номера телефона #175 Добавлен метод для получения случайного значения предопределенных данных #246 Внесен метод генерации случайного значения по описанию типов в публичный интерфейс. #250","s":"Тестовые данные","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#тестовые-данные","p":90},{"i":96,"t":"Метод утверждений ИмеетДлину не выводит в тексте ошибки фактическую длину (размер) #203","s":"Утверждения","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#утверждения","p":90},{"i":98,"t":"Добавить методы для мокирования ADO.RecordSet #222","s":"Мокирование","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#мокирование","p":90},{"i":100,"t":"Добавить запуск выделенных тестов в обработке запуска тестов по Ctrl+Enter #251. Спасибо @1cgh","s":"Запуск","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#запуск","p":90},{"i":102,"t":"Отчет в формате allure #255","s":"Отчет о тестировании","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#отчет-о-тестировании","p":90},{"i":104,"t":"Если в ИсполняемыеСценарии выпадает ошибка, то тесты просто не определяются и ошибка нигде не отображается #198 Использование метода ЮТест.Пропустить влечет запись кода 1 (ошибка) в файл с результатом проверки #216 Добавить DataProcessor.ЮТHTTPServiceRequest в подсистему ЮТМокирование #247 Метод в ВТранзакции() на уровне теста не работает корректно. Код не выполняется в транзакции. #253 Не корректно работает цепочка загрузок из макета #266","s":"Исправленные ошибки","u":"/yaxunit/blog/2024/02/29/engine-release","h":"#исправленные-ошибки","p":90},{"i":106,"t":"как тестировать веб-сервисы как тестировать локальные функции как подключать свои плагины/шаги/методы специфичные для своей базы поддержка англ.языка, линукса, Конфигуратора что за и зачем нужен Макито","s":"Кулинарная книга тестов","u":"/yaxunit/docs/cook-book/","h":"","p":105},{"i":108,"t":"Тестирование - это проверка системы на соответствие требованиям. Из этого следует, что при тестировании, у нас должны быть требования к тестируемой функциональности, сформулированные ожидания. Для описания ожиданий в тестах, использующих YAxUnit, применяется механизм утверждений, с помощью которых, разработчик описывает требования к тестируемому функционалу. Утверждения позволяют, не только фиксировать ожидания, но и помогают формировать: более читаемый и простой тест, формируют \"дружелюбные\" и понятные сообщения об ошибках, прививают единообразие у сокращают количество \"велосипедов\". Пример утверждения ЮТест.ОжидаетЧто(ДанныеЗаписи) .Свойство(\"Поставщик\").Равно(ДанныеОбъекта.Поставщик) .Свойство(\"Товары\") .ИмеетДлину(1) .Свойство(\"Товары[0].НомерСтроки\").Равно(2) .Свойство(\"Товары[0].Товар\").Равно(ДанныеОбъекта.Товары[0].Товар); В результате этой проверки (ошибочной) будет выброшено следующее исключение: Ожидали, что проверяемое значение Поступление товара 000000001 от 12.03.2024 3:06:17 содержит свойство Товары[0].НомерСтроки, которое равно 2, но это не так. А так оно будет выглядеть в EDT.","s":"Утверждения","u":"/yaxunit/docs/features/assertions/","h":"","p":107},{"i":110,"t":"Основной задачей утверждений является формирование и проверка наши ожидания. Например, сложение 2 и 3 должно вернуть нам 5. Можно перефразировать это требование (ожидание) - тест ожидает, что 2 + 3 равно 5. При помощи утверждений это превращается в следующий код - ЮТест.ОжидаетЧто(2 + 3).Равно(5). Вы можете проверить результат работы и без использования утверждений - Если 2 + 3 <> 5 Тогда ВызватьИсключение \"2 + 3 <> 5\";КонецЕсли; Но отличии от ручной проверки с использованием условий и исключений утверждения дают ряд преимуществ: Всегда, ну или почти, понятные сообщения об ошибках, которые помогают локализовать причину. Также вам не надо ломать голову, что написать в исключении. Тесты получаются более читаемыми, цепочки вызовов формируют, что-то вроде предложений. Не все проверки столько просты как в примере, есть предикаты, сравнение таблиц, проверка вложенных свойств и данных в информационной базе Ошибки утверждений помечаются другим типов ошибки, это позволяет понять упал тест (не совпало ожидание) или наш код сломался. В итоге: утверждений вещь полезная, изучите и используйте ее.","s":"Зачем нужны утверждения YAxUnit","u":"/yaxunit/docs/features/assertions/","h":"#зачем-нужны-утверждения-yaxunit","p":107},{"i":112,"t":"Проверки значений Проверки методов объекта на выброс исключений Проверки данных информационной базы Это базовые методы проверки, с помощью которых вы можете проверить любое поведение (или почти любое) системы. На их основе вы можете сформировать библиотеку своих \"бизнес\" утверждений, заточенных под ваше решение, что облегчит вам разработку тестов. Рекомендации Используйте отступы и форматирование для улучшения читаемости. Не забывайте указывать описания для проверок. Не стоит писать проверки ради проверок, проверяйте только то, что необходимо для кейса. Слишком большой код (цепочки утверждений в частности) сложно поддерживать, при необходимости разбейте его на блоки (методы).","s":"Возможности","u":"/yaxunit/docs/features/assertions/","h":"#возможности","p":107},{"i":114,"t":"Большая часть тестируемых методов так или иначе оставляет свой след в информационной базе, создает или изменяет записи - документы, регистры, справочники и так далее. Для проверки правильности работы таких методов нам необходимо проверить, что изменилось в базе. В этом могут помочь утверждения работающие с записями ИБ. Доступ к этим утверждениям обеспечивает метод ЮТест.ОжидаетЧтоТаблицаБазы, который возвращает инициализированный модуль ЮТУтвержденияИБ, реализующий работу с утверждениями для ИБ. Утверждения ИБ позволяют проверить наличие и отсутствие записей по различным условиям, которые задаются с помощью предикатов ЮТест.ОжидаетЧтоТаблицаБазы(\"Справочник.Товары\") .НеСодержитЗаписи(); // В базе нет товаров ЮТест.ОжидаетЧтоТаблицаБазы(\"Справочник.Товары\") .СодержитЗаписи(); // В базе есть товары ЮТест.ОжидаетЧтоТаблицаБазы(\"Справочник.Товары\") .СодержитЗаписи(ЮТест.Предикат() // В базе есть товары определенного поставщика .Реквизит(\"Поставщик\").Равно(ДанныеСправочника.Поставщик)); ЮТест.ОжидаетЧтоТаблицаБазы(\"РегистрСведений.КурсыВалют\") .НеСодержитЗаписи(ЮТест.Предикат() // Курс валюты не установлен .Реквизит(\"Валюта\").Равно(ДанныеРегистра.Валюта) .Реквизит(\"Период\").БольшеИлиРавно(ДанныеРегистра.Период));","s":"Утверждения для проверки наличия данных информационной базы","u":"/yaxunit/docs/features/assertions/assertions-db","h":"","p":113},{"i":116,"t":"СодержитЗаписи - проверяет наличие записей по условиям НеСодержитЗаписи - проверяет отсутствие записей по условиям СодержитЗаписиСНаименованием - проверяет наличие в таблице записей с указанным наименованием СодержитЗаписиСКодом - проверяет наличие в таблице записей с указанным кодом СодержитЗаписиСНомером - проверяет наличие в таблице записей с указанным номером НеСодержитЗаписиСНаименованием - проверяет отсутствие в таблице записей с указанным наименованием НеСодержитЗаписиСКодом - проверяет отсутствие в таблице записей с указанным кодом НеСодержитЗаписиСНомером - проверяет отсутствие в таблице записей с указанным номером","s":"Доступные методы","u":"/yaxunit/docs/features/assertions/assertions-db","h":"#доступные-методы","p":113},{"i":118,"t":"Тест создания справочника // Проверка и подготовка контекста АртикулТовара = ЮТест.Данные().СлучайнаяСтрока(); УсловиеПоискаТовара = ЮТест.Предикат() .Реквизит(\"Артикул\").Равно(АртикулТовара) .Получить(); // Необходимо для сохранения сформированного предиката в переменную ЮТест.ОжидаетЧтоТаблицаБазы(\"Справочник.Товары\", \"Товар уже существует в базе\") .НеСодержитЗаписей(УсловиеПоискаТовара); // Выполнение тестируемого метода СоздатьТовар(АртикулТовара); // Проверка результата ЮТест.ОжидаетЧтоТаблицаБазы(\"Справочник.Товары\", \"Товар не был создан\") .СодержитЗаписи(УсловиеПоискаТовара); // Проверим заполнение нового элемента СозданныйТовар = ЮТЗапрос.Запись(\"Справочник.Товары\", УсловиеПоискаТовара); ЮТест.ОжидаетЧто(СозданныйТовар, \"Данные нового товара\") .Заполнено() .Свойство(\"Наименование\").Заполнено() .Свойство(\"Код\").Заполнено() .Свойство(\"Артикул\").Заполнено(); Проверка заполнения Не рекомендую использовать ЮТест.ОжидаетЧтоТаблицаБазы проверки заполнения созданных/измененных данных. Лучше сначала получить запись используя ЮТЗапрос.Запись и с помощью ЮТест.ОжидаетЧто проверить ее заполнение. Разница будет в тексте ошибки: ЮТест.ОжидаетЧтоТаблицаБазы скажет, что запись в базе отсутствует, без разницы, был ли создан товар или он был некорректно заполнен. ЮТЗапрос.Запись + ЮТест.ОжидаетЧто позволит отдельно проверить наличе записи в базе и корректность заполнения. При отсутствии будет выдана ошибка, что данные не заполнены, а при некорректном заполнении сообщит, какое свойство не заполнено.","s":"Примеры","u":"/yaxunit/docs/features/assertions/assertions-db","h":"#примеры","p":113},{"i":120,"t":"YAxUnit предоставляет относительно богатый набор инструментов для помощи разработчикам в написании тестов.","s":"Возможности YAxUnit","u":"/yaxunit/docs/features/","h":"","p":119},{"i":122,"t":"Описание, API Создание тестов начинается с регистрации их в движке, необходимо рассказать движку, какие имеются тесты, как их запускать, с какими параметрами. Для этого используется обязательный предопределенный экспортный метод ИсполняемыеСценарии Процедура ИсполняемыеСценарии() Экспорт ЮТТесты.Добавить... КонецПроцедуры Подробнее смотрите в описании.","s":"Регистрация и настройка выполнения тестов","u":"/yaxunit/docs/features/","h":"#регистрация-и-настройка-выполнения-тестов","p":119},{"i":124,"t":"Большая часть методов программного интерфейса YAxUnit собрана в модуле ЮТест. Этот модуль является точкой входа в API используемый в тестах, он предоставляет доступ к другим модулям движка: ЮТест.Данные() - Возвращает модуль работы с тестовыми данными ЮТест.ОжидаетЧто() - Возвращает модуль работы с утверждениями ЮТест.ОжидаетЧтоТаблицаБазы() - Возвращает модуль работы с утверждениями для проверки объектов информационной базы ЮТест.Контекст() - Возвращает модуль работы с контекстом ЮТест.Предикат() - Возвращает конструктор предикатов ЮТест.Варианты() - Возвращает конструктор вариантов прогона теста.","s":"Реализация тестов","u":"/yaxunit/docs/features/","h":"#реализация-тестов","p":119},{"i":126,"t":"Описание, API Почти все тесты опираются на данные, будь то параметры вызова или записи информационной базы. Вам придется эти данные создавать. Настоятельно рекомендую создавать данные программно, не загрузкой из макетов или вручную, а именно программно генерировать. О причинах можете почитать в статье о тестовых данных Движок предоставляет различные инструменты для создания данных: ЮТест.Данные().КонструкторОбъекта, с помощью которого вы можете создать объект информационной базы с необходимыми реквизитами. Создание пустышек - примитивных объектов с минимальным заполнения. ЮТест.Данные().СоздатьЭлемент ЮТест.Данные().СоздатьДокумент ЮТест.Данные().СоздатьГруппу Возможна загрузка из макета. Вы можете создать все необходимые данные загрузив их из макета Работа с временными файлами. Подражатель, для генерации правдоподобных данных. Генерация случайных значений. ЮТест.Данные().КонструкторОбъектаXDTO, с помощью которого вы можете создать XDTO объект.","s":"Создание тестовых данных","u":"/yaxunit/docs/features/","h":"#создание-тестовых-данных","p":119},{"i":128,"t":"Описание, API При тестировании полезно минимизировать \"внешнее\" воздействие на проверяемый функционал. Например, не использовать внешний http сервис, а эмулировать взаимодействие с ним, либо вместо выполнения запроса к базе данных вернуть предопределенный результат или вместо документа в качестве параметра передать структуру. Те заменить какой-либо объект обманкой, упрощенной его версией. Мокито позволяет настроить/изменить поведение нужных методов конфигурации Вернуть нужный результат для определенных параметров. ВыброситьИсключение при в нужный момент. Пропустить метод (не выполнять). Просто Наблюдать (собирать статистику вызовов) за методом. За настройку условий срабатывания тех или иных действий отвечает метода Когда ЮТест.Данные().HTTPСервисЗапрос() позволяет настроить и эмулировать входящий запрос http-сервиса. Если логика обработки запросов вынесена в отдельный общий модуль, то вы с легкостью с его помощью сможете протестировать ваш сервис без использования веб-сервера. ЮТест.Данные().ADORecordSet() позволяет протестировать \"прямые\" запросы к SQL.","s":"Мокирование","u":"/yaxunit/docs/features/","h":"#мокирование","p":119},{"i":130,"t":"Описание Проверка результата работы функции. Для проверки переменных (результатов методов) реализованы базовые утверждения, подробнее со списком возможностей можете ознакомиться в сгенерированном описании api. Если метод должен изменить данны в информационной базе, то эти изменения можно проверить с помощью утверждений ИБ, описании api утверждений. В некоторых случаях необходимо проанализировать какие методы и с какими параметрами вызывались. Здесь вам поможет проверка статистики вызовов, который собирает Мокито","s":"Проверка ожиданий","u":"/yaxunit/docs/features/","h":"#проверка-ожиданий","p":119},{"i":132,"t":"Изменение данных в базе ЮТест.Данные().УстановитьЗначениеРеквизита ЮТест.Данные().УстановитьЗначенияРеквизитов Предикаты Получение данных из базы и работа с запросами Варианты вызова. Чтобы повысить покрытие метода тестом можно сформировать наборы (варианты) параметров вызова метода. Для упрощения работы с ними вы можете воспользоваться методом ЮТест.Варианты() ЮТест.Пропустить ЮТест.Пауза ЮТест.ВывестиВКонсоль","s":"Методы-помощники","u":"/yaxunit/docs/features/","h":"#методы-помощники","p":119},{"i":134,"t":"При возникновении трудностей с написанием тестов вы всегда можете Посмотреть примеры тестов движка Тесты других открытых проектов bellerage-ssl","s":"Примеры","u":"/yaxunit/docs/features/","h":"#примеры","p":119},{"i":136,"t":"YAxUnit для взаимодействия между компонентами использует события. Разработчику, который пишет тесты могут быть интересы события исполнения тестов. В обработчиках событий полезно размещать логику по настройке тестового окружения: Установка констант и других настроек. Создание тестовых данных. Удаление созданных данных. Если результат обработки события необходимо передать в тест, то это можно сделать с помощью контекста Виды событий ПередВсемиТестами - Это событие вызывается перед прогонов тестов модуля в каждом контексте. ПередТестовымНабором - Это событие вызывается перед прогоном тестов набора (всегда создается набор по умолчанию, если тестовые наборы не создавались, то в набор по умолчанию будут включены все тесты модуля) ПередКаждымТестом - Это событие вызывается перед прогоном каждого теста. ПослеКаждогоТеста - Это событие вызывается после прогона тестов набора. Транзакция При использовании транзакций (ЮТТесты.ВТранзакции()) события ПередКаждымТестом и ПослеКаждогоТеста включаются в транзакцию. Другие события выполняются вне транзакции. ПослеТестовогоНабора - Это событие вызывается после прогона каждого теста. ПослеВсехТестов - Это событие вызывается после прогона всех тестов модуля для контекста. (после всех клиентских, либо после всех серверных) Для обработки этих событий необходимо в тестовом модуле разместить одноименный экспортный метод без параметров. Обработчики могут вызываться дважды Важной особенностью всех событий, связанных с исполнением тестов, это то что они могут вызываться дважды - для клиента и для сервера. Если у нас есть клиент-серверный модуль с тестами доступными и на клиенте, и на сервер, то события будет вызвано дважды - и перед запуском клиентских, и перед запуском серверных тесов. Это касается всех событий, и события ПередВсемиТестами, и события ПослеКаждогоТеста При необходимости разработчик может переопределить обработчики событий при регистрации тестов, вызвав Перед и/или После и указав имя нужного метода. Процедура ИсполняемыеСценарии() Экспорт ЮТТесты .Перед(\"ПодготовитьДанныеДляТестов\") // Переопределение обработчика выполняемого перед прогоном тестов модуля .После(\"ОчиститьДанныеТестов\") // Переопределение обработчика выполняемого после прогона тестов модуля .ДобавитьТестовыйНабор(\"МойНаборТестов\") .ДобавитьТест(\"МойПервыйТест\") .ДобавитьТест(\"МойВторойТест\") .Перед(\"ПодготовитьДанныеДляПервогоТеста\") // Переопределение обработчика для конкретного теста .ДобавитьТестовыйНабор(\"МойДругойНаборТестов\") .Перед(\"ПодготовитьДанныеДругогоНабора\") // Переопределение обработчика вызываемого перед прогоном набора тестов .ДобавитьТест(\"МойТретийТест\") КонецПроцедуры","s":"События","u":"/yaxunit/docs/features/events","h":"","p":135},{"i":139,"t":"Одним из важнейших блоков работы тестового движка является механизм контекстов. Он позволяет: Хранить промежуточные данные и обеспечивать работу механизма текучих выражений. Передавать между тестами необходимые данные. Удалять тестовые данные. И имеет несколько ограничений: Не синхронизируется между клиентом и сервером. Тестовые контексты имеют ограниченное время жизни. Например, контекст теста \"живет\" только в рамках теста и событиях \"ПередКаждымТестом\", \"ПослеКаждогоТеста\". Для различных механизмов движка существуют различные контексты, такие как контекст утверждений, контекст теста и тд.","s":"Механизм контекстов","u":"/yaxunit/docs/features/context","h":"#механизм-контекстов","p":137},{"i":141,"t":"Разработчику тестов будут интересны следующие контексты: Контекст теста (ЮТест.КонтекстТеста) - живет в рамках одного теста. Доступен в каждом тесте и в обработчиках событий ПередКаждымТестом ПослеКаждогоТеста Контекст тестового набора (ЮТест.КонтекстТестовогоНабора) - живет в рамках набора тестов. Доступен в каждом тесте набора и в обработчиках событий ПередТестовымНабором ПослеТестовогоНабора ПередКаждымТестом ПослеКаждогоТеста Контекст тестового модуля (ЮТест.КонтекстМодуля) - живет в рамках тестового модуля. Доступен в каждом тесте модуля и в обработчиках событий ПередВсемиТестами ПослеВсехТестов ПередТестовымНабором ПослеТестовогоНабора ПередКаждымТестом ПослеКаждогоТеста На каждом уровне исполнения есть возможность переопределить обработчики событий соответствующего контекста исполнения при помощи методов Перед() и После(). Настроенный обработчик события будет вызван вместо основного. Пример: ЮТТесты .ДобавитьТестовыйНабор(\"Набор1\") // Будет вызван основной обработчик ПередТестовымНабором() .ДобавитьТест(\"Тест1\") .ДобавитьТестовыйНабор(\"Набор2\").Перед(\"Перед_Набор2\") // Будет вызван обработчик Перед_Набор2() .ДобавитьТест(\"Тест2\");","s":"Контексты тестового модуля","u":"/yaxunit/docs/features/context","h":"#контексты-тестового-модуля","p":137},{"i":143,"t":"Предикаты это довольно мощный и универсальный инструмент. С помощью предикатов вы формируете набор условий, сродни отбору. Который можно использовать: В утверждениях для проверки коллекций В утверждениях для проверки записей базы Для получения данных базы Для указания условий при обучении Мокито Предикаты расширяют и унифицируют функциональность тестового движка. Механизм предикатов (ЮТест.Предикат): позволяет формировать наборы условий (отборы) и передавать их в качества параметров; построен по модели текучих выражения и имеет схожий с базовыми утверждениями синтаксис (ЮТест.ОжидаетЧто()); позволяет упростить и унифицировать многие механизмы движка, некоторые еще только в планах; а за счет этого, расширение функциональности предикатов автоматические расширяет функциональность многих механизмов движка. Например, нам нужно проверить формирование записей в регистре. Процедура АктуализацияУведомлений() Экспорт // Тест удостовериться в отсутствии нужных записей перед вызовом метода // Вызовет метод формирующий записи в регистре // Проверит наличие сформированных записей // А также проверит записи на соответствие требований ИмяРегистра = \"РегистрСведений.ОповещенияПользователя\"; Объект = ТестовыеДанные.Объект(); // Для этого мы формируем отбор поиска записей Отбор = ЮТест.Предикат() .Реквизит(\"Источник\").Равно(Объект) .Реквизит(\"ТипОповещения\").Равно(Справочники.ТипыОповещенийПользователя.Уведомление) .Получить(); // По этому отбору проверим отсутствие нужных записей ЮТест.ОжидаетЧтоТаблицаБазы(ИмяРегистра) .НеСодержитЗаписи(Отбор); УведомленияВызовСервера.АктуализацияУведомлений(); // А после вызова метода - присутствие ЮТест.ОжидаетЧтоТаблицаБазы(ИмяРегистра) .СодержитЗаписи(Отбор); // Также получим сами записи используя тот же отбор ДанныеУведомления = ЮТЗапросы.Запись(ИмяРегистра, Отбор); ЮТест.ОжидаетЧто(ДанныеУведомления) .Свойство(\"Прочитано\").ЭтоЛожь() .Свойство(\"Пользователь\").Равно(Справочники.ГруппыОповещенийПользователей.Инженер); КонецПроцедуры","s":"Предикаты","u":"/yaxunit/docs/features/predicates","h":"","p":142},{"i":145,"t":"Проверка коллекции ЮТест.ОжидаетЧто(Коллекция) .ЛюбойЭлементСоответствуетПредикату(ЮТест.Предикат() .Реквизит(\"Число\").Равно(2)); // Проверят, что в коллекции есть элементы с реквизитом `Число`, которое равно `2` ЮТест.ОжидаетЧто(Коллекция) .Содержит(ЮТест.Предикат() .Реквизит(\"Число\").Равно(2)); // Тоже самое, что и проверка выше ЮТест.ОжидаетЧто(Коллекция) .КаждыйЭлементСоответствуетПредикату(ЮТест.Предикат() .Заполнено().ИмеетТип(\"Массив\")); // Проверят, что каждый элемент коллекции это заполненный массив ЮТест.ОжидаетЧто(Коллекция) .НеСодержит(ЮТест.Предикат() .Реквизит(\"Число\").Равно(2)); // Проверят, что в коллекции нет элементов с реквизитом `Число`, которое равно `2` Описания параметров метода при мокировании Например, имеем метод, который принимает в параметрах структуру. Необходимо вернуть 2 разных результата в зависимости от значения реквизита входной структуры. Мокито.Обучение(Модуль) .Когда(Модуль.Посчитать(ЮТест.Предикат() .Реквизит(\"Оператор\").Равно(\"Сложить\"))) .ВернутьРезультат(Результат1) .Когда(Модуль.Посчитать(ЮТест.Предикат() .Реквизит(\"Оператор\").Равно(\"Вычесть\"))) .ВернутьРезультат(Результат2); Утверждения, проверяющие данные в базе на основании предикатов. ЮТест.ОжидаетЧтоТаблица(\"Справочник.Товары\").СодержитЗаписи( ЮТест.Предикат() .Реквизит(\"Наименование\").Равно(\"Товар 1\") .Реквизит(\"Ссылка\").НеРавно(Исключение) ); Получение записей из базы ДанныеТовара = ЮТЗапросы.Запись(\"Справочник.Товары\", ЮТест.Предикат() .Реквизит(\"Наименование\").Равно(\"Товар 1\") .Реквизит(\"Ссылка\").НеРавно(Исключение));","s":"Примеры использования","u":"/yaxunit/docs/features/predicates","h":"#примеры-использования","p":142},{"i":148,"t":"Предикаты как и большинство механизмов построены на текучих выражениях с сохранением состояния в глобальном контексте. Это приводит к тому, что вы не можете сразу использовать несколько предикатов, например Мокито.Обучение(Модуль) .Когда(Модуль.СделатьЧтоТо( ЮТест.Предикат().ИмеетТип(\"Строка\"), ЮТест.Предикат().ИмеетТип(\"Число\"))) .ВернутьРезультат(Результат1); В этом примере 1С сначала вычислит выражения для всех параметров, а потом передаст их в метод и мы получим для обоих параметров один и тот же предикат, ожидающий тип Число. Потому что состояние первого предиката будет заменено вторым. Для обхода этой проблемы можно использовать метод Получить, который возвращает текущее состояние. Мокито.Обучение(Модуль) .Когда(Модуль.СделатьЧтоТо( ЮТест.Предикат().ИмеетТип(\"Строка\").Получить(), ЮТест.Предикат().ИмеетТип(\"Число\"))) .ВернутьРезультат(Результат1); Такая же история при сохранение предикатов в переменные. ПроверкаСтрока = ЮТест.Предикат().ИмеетТип(\"Строка\"); ПроверкаЧисло = ЮТест.Предикат().ИмеетТип(\"Число\"); ПроверкаСтрока и ПроверкаЧисло будут равны и содержать одинаковые условия. Проблему также можно обойти используя метод Получить. ПроверкаСтрока = ЮТест.Предикат().ИмеетТип(\"Строка\").Получить(); ПроверкаЧисло = ЮТест.Предикат().ИмеетТип(\"Число\").Получить();","s":"Особенности контекста","u":"/yaxunit/docs/features/predicates","h":"#особенности-контекста","p":142},{"i":150,"t":"Сам модуль предикатов используется только для формирования утверждений/условий. Реализацией проверок и формированием условий занимаются другие модули и возможна ситуация, когда некоторые предикаты еще не реализованы или не поддерживаются каким-либо механизмом. Например, проверка заполненности не поддерживается запросами.","s":"Особенности реализации","u":"/yaxunit/docs/features/predicates","h":"#особенности-реализации","p":142},{"i":153,"t":"Мокирование - это инструмент/подход для изоляции тестируемых частей кода и контроля над зависимостями. При мокировании, мы вместо реальных (продуктовых) объектов подсовываем моки - подделки, фальшивки. Это \"двойники\" реальных объектов. Например: Вместо, реального почтового сервера мы можем поднять в докере легковесный smtp сервер и настроить систему на взаимодействие с ним Используя SOAP UI/Postman/Wiremock или что-то другое мы сможем протестировать систему без использования реального сервиса Не редко вместо поднятия промышленной СУБД в тестах используются легковесные встраиваемые СУБД (sql lite, h2) Все это относится к мокированию и позволяет упростить процесс поднятия окружения для тестов. Но также моки могут быть использованы непосредственно при тестировании, например вместо реального документа в тестируемый метод вы можете передать структуру, содержащую все нужные реквизиты (Dummy, болванка), либо обработку с нужными методами (Мок), либо что-то иное, что позволяет вам упростить тест. Например, при тестировании http-сервисов передаем мок, который \"притворяется\" запросом, реализует интерфейс объекта HTTPСервисЗапрос. Основное ограничение такого подхода - обработки и структуры должны передаваться в качестве параметров в тестируемый метод. Если нам очень необходимо подменить объект, который вычисляется внутри метода, то приходится попотеть, либо передавать его в качестве доп. параметров и закладывать работы с ним в конфигурации, либо с помощью расширения возвращать жестко закодированное значение. Каждый раз, в таких случаях, приходится что-то изобретать и выдумывать способ внедрения моков.","s":"Вводная","u":"/yaxunit/docs/features/mocking/","h":"#вводная","p":151},{"i":155,"t":"Для унификации подхода к работе с моками мы разработали инструмент Мокито, который облегчает тестирование. Он предоставляет подход к внедрению моков программный интерфейс для управления моками. Например, у нас есть метод отправки СМС, через шлюз. Он использует запросы к внешнему ресурсу, СМС шлюзу, который необходим в текущей схеме. Для решения этой проблемы мы можем: Отправлять реальные СМС в тестах Использовать тестовый шлюза, если провайдер предоставляет такую возможность Поднять мокирующий web-server Заложить в код обходы для тестирования Воспользоваться Мокито, написав в тесте: Ответ = Новый HTTPСервисОтвет(200); Ответ.УстановитьТелоИзСтроки(СериализацияJSON.ЗначениеВСтроку(Новый Структура(\"id, status\", \"9999\", \"delivered\"))); Мокито.Обучение(ОтправкаСМС_Провайдер1) .Когда(\"ПослатьСообщение\") // Теперь, вместо реального запроса к шлюзу .Вернуть(Ответ) // метод всегда будет возвращать нужный нам ответ .Прогон(); РоботОтправки.ОтправкаСМС(); В это случае, при отправке, не будут выполнятся запросы к шлюзу, вместо этого метод ПослатьСообщение вернет предопределенный результат. Подробнее о возможностях и принципах работы с Мокито, вы можете почитать в отдельной статье.","s":"Мокито","u":"/yaxunit/docs/features/mocking/","h":"#мокито","p":151},{"i":157,"t":"Мокито помогает изменять логику работы системы для изоляции тестируемого метода и уменьшения влияния других компонентов системы. Он закрывает множество задач, но иногда возникают задачи когда даже он не может помочь.","s":"Моки","u":"/yaxunit/docs/features/mocking/","h":"#моки","p":151},{"i":159,"t":"Первый пример с которым мы столкнулись - тестирование http-сервисов. Сервис на вход принимает объект HTTPСервисЗапрос, который невозможно создать и настроить из кода 1С. Необходимо было либо публиковать решение на web-сервере, либо дорабатывать код, чтобы он принимал структуры. Несколько первых тестов были созданы с помощью структур. Позже возникла идея реализовать мок, который бы походил на HTTPСервисЗапрос, реализовывал его интерфейс, и который можно настроить из теста. С ним тестировать сервисы стало намного проще и удобнее, позже его включили в YAxUnit, ЮТест.Данные().HTTPСервисЗапрос Возможности: Реализует методы HTTPСервисЗапрос Свойства HTTPМетод \\ HTTPMethod БазовыйURL \\ BaseURL Заголовки \\ Headers ОтносительныйURL \\ RelativeURL ПараметрыURL \\ URLParameters ПараметрыЗапроса \\ QueryOptions Методы ПолучитьТелоКакДвоичныеДанные() \\ GetBodyAsBinaryData() ПолучитьТелоКакПоток() \\ GetBodyAsStream() ПолучитьТелоКакСтроку() \\ GetBodyAsString() Имеет методы настройки, реализованные в виде текучих выражений Установка тела УстановитьТелоКакДвоичныеДанные() УстановитьТелоКакСтроку() УстановитьТелоКакСтрокуJSON() Методы установки свойств ДобавитьЗаголовок() ДобавитьПараметрЗапроса() ДобавитьПараметрURL() Метод() БазовыйURL() ОтносительныйURL()","s":"HTTPСервисЗапрос","u":"/yaxunit/docs/features/mocking/","h":"#httpсервисзапрос","p":151},{"i":161,"t":"При тестировании прямых запросов к СУБД также возникает потребность использовать мок, для эмуляции чтения из ADO.RecordSet. Для таких кейсов был добавлен ЮТест.Данные().ADORecordSet реализующий интерфейс ADO.RecordSet Свойства EOF BOF AbsolutePosition RecordCount Fields Методы MoveFirst() MoveNext() Close() Fields() EOF() BOF() Методы настройки, реализованные в виде текучих выражений ЮТест.Данные().ADORecordSet - принимает информацию о колонках Добавить() - добавляет новую строку значений","s":"ADO.RecordSet","u":"/yaxunit/docs/features/mocking/","h":"#adorecordset","p":151},{"i":163,"t":"При возникновении подобных ситуаций, когда для тестов вам нужны объекты с какой-то логикой/методами, по аналогии с примерами выше вы без проблем сможете создать нужные вам моки. Это очень сильно облегчает тестирование и позволяет вам избежать лишнего вмешательства в тестируемый код.","s":"Создание своих моков","u":"/yaxunit/docs/features/mocking/","h":"#создание-своих-моков","p":151},{"i":165,"t":"Важным этапом тестирования является формирование удобного и информативного отчета. YAxUnit предоставляет возможность работать с различными видами отчетов. Отчет в формате JUnit - используется при разработке тестов в EDT, позволяет быстро увидеть результат тестирования прямов в IDE, позволяет переходить по стеку ошибок и сравнивать фактическое и ожидаемое значение. Отчет в формате Allure - чаще всего применяется в CI, имеет богатую функциональность: фильтрация, различные группировки, история и статистика. Отчет в режиме 1С:Предприятия - удобен если вы не используете (или не можете использовать) по какой-либо причине EDT. Указать необходимый формат вы может в параметрах запуска, либо в форме настроек. По умолчанию используется формат JUnit.","s":"Отчеты о тестировании","u":"/yaxunit/docs/features/reports","h":"","p":164},{"i":167,"t":"Широко распространенный формат отчетов о тестировании. Используется для интеграции с плагином запуска тестов из EDT. В отличии от Allure позволяет хранить и сравнивать ожидаемое и фактическое значения. Подходит для процесса разработки/отладки тестов.","s":"Формат JUnit","u":"/yaxunit/docs/features/reports","h":"#формат-junit","p":164},{"i":169,"t":"Чаще применяется в CI как более универсальный и удобный способ организации отчетов о тестировании. Позволяет добавлять различную мета информацию, которая будет отображаться в отчете, имеет различные способы группировки, историю запусков и многое другое. Группировка по тестовым наборам Группировка по функциональности","s":"Формат Allure","u":"/yaxunit/docs/features/reports","h":"#формат-allure","p":164},{"i":171,"t":"Тестовые данные, на мой взгляд, одна из самых сложных тем в тестировании решений на базе 1С:Предприятия. Почти все алгоритмы системы опираются на данные базы, они их создают, обрабатывают, изменяют и используют в логике работы. Для корректного проведения одного документа может понадобиться множество записей справочников, настройки/остатки из регистров, значения констант и так далее. Все это вам придется создать в тесте, который проверит корректность проведения этого документа. И это будет проверка только одного кейса. Для проверки проведения в других условиях вам придется создать еще пачку данных и так далее. Можно сократить объемы создаваемых данных используя мокито и отключая часть логики для каких-то кейсов, но все равно данных понадобится много. Для облегчения работы с данными вам необходимо продумать схему, как вы будете с ними работать, откуда брать, как создавать, искать и так далее.","s":"Тестовые данные","u":"/yaxunit/docs/features/test-data/","h":"","p":170},{"i":173,"t":"Ручное наполнение тестовой базы (мы предварительно создаем все что необходимо для тестов в базе, а потом используем её для прогона тестов) Использование файлов с данными (макеты - сгенерированные в нужном формате файлы с описанием тестовых данных, загружаемые при выполнении тестов) Программное создание нужных данных внутри теста У каждого из вариантов есть свои плюсы и минусы и при грамотной компоновке можно достичь наилучшего результата. Ручное наполнение базы не учитывает последующие доработки системы, нужна миграция на новые алгоритмы и структуру. А также в этом случае нам необходимо завязываться на конкретные записи в системе, и при их изменении тестом мы можем сломать другие тесты. Поэтому, предварительное наполнение базы должно быть минимальным. В случае использования макетов данных возникают некоторые трудности с их доработкой и вариативностью, например, в новом тесте нужны данные из макета, но с некоторыми изменениями. В этом случае нам потребуется создавать новый макет или проверять, не сломают ли наши изменения другие тесты. Также при таком подходе сложно контролировать и искать какие макеты используются и кем. Программное создание тестовых данных увеличивает время и сложность теста. Если грамотно распределить тестовые данные на способы создания, можно добиться оптимального результата. Например, статичные данные создать вручную, сложные кейсы данных засунуть в макеты, а для программного создания реализовать методы-конструкторы, которые будем переиспользовать. Таким образом, сможем уйти от минусов того или иного подхода или минимизировать их вред. Ниже хочу рассказать как мы работает с данными.","s":"Подходы к работе с данными","u":"/yaxunit/docs/features/test-data/","h":"#подходы-к-работе-с-данными","p":170},{"i":175,"t":"Для прогона тестов используется предварительно подготовленный образ базы, на котором гоняются тесты как в CI, так и на базах разработки. Образ базы - это выгрузка (файл dt) или сама база (файл 1cd), на основании которого копированием или загрузкой создается база для прогона тестов.","s":"Образ тестовой базы","u":"/yaxunit/docs/features/test-data/","h":"#образ-тестовой-базы","p":170},{"i":177,"t":"Образ предварительно настраивается вручную (либо методами обновления/миграции), вводится минимально необходимая информация и базовые настройки. В образе не должно быть документов, справочников и прочего, с чем обычно имеют дело пользователи, только минимальный набор неизменных данных.","s":"Ручное наполнение тестовой базы","u":"/yaxunit/docs/features/test-data/","h":"#ручное-наполнение-тес�товой-базы","p":170},{"i":179,"t":"Все остальные данные тесты готовят для себя сами. В большинстве случаев используется программное создание данных Данные создаются кодом, используя механизмы движка Используется генерация случайных значений, где это не противоречит требования Тесты стараются прибрать за собой, используя транзакции или механизм удаления данных Созданы отдельные модули-помощники реализующие типовые кейсы данных Благодаря программной генерации данных вы получаете​ Старый добрый код 1С, который понятен и не требует изучения дополнительных материалов Переиспользование и кастомизация алгоритмов генерации данных - общие модули, экспортные методы, параметры. Возможность создавать новые уникальные данные Можете использовать уже готовую логику тестируемого решения Общий модуль ТестовыеДанные Функция НовыйТовар() Экспорт // Логика генерации КонецФункции Функция НовыйПоставщик() Экспорт // Логика генерации КонецФункции Функция НовоеПоступлениеТовара(Склад, Знач Товар = Неопределено, Знач Поставщик = Неопределено) Экспорт Если Поставщик = Неопределено Тогда Поставщик = НовыйПоставщик(); КонецЕсли; Если Товар = Неопределено тогда Товар = НовыйТовар(); КонецЕсли; Возврат ЮТест.Данные().КонструкторОбъекта(Документы.ПоступлениеТоваров) .Установить(\"Склад\", Склад) .Установить(\"Поставщик\", Поставщик) .ФикцияОбязательныхПолей(); .ТабличнаяЧасть(\"Товары\") .ДобавитьСтроку() .Установить(\"Номенклатура\", Товар) .Фикция(\"Количество\") .Фикция(\"Цена\") .Провести(); КонецФункции Использование генерации случайных значений позволяет​ Сократить количество кода Акцентировать внимание на \"важных\" значениях Например, в тесте ниже важно, чтобы товар и склад в документах совпадали, дата расхода должна быть больше прихода, количество расхода меньше прихода. Тест Склад = ТестовыеДанные.НовыйСклад(); Товар = ТестовыеДанные.НовыйТовар(); ДатаПоступления = ЮТест.Данные().СлучайнаяДата(); ДатаРасхода = ЮТест.Данные().СлучайнаяДатаПосле(ДатаПоступления); КоличествоРасход = ЮТест.Данные().СлучайноеПоложительноеЧисло(100); КоличествоПоступления = КоличествоРасход + ЮТест.Данные().СлучайноеПоложительноеЧисло(100); ТестовыеДанные.НовоеПоступлениеТовара(Склад, Товар, КоличествоПоступления, ДатаПоступления); ТестовыеДанные.НовыйРасходТовара(Склад, Товар, КоличествоРасход, ДатаРасхода); // Проверки Вскрыть неожиданные проблемы, за счет случайности данных вы покрываете больше кейсов. Правда это имеет и негативный эффект - тесты могут \"фонить\", то падать, то успешно проходить, а также сложнее воспроизвести упавший тест. Правильно организовав работу с тестовыми данными вы существенно облегчите процесс создания и поддержки тестов Регламентируйте подход к именованию модулей и методов, это облегчит их поиск Договоритесь как вы будете создавать общие модули, как разделяются по ним конструкторы, например: Использовать один модуль на все методы-конструкторы, подходит для небольших решений. Создаете модули по подсистемам (разрезы учета/функциональности) - для небольших и средних конфигураций. Для каждого объекта/функциональности создается свой модуль с конструкторами - для больших и сложных проектов. Выполняйте перекрестные ревью, делитесь знаниями в команде.","s":"Программное создание данных","u":"/yaxunit/docs/features/test-data/","h":"#программное-создание-данных","p":170},{"i":181,"t":"Утверждения для проверки значений Доступ к утверждениям обеспечивает метод ЮТест.ОжидаетЧто, который возвращает инициализированный модуль ЮТУтверждения, реализующий работу с утверждениями. tip Не рекомендуется обращаться к модулю ЮТУтверждения напрямую, используйте ЮТест.ОжидаетЧто Реализован достаточный набор проверок значений Сравнение значений Проверка заполненности Проверка строк Проверка вхождения значения в интервал Проверка типа значения Проверка выполнения метода Проверка наличия свойств/реквизитов Проверка коллекции Проверка на соответствие набору условий, предикату Методы позиционирования Большая часть методов - это сравнения фактического и ожидаемого результатов, но есть несколько методов настройки Что - устанавливает проверяемый объект. Все дальнейшие проверки будут выполняется с этим объектом Метод - устанавливает имя и параметры проверяемого метода. Для проверки методов имеются утверждения ВыбрасываетИсключение и НеВыбрасываетИсключение Параметр - добавляет параметр метода. Создан для удобства установки параметров проверяемого метода Свойство - устанавливает проверяемое свойство и проверяет его наличие. Последующие проверки, вызванные после этого метода, будут относиться к свойству объекта. Например, ЮТест.ОжидаетЧто(Контекст).Свойство(\"ИмяМетода\").Равно(\"МетодБезИсключение\") эквивалентно проверке Контекст.ИмяМетода = \"МетодБезИсключение\" Методы работы со свойствами позволяют указывать цепочку свойств (доступ к вложенным свойствам через точку) Например: Свойство(\"Контекст.ИмяМетода\") - вложенное свойство ИмеетСвойство(\"Контекст.ПараметрыМетода[0]\") - элемент вложенной коллекции НеИмеетСвойства(\"[0].Свойство\") - свойство элемента коллекции Все методы имеют параметр ОписаниеПроверки для детального описания","s":"Базовые утверждения","u":"/yaxunit/docs/features/assertions/assertions-base","h":"","p":180},{"i":183,"t":"tip Полный и актуальный набор методов смотрите в описании API","s":"Доступные методы","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#доступные-методы","p":180},{"i":185,"t":"Равно - проверка на равенство конкретному значению. Для сериализуемых объектов идет сравнение по значению НеРавно - проверка на не равенство конкретному значению. Для сериализуемых объектов идет сравнение по значению Больше - проверяемое значение должно быть больше указанного БольшеИлиРавно - проверяемое значение должно быть больше или равно указанному Меньше - проверяемое значение должно быть меньше указанного МеньшеИлиРавно - проверяемое значение должно быть меньше или равно указанному ЭтоНеопределено - проверяемое значение должно быть равно Неопределено ЭтоНеНеопределено - проверяемое значение должно быть не равно Неопределено ЭтоNull - проверяемое значение должно быть равно Null ЭтоНеNull - проверяемое значение должно быть не равно Null ЭтоИстина - проверяемое значение должно быть истиной ЭтоНеИстина - проверяемое значение не должно быть истиной ЭтоЛожь - проверяемое значение должно быть ложью ЭтоНеЛожь - проверяемое значение не должно быть ложью Особенности сравнения: При сравнении значений сравниваются их типы. Это отличается от стандартного поведения 1С:Предприятие, где некоторые значения разных типов могут быть равны, например 1 = Истина ЮТест.ОжидаетЧто(1 = Истина).ЭтоИстина(); // Проверка успешна ЮТест.ОжидаетЧто(1).Равно(Истина); // Проверка провалится Для большинства типов данных реализовано сравнение \"по значению\", когда сравниваются (рекурсивно) значения реквизитов объекта. Поддерживается сравнение структур и соответствий. Значение1 = Новый Структура(\"Реквизит\", 1); Значение2 = Новый Структура(\"Реквизит\", 1); ЮТест.ОжидаетЧто(Значение1 = Значение2).ЭтоИстина(); // Проверка провалится ЮТест.ОжидаетЧто(Значение1).Равно(Значение2); // Проверка успешна Поддерживается сравнение массивов, таблиц и табличных документов. Поддерживается сравнение значений упакованных в ХранилищеЗначения. Для прочих сериализуемых значений (не примитивов) сравнение происходит через сериализацию в JSON.","s":"Сравнение значений","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#сравнение-значений","p":180},{"i":187,"t":"Заполнено - проверяет заполненность значения НеЗаполнено - проверяет незаполненность значения Существует - проверяет существование (не равно Null и Неопределено) значения НеСуществует - проверяет не существование (не равно Null и Неопределено) значения","s":"Проверка заполненности","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-заполненности","p":180},{"i":189,"t":"ИмеетДлину - проверяет, что строка имеет указанную длину ИмеетДлинуБольше - проверяет, что длин строки больше указанной ИмеетДлинуМеньше - проверяет, что длина строки меньше указанной НеИмеетДлину - проверяет, что длина строки отличается от указанной Содержит - проверяемая строка содержит указанную подстроку НеСодержит - проверяемая строка не содержит указанную подстроку НачинаетсяС - проверяемая строка начинается с указанной строки ЗаканчиваетсяНа - проверяемая строка заканчивается на указанную строку СодержитСтрокуПоШаблону - проверяемая строка содержит подстроку, соответствующую регулярному выражению НеСодержитСтрокуПоШаблону - проверяемая строка не содержит подстроку, соответствующую регулярному выражению","s":"Проверка строк","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-строк","p":180},{"i":191,"t":"МеждуВключаяГраницы - проверяемое значение находиться в указанному интервале (включая границы) МеждуИсключаяГраницы - проверяемое значение находиться в указанному интервале (исключая границы) МеждуВключаяНачалоГраницы - проверяемое значение находиться в указанному интервале (включая левую границу и исключая правую) МеждуВключаяОкончаниеГраницы - проверяемое значение находиться в указанному интервале (исключая левую границу и включая правую)","s":"Проверка вхождения значения в интервал","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-вхождения-значения-в-интервал","p":180},{"i":193,"t":"ИмеетТип - проверяемое значение должно иметь указанный тип НеИмеетТип - тип проверяемого значения должен отличаться от указанного В качестве аргумента можно указывать Имя типа строкой или список имен типов через запятую. ИмеетТип(\"Строка\").ИмеетТип(\"Строка, Число\") Конкретный тип. ИмеетТип(Тип(\"Строка\")) Описание типов. ИмеетТип(Новый ОписаниеТипов(\"Строка, Число\"))","s":"Проверка типа значения","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-типа-значения","p":180},{"i":195,"t":"API для проверки, выбрасываемых методом проверяемого объекта исключения. Первоначально необходимо описать какой метод нужно проверить, к какому объекту он относится и с какими параметрами его необходимо вызвать. Для этих целей необходимо использовать: ЮТест.ОжидаетЧто - устанавливает владельца метода Метод - устанавливает имя и параметры проверяемого метода Параметр - добавляет параметр метода. Создан для удобства установки параметров проверяемого метода После формируем ожидание - должен или нет методы выбросить исключение и с каким текстом. ВыбрасываетИсключение - выполняет настроенный метод объекта с параметрами и проверяет, что метод выбросит исключение и текст исключения содержит(включает) указанную в строку. При необходимости можно настроить (передать параметр), чтобы метод выполнился в транзакции. ЮТест.ОжидаетЧто(Документ) // Объект, метод которого проверяем .Метод(\"Записать\").Параметр(РежимЗаписиДокумента.Проведение) // Указываем проверяемый метод и параметры вызова .ВыбрасываетИсключение(\"Значение поля \"\"Дата\"\" не может быть пустой датой\") // Утверждение-проверка, исключение должно содержать указанный текст. .ВыбрасываетИсключение(\"\"\"Дата\"\"\") // Можно указать только часть исключения, проверить вхождение указанной строки. .ВыбрасываетИсключение(\"\"\"Дата\"\"\", , Истина) // Выполнение указанного метода в транзакции Вопрос Можно ли не указывать текст исключения? Ответ: Нельзя, вы должны конкретизировать свои ожидания, зафиксировать, какую ошибку ждете, иначе поведение может измениться и тест это не отработает. НеВыбрасываетИсключение - выполняет настроенный метод объекта с параметрами и проверяет, что метод не выбросит исключение или выбросит исключения с текстом отличным от указанного. При необходимости можно настроить (передать параметр), чтобы метод выполнился в транзакции. ЮТест.ОжидаетЧто(Документ) // Объект, метод которого проверяем .Метод(\"Записать\").Параметр(РежимЗаписиДокумента.Проведение) // Указываем проверяемый метод и параметры вызова .НеВыбрасываетИсключение() // Утверждение-проверка, метод выполниться без ошибки. .НеВыбрасываетИсключение(\"\"\"Дата\"\"\") // Утверждение-проверка, метод выполниться без ошибки, либо с ошибкой, которая не содержит \"Дата\". .НеВыбрасываетИсключение(\"\"\"Дата\"\"\", , Истина) // Выполнение указанного метода в транзакции Не злоупотребляйте проверкой НеВыбрасываетИсключение Многие используют это утверждения, для вызова чуть ли не каждого проверяемого метода. Этого делать не стоит. Это утверждение должно редко применяться, если ваш метод упадет, это и так будет отражено в отчете. Один из случаев когда оно может применяться, вы используете его перед проверками на исключения, чтобы убедится, что метод рабочий. Документ = СоздатьДокумент(); Утверждение = ЮТест.ОжидаетЧто(Документ) .Метод(\"Записать\").Параметр(РежимЗаписиДокумента.Проведение) .НеВыбрасываетИсключение(\"\"\"Дата\"\"\"); // Проверим, что при нормальном заполнении ошибки нет Документ.Дата = Неопределено; Утверждение.ВыбрасываетИсключение(\"\"\"Дата\"\"\", \"Документ проведен при незаполненной дате\"); Нельзя явно вызывать проверяемый метод Хочу обратить внимание. Когда вы проверяете метод на исключения/их отсутствие вы должны указать: ЮТест.ОжидаетЧто(Документ) // 1. Владельца метода .Метод(\"Записать\") // 2. Имя метода .Параметр(РежимЗаписиДокумента.Проведение) // 3. Параметры вызова метода // Явно вызывать метод нельзя. ЮТест.ОжидаетЧто(Документ) .Метод(Документ.Записать(РежимЗаписиДокумента.Проведение)) // Так делать нельзя, так не сработает проверка. Вы не должны явно вызывать метод, это должен сделать тестовый движок, чтобы поймать и проанализировать ошибку.","s":"Проверка выполнения метода","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-выполнения-метода","p":180},{"i":197,"t":"ИмеетСвойство - проверяемый объект должен содержать указанное свойство НеИмеетСвойства - проверяемый объект не содержит указанное свойство ИмеетСвойстваРавные - проверяемый объект должен содержать указанный набор свойств/реквизитов и значений Поддерживается проверка наличия свойство для различных объектов: структур, массивов, таблиц, документов и тд. Вы можете проверить наличие свойства не только у текущего объекта, но и у его дочерних. Например, ИмеетСвойство(\"Родитель.Наименование\"), будет выполнена проверка наличия свойства Родитель у текущего объекта и свойства Наименование у родителя. Также можно проверять наличие свойств у коллекций. Например, ИмеетСвойство(\"Товары[0].Наименование\"), утверждение проверит наличие свойства Товары, наличие у него первого элемента и наличие свойства Наименование у этого элемента. Документ = Документы.ПриходТовара.СоздатьДокумент(); ЮТест.ОжидаетЧто(Документ) .ИмеетСвойство(\"Товары[0]\") .Свойство(\"Товары[0]\") .ИмеетСвойство(\"Товар\") .ИмеетСвойство(\"Количество\") .ИмеетСвойство(\"Цена\"); Как вы могли заменить в качестве имени свойства указывается выражение, такое же как и обычном коде. Документ = Документы.ПриходТовара.СоздатьДокумент(); Свойство = Документ.Товары[0].Наименование; ЮТест.ОжидаетЧто(Документ) .Свойство(\"Товары[0].Наименование\"); // И там и там для того, чтобы добраться до наименования используется одно и тоже выражение.","s":"Проверка наличия свойств/реквизитов","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-наличия-свойствреквизитов","p":180},{"i":199,"t":"ИмеетДлину - проверяет, что коллекция имеет указанный размер ИмеетДлинуБольше - проверяет, что коллекция имеет размер, который больше указанного ИмеетДлинуМеньше - проверяет, что коллекция имеет размер, который меньше указанного НеИмеетДлину - проверяет, что размер коллекции отличается от указанного Коллекция = ЮТКоллекции.ЗначениеВМассиве(1, 2, 3); ЮТест.ОжидаетЧто(Коллекция) .ИмеетДлину(3) .ИмеетДлинуБольше(2) .ИмеетДлинуМеньше(4) .НеИмеетДлину(4) ; Содержит - проверяемая коллекция должна содержать указанный элемент НеСодержит - проверяемая коллекция не должна содержать указанный элемент Коллекция = ЮТКоллекции.ЗначениеВМассиве(1, 2, 3); ЮТест.ОжидаетЧто(Коллекция) .Содержит(1) // Конкретное значение .Содержит(ЮТест.Предикат() // Значение по условиям .ИмеетТип(\"Число\") .Больше(2)) .НеСодержит(0) .НеСодержит(ЮТест.Предикат() // Не содержит строк .ИмеетТип(\"Строка\")) ; КаждыйЭлементСодержитСвойство - проверяет, что каждый элемент коллекции имеет указанное свойство КаждыйЭлементСодержитСвойствоСоЗначением - проверяет, что каждый элемент коллекции имеет указанное свойство, которое равно ожидаемому значению ЛюбойЭлементСодержитСвойство - проверяет, что в коллекции есть элемент содержащий указанное свойство ЛюбойЭлементСодержитСвойствоСоЗначением - проверяет, что в коллекции есть элемент содержащий указанное свойство, которое равно ожидаемому значению Коллекция = ЮТКоллекции.ЗначениеВМассиве( Новый Структура(\"С1\", 1), Новый Структура(\"С1, С2\", 1, 2) ); ЮТест.ОжидаетЧто(Коллекция) .КаждыйЭлементСодержитСвойство(\"С1\") // Проверка, что все элементы коллекции содержат свойство `С1` .КаждыйЭлементСодержитСвойствоСоЗначением(\"С1\", 1) // Проверка, что все элементы коллекции содержат свойство `С1` со значением `1` .ЛюбойЭлементСодержитСвойство(\"С2\") // Проверка, что хотя бы один элемент коллекции содержат свойство `С2` .ЛюбойЭлементСодержитСвойство(\"С2\", 2) // Проверка, что хотя бы один элемент коллекции содержат свойство `С2` со значением `2` ; КаждыйЭлементСоответствуетПредикату - проверяет, что элементы коллекции соответствуют переданным условиям Коллекция = ЮТКоллекции.ЗначениеВМассиве(1, 2, 3); ЮТест.ОжидаетЧто(Коллекция) .КаждыйЭлементСоответствуетПредикату(ЮТест.Предикат() .ИмеетТип(\"Число\") // Все элементы это числа .НеРавно(0)) // и каждый не равен `0` ЛюбойЭлементСоответствуетПредикату - проверяет, что коллекция содержит элемент, который соответствует переданным условиям Коллекция = ЮТКоллекции.ЗначениеВМассиве(1, 2, 3); ЮТест.ОжидаетЧто(Коллекция) .ЛюбойЭлементСоответствуетПредикату(ЮТест.Предикат() .ИмеетТип(\"Число\") // Есть элемент, который является числом .Больше(2)) // и больше `2`","s":"Проверка коллекции","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-коллекции","p":180},{"i":201,"t":"Содержит/ЛюбойЭлементСоответствуетПредикату - проверяемая коллекция должна содержать элемент, который соответствует переданным условиям НеСодержит - проверяемая коллекция не должна содержать элемент, который соответствует переданным условиям КаждыйЭлементСоответствуетПредикату - проверяет, что элементы коллекции соответствуют переданным условиям СоответствуетПредикату - проверяет, что объект или его свойство соответствует набору условий Работа и суть предикатов описана в отдельной статье. Предикаты позволяют проверить каждый элемент коллекцию на соответствие набору условий​ Предположим, нам необходимо проверить, что движения документа выполненные по регистру делают приход. Тогда тест может выглядеть так. Документ = СоздатьИПровестиДокумент(...); Движения = ЮТЗапросы.ДвиженияДокумента(Документ, \"ОстаткиТоваров\"); ЮТест.ОжидаетЧто(Движения) .Заполнено() .ИмеетДлину(Документ.Товары.Количество()) .КаждыйЭлементСоответствуетПредикату( ЮТест.Предикат() .Реквизит(\"ВидДвижения\").Равно(ВидДвиженияНакопления.Приход) .Реквизит(\"Количество\").Больше(0) ) ; // Условия предиката будут применены для каждой записи движений. Если ожидания не совпадут, то будет выброшена ошибка. Предикаты позволяют проверить наличие элемента по сложным условиям​ Документ = СоздатьИПровестиДокумент(...); Движения = ЮТЗапросы.ДвиженияДокумента(Документ, \"ОстаткиТоваров\"); ЮТест.ОжидаетЧто(ПолучитьСообщенияПользователю()) .Заполнено() .Содержит( ЮТест.Предикат() .Реквизит(\"Текст\") .НачинаетсяС(\"Начало\") .ЗаканчиваетсяНа(\"окончание\") .НеСодержит(\"исключение\") ) ;","s":"Проверка на соответствие набору условий, предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-на-соответствие-набору-условий-предикату","p":180},{"i":203,"t":"В дополнении к указанным методам утверждений есть возможность применить их к вложенным свойствам. Например, проверить, наличие заполненной табличной части документа используя выражение ОжидаетЧто(Документ).Свойство(\"Товары\").Заполнено(). Благодаря методам Свойство и Элемент можно позиционировать утверждения на вложенный реквизит/элемент. Свойство - проверяет наличие свойства и позиционирует дальнейшие проверки на указанном свойстве Элемент - проверяет наличие элемента коллекции и позиционирует дальнейшие проверки на указанном элементе Объект - позиционирует дальнейшие проверки на объекте, указанном в методе Что НетСвойства - проверяет отсутствие свойства и позиционирует дальнейшие проверки на объекте, указанном в методе Что caution Методы Свойство и Элемент всегда вычисляют путь от объекта указанного в Что, они не учитывают предыдущие изменения позиции. Объект = Новый Структура(\"Реквизит\", Новый Структура(\"ВложенныйРеквизит\", 1)); ЮТест.ОжидаетЧто(Объект) .Свойство(\"Реквизит\") .Свойство(\"ВложенныйРеквизит\").Равно(1) // Выбросит исключение, тк объект не содержит свойство \"ВложенныйРеквизит\" ; Правильно в таком примере указывать сразу полный путь для свойства. ЮТест.ОжидаетЧто(Объект) .Свойство(\"Реквизит.ВложенныйРеквизит\").Равно(1) ; Методы Свойство и Элемент, принимают на вход не просто имя реквизита, а выражение, для перехода к нужному свойству, таким образом вы можете позиционироваться: На свойствах объекта Свойство(\"Реквизит\") На вложенных свойствах объекта Свойство(\"Реквизит.ВложенныйРеквизит\") На элементах коллекций Свойство(\"[0].Товар\") Можно позиционировать на элементах коллекции с конца Свойство(\"[-1].Товар\") // Последний элемент Элемент(-1) // Последний элемент","s":"Методы позиционирования","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#методы-позиционирования","p":180},{"i":206,"t":"Предположим, у нас имеется функция Сложение, которая выполняет сложение двух параметров. Проверки для нее могут выглядеть следующим образом: Тест для 'Сложение' Результат = Сложение(2, 3); ЮТест.ОжидаетЧто(Результат, \"Сложение чисел\") // Используя модуль утверждений установим проверяемое значение и пояснение .ИмеетТип(\"Число\") // Проверим тип .Заполнено() // Заполненность проверяемого значения .Больше(0) // Сравним с нулем .Равно(5); // Проверим ожидаемый результат Результат = Сложение(\"2\", 3); ЮТест.ОжидаетЧто(Результат, \"Сложение строки и числа\") .ИмеетТип(\"Строка\") .Равно(\"23\"); Результат = Сложение('2000010101', 3); ЮТест.ОжидаетЧто(Результат, \"Сложение даты и числа\") .Равно('2000010101000003'); В примере, я на каждом этапе уменьшаю количество проверок. В реальном тесте хватит проверки на равенство, остальные проверки здесь для того, чтобы показать возможности механизма.","s":"Базовые проверки","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#базовые-проверки","p":180},{"i":208,"t":"ЮТест.ОжидаетЧто(Ссылка, \"Созданный объект\") .Заполнено() .ИмеетТип(\"ДокументСсылка.ПриходТовара\") .Свойство(\"Номер\").Заполнено() .Свойство(\"Дата\").Заполнено() .Свойство(\"Поставщик\").Равно(Поставщик) .Свойство(\"Склад\").Равно(Склад) .Свойство(\"Валюта\").Равно(Валюта) .Свойство(\"Организация\").Равно(Организация) .Свойство(\"Товары\").ИмеетДлину(2) .Свойство(\"Товары[0].Товар\").Равно(Товар1) .Свойство(\"Товары[0].Цена\").Больше(0) .Свойство(\"Товары[0].Количество\").Больше(0) .Свойство(\"Товары[0].Сумма\").Равно(100) .Свойство(\"Товары[-1].Товар\").Равно(Товар2) .Свойство(\"Товары[-1].Сумма\").Равно(200) .Свойство(\"Проведен\").ЭтоИстина()","s":"Проверка сложного объекта","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-сложного-объекта","p":180},{"i":210,"t":"ЮТУтверждения.Что(ОМ_ЮТУтверждения) .Метод(\"МетодБезИсключение\", ЮТКоллекции.ЗначениеВМассиве(\"Исключение\")) .НеВыбрасываетИсключение() .НеВыбрасываетИсключение(\"Ожидаемое исключение\"); ЮТУтверждения.Что(ОМ_ЮТУтверждения) .Метод(\"МетодИсключение\", ЮТКоллекции.ЗначениеВМассиве(\"Исключение\", 2)) .ВыбрасываетИсключение(\"Слишком много фактических параметров\"); ЮТУтверждения.Что(ОМ_ЮТУтверждения) .Метод(\"МетодИсключение\", ЮТКоллекции.ЗначениеВМассиве(\"Исключение\")) .ВыбрасываетИсключение(\"Исключение\"); ЮТУтверждения.Что(ОМ_ЮТУтверждения) .Метод(\"МетодБезИсключение\") .ВыбрасываетИсключение(\"Недостаточно фактических параметров\");","s":"Проверка вызова метода","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-вызова-метода","p":180},{"i":212,"t":"Дата = ЮТест.Данные().СлучайнаяДата(); Объект = Новый Структура; Объект.Вставить(\"Число\", 1); Объект.Вставить(\"Строка\", \"1\"); Объект.Вставить(\"Дата\", Дата); Объект.Вставить(\"Массив\", ЮТКоллекции.ЗначениеВМассиве(1, \"1\")); ПроверкаЧисла = ЮТест.Предикат().Реквизит(\"Число\") .ИмеетТип(Тип(\"Число\")) .БольшеИлиРавно(1) .МеньшеИлиРавно(10) .Получить(); ПроверкаДаты = ЮТест.Предикат().Реквизит(\"Дата\") .ИмеетТип(Новый ОписаниеТипов(\"Дата\")) .Равно(Дата) .Получить(); ЮТест.ОжидаетЧто(Объект) .СоответствуетПредикату(ЮТест.Предикат() .Заполнено() .ИмеетТип(\"Структура\")) .СоответствуетПредикату(ПроверкаЧисла) .СоответствуетПредикату(ПроверкаДаты) ;","s":"Проверка соответствия предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-соответствия-предикату","p":180},{"i":214,"t":"ТаблицаРезультатов = ЮТест.Данные().ЗагрузитьИзМакета(\"ОбщийМакет.ЮТ_МакетТестовыхДанных.R2C1:R5C11\", ОписанияТипов); ЮТест.ОжидаетЧто(ТаблицаРезультатов) .ИмеетТип(\"Массив\") .ИмеетДлину(3) .КаждыйЭлементСоответствуетПредикату(ЮТест.Предикат() .Реквизит(\"Товар\").Заполнено().ИмеетТип(\"СправочникСсылка.Товары\") .Реквизит(\"Период\").Заполнено().ИмеетТип(\"Дата\") .Реквизит(\"Количество\").Заполнено().ИмеетТип(\"Число\") .Реквизит(\"Цена\").Заполнено().ИмеетТип(\"Число\") )","s":"Проверка элементов коллекции на соответствие предикату","u":"/yaxunit/docs/features/assertions/assertions-base","h":"#проверка-элементов-коллекции-на-соответствие-предикату","p":180},{"i":216,"t":"Мокито - модуль созданный по образу популярного java-фреймворка для тестирования Mockito. Расширяет возможности тестирования, позволяет легко менять логику работы системы подменяя результаты работы методов, отключая какие-либо алгоритмы и проверки.","s":"Мокито","u":"/yaxunit/docs/features/mocking/mockito","h":"","p":215},{"i":218,"t":"С помощью Мокито мы можем с легкостью управлять поведением системы прямо из теста, для этого есть возможность: Настраивать какие методы \"меняют\" свое поведение, а какие обрабатывают \"как положено\". Для разных тестов или кейсов внутри теста можно перенастраивать поведение методов. Задавать условия на параметры метода. Мокировать как экспортные так и приватные методы, процедуры и функции. Настраивать разные \"реакции\" на вызов метода: Вернуть указанный результат Вызвать исключение Не выполнять метода Просто наблюдать за методом (собирать статистику по вызовам) Вы можете мокировать почти любой метод конфигурации, исключение - методы глобального контекста. Методы общих модулей Методы менеджеров Методы конкретных объектов, будь то документы или справочники Примеры: Для всех объектов определенного типа - обучаете через менеджер Мокито.Обучение(Документы.ПриходТовара) // Для всех документов ПриходТовара .Когда(\"ОбработкаПроведения\") Если нужно мокировать метод экземпляра объекта, то указываем его при обучении Мокито.Обучение(ДокументОбъект) // Для конкретного экземпляра объекта, .Когда(\"ОбработкаПроведения\") // другой документ объект, даже полученный из той же ссылки отработает без мокирования либо ссылку на этот объект Мокито.Обучение(ДокументСсылка) // Любой документ объект с той же ссылкой .Когда(\"ОбработкаПроведения\") Можно мокировать методы обработок и отчетов Мокито.Обучение(Отчеты.ОСВ) // Для всех отчетов .Когда(\"СформироватьОтчет\") Отчет = Отчеты.ОСВ.СоздатьОтчет(); Мокито.Обучение(Отчет) // для конкретного экземпляра отчета .Когда(\"СформироватьОтчет\") Мокито не может: Выполнять произвольную логику при вызове - выполнить алгоритм или вызвать какой-либо другой метод. Не может изменять параметры. При сборе статистики не хранит результат.","s":"Возможности","u":"/yaxunit/docs/features/mocking/mockito","h":"#возможности","p":215},{"i":220,"t":"Мокито базируется на двух вещах: Расширения и заимствование методов, благодаря им появилась возможность менять поведение системы. Глобальный контекст, доступный как из теста, так и из заимствованных методов конфигурации.","s":"Принцип работы","u":"/yaxunit/docs/features/mocking/mockito","h":"#принцип-работы","p":215},{"i":222,"t":"Для того чтобы вы смогли мокировать метода, вам в первую очередь необходимо добавить его в свое расширение. И добавить реализацию по шаблону для функции: &Вместо(\"<ИмяМокируемогоМетода>\") Функция Мок_<ИмяМокируемогоМетода>(<ПараметрыМетода>) ПараметрыМетода = Мокито.МассивПараметров(<ПараметрыМетода>); ПрерватьВыполнение = Ложь; Результат = МокитоСлужебный.АнализВызова(<МокируемыйОбъект>, \"<ИмяМокируемогоМетода>\", ПараметрыМетода, ПрерватьВыполнение); Если Не ПрерватьВыполнение Тогда Возврат ПродолжитьВызов(<ПараметрыМетода>); Иначе Возврат Результат; КонецЕсли; КонецФункции Либо для процедуры: &Вместо(\"<ИмяМокируемогоМетода>\") Процедура Мок_<ИмяМокируемогоМетода>(<ПараметрыМетода>) ПараметрыМетода = Мокито.МассивПараметров(<ПараметрыМетода>); ПрерватьВыполнение = Ложь; МокитоСлужебный.АнализВызова(<МокируемыйОбъект>, \"<ИмяМокируемогоМетода>\", ПараметрыМетода, ПрерватьВыполнение); Если Не ПрерватьВыполнение Тогда ПродолжитьВызов(<ПараметрыМетода>); КонецЕсли; КонецПроцедуры Примеры добавления методов в расширение. Метод общего модуля​ Добавляем обработку метода ПолучитьПрофиль общего модуля РаботаСПочтой &Вместо(\"ПолучитьПрофиль\") Функция Мок_ПолучитьПрофиль(ИмяОтправителя, ИспользоватьIMAP) Экспорт // Собираем параметры в массив ПараметрыМетода = Мокито.МассивПараметров(ИмяОтправителя, ИспользоватьIMAP); // Отправляем данные на анализ ПрерватьВыполнение = Ложь; Результат = Мокито.АнализВызова(РаботаСПочтой, \"ПолучитьПрофиль\", ПараметрыМетода, ПрерватьВыполнение); // Обрабатываем результат анализа Если НЕ ПрерватьВыполнение Тогда Возврат ПродолжитьВызов(ИмяОтправителя, ИспользоватьIMAP); Иначе Возврат Результат; КонецЕсли; КонецФункции Метод модуля менеджера​ Добавляем обработку метода НовыйИдентификаторПодписчикаУведомлений модуля менеджера справочника Справочники.МобильныеУстройства &Вместо(\"НовыйИдентификаторПодписчикаУведомлений\") Процедура Мок_НовыйИдентификаторПодписчикаУведомлений(Подписчик, Идентификатор) Экспорт // Собираем параметры в массив ПараметрыМетода = Мокито.МассивПараметров(Подписчик, Идентификатор); // Отправляем данные на анализ ПрерватьВыполнение = Ложь; Мокито.АнализВызова(Справочники.МобильныеУстройства, \"НовыйИдентификаторПодписчикаУведомлений\", ПараметрыМетода, ПрерватьВыполнение); // Обрабатываем результат анализа Если НЕ ПрерватьВыполнение Тогда ПродолжитьВызов(Подписчик, Идентификатор); КонецЕсли; КонецПроцедуры Метод модуля объекта​ Добавляем обработку приватного метода ОбработкаПроведения модуля объекта справочника Документ.ПриходТовара &Вместо(\"ОбработкаПроведения\") Процедура Мок_ОбработкаПроведения(Отказ, Режим) // Собираем параметры в массив ПараметрыМетода = Мокито.МассивПараметров(Отказ, Режим); // Отправляем данные на анализ ПрерватьВыполнение = Ложь; Мокито.АнализВызова(ЭтотОбъект, \"ОбработкаПроведения\", ПараметрыМетода, ПрерватьВыполнение); // Обрабатываем результат анализа Если НЕ ПрерватьВыполнение Тогда ПродолжитьВызов(Отказ, Режим); КонецЕсли; КонецПроцедуры После этого, вы может управлять поведение метода из ваших тестов. Тестирование с использованием Мокито можно разделить на 3 стадии: Сначала вы проводите обучение - настраиваете, какие методы мокируем и как они должны себя вести. Потом выполняете тестовый прогон целевого метода. После вам может понадобиться проверка вызовов, были ли вызваны нужные метода, с какими параметрами. // Подготовка Ответ = Новый HTTPСервисОтвет(1); Ответ.УстановитьТелоИзСтроки(СериализацияJSON.ЗначениеВСтроку(Новый Структура(\"id, status\", \"9999\", \"delivered\"))); // Обучение мокито Мокито.Обучение(ОтправкаСМС_Провайдер1) .Когда(\"УстановитьСоединение\").Вернуть(Истина) .Когда(\"ПослатьСообщение\").Вернуть(Ответ) .Прогон(); // Тестовый прогон РоботОтправки.ОтправкаСМС(); // Проверка статистики Мокито.Проверить(ОтправкаСМС_Провайдер1) .КоличествоВызовов(\"ПослатьСообщение\") .Равно(1); Подробнее расскажу по каждой стадии","s":"Настройка мокируемых методов","u":"/yaxunit/docs/features/mocking/mockito","h":"#настройка-мокируемых-методов","p":215},{"i":224,"t":"Обучение - это процесс настройки мокито. Вы указываете какие методы и при каких условиях (параметрах) должны вести себя тем или иным образом. С помощью API вы можете: Наблюдать() - просто наблюдать за методом, собирать статистику. Когда() - указать какой метод и с каким параметрами необходимо обрабатывать. Вернуть() - настроить, чтобы метод возвращал нужный результат. ВыброситьИсключение() - настроить, чтобы метод выбрасывал исключение. Пропустить() - настроить, чтобы метод был пропущен, не выполнился. ВыполнитьМетод() - настроить, чтобы метод выполнился как есть. Мокито.Обучение(ОтправкаСМС_Провайдер1) .Когда(\"УстановитьСоединение\").Пропустить() .Когда(\"ПослатьСообщение\").Вернуть(Ответ) .Наблюдать(\"ОбработатьОтвет\") Подробнее о методах ниже, а сейчас для лучшего понимания расскажу как работает обучение: В процессе обучения мы создаем правила, описывающие как будет вести себя метод при различных вариантах вызова. Правила состоят из двух частей условие срабатывания (об/ект, метод, параметры), задаются в методе Когда или Наблюдать действие выполняемое при соблюдении условий - Вернуть, ВыброситьИсключение, Пропустить, ВыполнитьМетод Условия​ Условие состоит из трех частей Объект, которому относится метод Имя метода Параметры метода Объект​ Объект является обязательным и задается в методе Мокито.Обучение(). В качестве объекта могут выступать: Менеджер объекта метаданных, в таком случае под условие попадают все обращения к этому типу метаданных, будь вызовы методов модуля менеджера или объекта. Ссылка, под условие попадают все обращения к объектам имеющим ту же ссылку. Объект - конкретный объект метаданных (документ, обработка, набор записей), только обращения к методам этого экземпляра объекта. Имя метода​ Имя метода, является обязательным. Указывается в методах Когда или Наблюдать. Можно обрабатывать и экспортные и приватные метода, главное чтобы для него была выполнена настройка Параметры​ Указывается в методах Когда или Наблюдать, передачей массива ожидаемых параметров. Необязательная часть условия, если не указывать, но будут обрабатывать все вызовы. Также необязательно указывать все параметры метода, достаточно указать только первую часть. В качестве параметров можно указывать: Конкретные значения параметров Маски Мокито.ЛюбойПараметр() - параметр может принимать любое значение Мокито.СтроковыйПараметр() - параметр может принимать только строковые значения Мокито.ЧисловойПараметр() - параметр может принимать только числовые значения Мокито.ТипизированныйПараметр() - параметр может принимать значения указанного типа Предикаты, параметр должен соответствовать заданным условиям. Мокито.Обучение(РаботаСHTTP) .Когда(РаботаСHTTP.ОтправитьОбъектНаСервер(ИсточникДанных, ЮТест.Предикат().НеИмеетСвойства(\"Авторизация\"))) .Вернуть(ОтветНеобходимаАвторизация()) Варианты обучения (формирования условий)​ Существует 2 основных подхода к формированию условий вызова: Явный вызов метода с параметрами Мокито.Обучение(РаботаСHTTP) .Когда(РаботаСHTTP.ОтправитьОбъектНаСервер(ИсточникДанных, Данные)) .Вернуть(2) Указание имени метода и набора параметров Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(ИсточникДанных, Данные)) .Вернуть(2) Первый вариант имеет ряд недостатков: Работает только для экспортных методов Необходимо передавать все обязательные параметры или использовать для них маску Мокито.ЛюбойПараметр() Если не указывать необязательные параметры, то их значения по умолчанию попадут в настройку. Покажу на примере. // Имеется метод Функция Метод(Параметр1, Параметр2, Параметр3 = 3) Экспорт Возврат Параметр1 + Параметр2 + Параметр3; КонецФункции Мокито.Обучение(...) .Когда(Метод(1, 2)) .Вернуть(0) .Прогон(); Метод(1, 2); // Вернет 0 Метод(1, 2, 3); // Вернут 0 Метод(1, 2, 4); // Вернут 7, будет выполнен основной алгоритм // Второй вариант обучения Мокито.Обучение(...) .Когда(\"Метод\", Мокито.МассивПараметров(1, 2)) .Вернуть(0) .Прогон(); Метод(1, 2); // Вернет 0 Метод(1, 2, 3); // Вернут 0 Метод(1, 2, 4); // Вернут 0 Действия (Реакции)​ После того как определились с условием вызова указанным в методе Когда нужно указать реакцию (действие). Возможные реакции: Вернуть - вернуть указанное значение ВыброситьИсключение - вызвать исключение с переданным текстом Пропустить - пропустить выполнение метод (актуально для процедур) ВыполнитьМетод - выполнить основной метод конфигурации, обычно комбинируется к другими реакциями, чтобы задать исключение. Предположим, по умолчанию метод должен выбрасывать исключение, но для одного конкретного случая должен выполниться реальный метод конфигурации. Это проще всего сделать следующим образом: Мокито.Обучение(...) // По умолчанию метод падает .Когда(\"МегаФункция\").ВыброситьИсключение(\"Упал\") // При вызове с параметрами `1, 2, 3` выполняется метод конфигурации .Когда(\"МегаФункция\", Мокито.МассивПараметров(1, 2, 3)).ВыполнитьМетод() Пример мокирования методов документа Документ = СоздатьДокумент(); Мокито.Обучение(Документ) .Когда(\"ОбработкаПроверкиЗаполнения\").Пропустить() // Отключим проверку заполнения документа .Когда(\"КонтрольОстатков\").Вернуть(Истина) // Проверка остатков будет успешной .Когда(\"ЗафиксироватьОшибки\").ВыброситьИсключение(\"Не должно быть ошибок\") // При вызове \"лишнего\" кода сразу валим тест .Когда(\"СформироватьПроводки\") .Пропустить() // Отключаем формирование таблицы движений .Когда(\"СформироватьПроводки\", Мокито.МассивПараметров(\"Взаиморасчеты\")) .ВыполнитьМетод() // Но включаем для регистра \"Взаиморасчеты\" .Прогон(); // Завершаем настройку Документ.Записать(РежимЗаписиДокумента.Проведение); Цепочки действий​ В дополнение к условиям можно формировать цепочки действий, которые будут выполнятся в порядке их \"регистрации\". Например, есть метод без параметров, для которого необходимо сэмулировать ситуацию когда он возвращает разные значения. Мокито.Обучение(...) .Когда(\"БытьИлиНеБыть\") .Вернуть(\"Быть\") // Первый вызов метода вернет \"Быть\" .Вернуть(\"Или\") // Второй вызов .Вернуть(\"НеБыть\") // Третий .ВызватьИсключение(\"Конец\") // Четвертый и все последующие Примеры формирования различных вариантов условий​ Имеется метод: Функция ОтправитьОбъектНаСервер(ИсточникДанных, Объект, HTTPМетод = \"POST\", ТипКонтента = \"json\", Преобразование = Неопределено, ДопНастройки = Неопределено, Ответ = Неопределено, ОтветВСтруктуру = Ложь, ТелоОтветаВХранилище = Ложь) Экспорт Предположим необходимо: Переопределить все вызовы метода - указываем имя метода без указания параметров Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\").Вернуть(1) Переопределить вызов, когда первый параметр имеет определенное значение Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(ИсточникДанных)) .Вернуть(2); // Через явный вызов метода Мокито.Обучение(РаботаСHTTP) .Когда(РаботаСHTTP.ОтправитьОбъектНаСервер(ИсточникДанных, Мокито.ЛюбойПараметр()) .Вернуть(2) // Тут используется маска `Мокито.ЛюбойПараметр()`, тк второй параметр является обязательным Переопределить вызов, когда второй параметр имеет определенное значение Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(Мокито.ЛюбойПараметр(), Объект)) .Вернуть(2); // Через явный вызов метода Мокито.Обучение(РаботаСHTTP) .Когда(РаботаСHTTP.ОтправитьОбъектНаСервер(Мокито.ЛюбойПараметр(), Объект) .Вернуть(2) Условие на тип параметра // Первый параметр должен быть ссылкой на справочник, второй числом Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(Мокито.ТипизированныйПараметр(Тип(\"СправочникСсылка.ИсточникиДанных\")), Мокито.ЧисловойПараметр())) .Вернуть(3); // Через явный вызов метода Мокито.Обучение(РаботаСHTTP) .Когда(РаботаСHTTP.ОтправитьОбъектНаСервер(Мокито.ТипизированныйПараметр(Тип(\"СправочникСсылка.ИсточникиДанных\")), Мокито.ЧисловойПараметр())) .Вернуть(3); На основании порядка вызовов метода Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\") .Вернуть(1) .Вернуть(2) .Вернуть(3) .ВызватьИсключение(\"Конец\");","s":"Обучение","u":"/yaxunit/docs/features/mocking/mockito","h":"#обучение","p":215},{"i":226,"t":"После обучения, настройки реакций на вызовы методов, можно запускать тест нужного метода. Но перед этим необхдимо перевести Мокито в режим прогона тестов, для этого используется метод Прогон. Метод Прогон завершает настройку и изменяет режим работы, после этого все вызовы к настроенным методам (добавленным в расширение) будут перехватываться и анализироваться на совпадение условий вызова. Для методов, которые были указаны в Когда() или Наблюдать(), будет собираться статистика вызовов. Для методов, у которых есть подходящая \"реакция\" будет переопределено выполнение и запустится соответствующая реакция (вернуть значение, вызвать исключение и тд) Для прочих методов (не настроенных) логика не изменится. // Настройка Мокито.Обучение(РаботаСHTTP) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(Мокито.ЛюбойПараметр(), Мокито.ЛюбойПараметр())) .Вернуть(РезультатПоУмолчанию) .Когда(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(Справочники.ИсточникиДанных.FTP, 2)) .Вернуть(2) .Прогон(); // Перевод в режим прогона теста Результат = РаботаСHTTP.ОтправитьОбъектНаСервер(ИсточникДанных, Данные); // Результат будет равен переменной РезультатПоУмолчанию Результат = РаботаСHTTP.ОтправитьОбъектНаСервер(Справочники.ИсточникиДанных.FTP, 2); // Результат будет равен 2 Схема вызовов при вызове замокированного метода.","s":"Тестовый прогон","u":"/yaxunit/docs/features/mocking/mockito","h":"#тестовый-прогон","p":215},{"i":228,"t":"После прогона теста можно проверить какие методы, с какими параметрами вызывались. Для этих целей необходимо воспользоваться методом Мокито.Проверить ЛюбойПараметр = Мокито.ЛюбойПараметр(); Мокито.Проверить(РаботаСHTTP) // Устанавливаем проверяемый объект // Проверка общего количества обращений к методу .КоличествоВызовов(\"ОтправитьОбъектНаСервер\") .Заполнено() .КоличествоВызовов(РаботаСHTTP.ОтправитьОбъектНаСервер(ЛюбойПараметр, ЛюбойПараметр)) .Равно(3) // Проверка обращений с фильтром по типам параметров .КоличествоВызовов(РаботаСHTTP.ОтправитьОбъектНаСервер(Мокито.ТипизированныйПараметр(ТипИсточникДанных), Мокито.ЧисловойПараметр())) // Условия поиска вызовов .Больше(1) // Проверки .Равно(2) .КоличествоВызовов(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(Мокито.ТипизированныйПараметр(ТипИсточникДанных), Мокито.ЧисловойПараметр())) .Равно(2) // Проверка обращений к методу с конкретными параметрами .КоличествоВызовов(\"ОтправитьОбъектНаСервер\", Мокито.МассивПараметров(1, 2)) .Равно(1) .КоличествоВызовов(РаботаСHTTP.ОтправитьОбъектНаСервер(1, 2)) .Равно(1) Принцип формирования проверки: Указываем проверяемый объект Проверить(РаботаСHTTP). Указываем условия поиска вызовов метода. Логика формирования условия такая же как при обучении. Например, КоличествоВызовов(РаботаСHTTP.ОтправитьОбъектНаСервер(ЛюбойПараметр, Мокито.ЧисловойПараметр())) Соберет все вызовы метода РаботаСHTTP.ОтправитьОбъектНаСервер, к которых вторым параметром идет число, а 3й и последующий параметры имеют значения по умолчанию. Проверяем собранные вызовы: Заполнено - есть вызовы метода по указанным условиям Пусто - нет вызовов метода по указанным условиям Равно - количество вызовов попавших под условия равно указанному значению Больше - количество вызовов попавших под условия больше указанного значения Меньше - количество вызовов попавших под условия меньше указанного значения Статистика вызовов​ Также вы можете более детально проанализировать вызовы методов Для этого можно воспользоваться методом Мокито.Проверить(Объект).Вызовы, который возвращает массив с описанием вызовов: Объект - Произвольный - Объект, которому принадлежит метод ИмяМетода - Строка - Имя вызванного метода Параметры - Массив из Произвольный - Набор параметров, с которыми был вызван метод Контекст - Строка - Контекст вызова метода (не реализовано) ВызовыМетода = Мокито.Проверить(Интеграция).Вызовы(\"ВыполнитьЗапрос\"); ЮТест.ОжидаетЧто(ВызовыМетода, \"Вызовы метода ВыполнитьЗапрос\") .ИмеетТип(\"Массив\") .ИмеетДлину(3) .КаждыйЭлементСодержитСвойствоСоЗначением(\"Объект\", Интеграция) .КаждыйЭлементСодержитСвойствоСоЗначением(\"ИмяМетода\", \"ВыполнитьЗапрос\") .КаждыйЭлементСодержитСвойство(\"Параметры\") .Свойство(\"[0].Параметры[0]\").Равно(\"Адрес\") .Свойство(\"[1].Параметры[0]\").Равно(Адрес) .Свойство(\"[2].Параметры[1]\").Равно(2);","s":"Проверка","u":"/yaxunit/docs/features/mocking/mockito","h":"#проверка","p":215},{"i":230,"t":"Для получения данных базы предоставлен API выполнения запросов ЮТЗапросы Позволяет как с сервера, так и с клиента получать данные информационной базы и имеет следующие методы ЗначенияРеквизитов - Возвращает значения реквизитов ссылки ЗначениеРеквизита - Возвращает значение реквизита ссылки Запись - Возвращает первую запись таблицы, соответствующую условиям Записи - Возвращает записи таблицы, соответствующую условиям ЗначенияРеквизитовЗаписи - Возвращает значения реквизитов первой записи таблицы, соответствующей условиям ЗначениеРеквизитаЗаписи - Возвращает значение реквизита первой записи таблицы, соответствующей условиям ТаблицаСодержитЗаписи - Вернет признак, содержит ли таблица записи, удовлетворяющие переданным условиям РезультатЗапроса - Возвращает результат выполнения простого запроса, используя описание запроса РезультатПустой - Определяет, есть ли в результате записи, используя описание запроса ОписаниеЗапроса - Формирует описание простого запроса","s":"Запросы","u":"/yaxunit/docs/features/queries","h":"","p":229},{"i":232,"t":"Удалить - Выполняет удаление переданных записей из базы УстановитьЗначениеРеквизита - Устанавливает значение реквизита ссылки УстановитьЗначенияРеквизитов - Устанавливает значения реквизитов ссылки ЮТЗапросы - Расширяет возможности тестирования, позволяет в упрощенной форме получать данны из информационной базы как с сервера, так и с клиента.","s":"Дополнительные методы работы с данными","u":"/yaxunit/docs/features/test-data/data-manipulations","h":"","p":231},{"i":234,"t":"При использовании тестовых данных нередко необходимо удалять созданные объекты. Для этого вы можете использовать","s":"Удаление тестовых данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"","p":233},{"i":236,"t":"Самый простой в способ отката изменений сделанных тестом - обернуть тест в транзакцию. Для того чтобы YAxUnit сам оборачивал тесты в транзакции вам, при регистрации теста, нужно вызвать метод ВТранзакции(). Если метод вызвать в самом начале, то настройка примениться для всех тестов модуля; если после добавления набора, то для всех тестов этого набора; если после добавления теста, то только для этого теста. Также можно отключать использование транзакции, указав параметр ВТранзакции(Ложь) ЮТТесты .ДобавитьТест(\"Фикция\").ВТранзакции() // Использование транзакции для конкретного теста ЮТТесты .ДобавитьТестовыйНабор(\"Основной\").ВТранзакции() // Использование транзакции для набора тестов .ДобавитьТест(\"Фикция\") ЮТТесты.ВТранзакции() // Использование транзакции для тестов модуля .ДобавитьТест(\"Фикция\") И тогда тестовый движок будет оборачивать в транзакцию каждый серверный тест (для клиентских будет игнорироваться) Особенности работы: В транзакцию оборачивается только тест и события ПередКаждымТестом\\ПередТестом и ПослеКаждогоТеста\\ПослеТеста Для клиентских тестов настройка игнорируется Схема работы транзакций Для настройки ЮТТесты .ДобавитьТестовыйНабор(\"Основной\").ВТранзакции() .ДобавитьТест(\"Тест1\") .ДобавитьТест(\"Тест2\") Схема выполнения будет выглядеть так: Точно также она будет выглядеть и для настройки ЮТТесты.ВТранзакции() .ДобавитьТестовыйНабор(\"Основной\") .ДобавитьТест(\"Тест1\") .ДобавитьТест(\"Тест2\") Учитывайте В транзакцию оборачивается тест, а не модуль или набор, поэтому данные созданные вне теста не будут удалены. Такие данные необходимо удалять самостоятельно при необходимости. Например, настройка ЮТТесты .ДобавитьТестовыйНабор(\"Основной\").ВТранзакции() // Использование транзакции для набора тестов указывает, что каждый тест набор будет выполняться в своей транзакции, которая будет отменена по окончании каждого теста.","s":"Автоматические транзакции","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#автоматические-транзакции","p":233},{"i":238,"t":"В некоторых ситуация тестирование в транзакции невозможно: Клиентский тест Тестируемый метод не рассчитан на работу в транзакции (например, используются внутренние транзакции) Необходимо создавать данные за рамками теста (общие параметры) В подобных случаях, для удаления созданных данных, может подойти механизм удаления тестовых данных. Для его включения нужно при регистрации теста вызвать метод УдалениеТестовыхДанных(). Механизм имеет ряд ограничений и не работает для следующих кейсов: Данные созданы не через API Данные создаются внутри тестируемого кода Данные созданы в клиентском модуле через вызов своего серверного модуля, даже если он использует API тестового движка ЮТТесты .ДобавитьТест(\"Фикция\").УдалениеТестовыхДанных() // Использование для конкретного теста ЮТТесты .ДобавитьТестовыйНабор(\"Основной\").УдалениеТестовыхДанных() // Использование для всех тестов набора .ДобавитьТест(\"Фикция\") ЮТТесты.УдалениеТестовыхДанных() // Использование для всех тестов модуля .ДобавитьТест(\"Фикция\") ЮТТесты.ВТранзакции().УдалениеТестовыхДанных() // Совместно с транзакцией .ДобавитьТест(\"Фикция\") Механизм не использует транзакции, а запоминает в контексте все созданные с помощью API объекты и записи регистров сведений. Позволяет: Удалять данные созданные с клиента Удалять данные созданные вне теста (в обработчиках событий) Удаление и только Механизм только удаляет созданные объекты, изменения не откатываются Разное время жизни данных Механизм понимает в рамках какого контекста исполнения (тест, набор, модуль) были созданы данные и удаляет их по выходу из него. Рассмотрим время жизни объектов созданных на разных этапах тестирования, например имеем такой модуль. Процедура ПередВсемиТестами() Экспорт ДанныеМодуля = ЮТест.Данные().СоздатьЭлемент(); КонецПроцедуры Процедура ПередТестовымНабором() Экспорт ДанныеНабора = ЮТест.Данные().СоздатьЭлемент(); КонецПроцедуры Процедура ПослеВсехТестов() Экспорт ДанныеТеста = ЮТест.Данные().СоздатьЭлемент(); КонецПроцедуры Процедура Тест() Экспорт Ссылка = ЮТест.Данные().СоздатьЭлемент(); КонецПроцедуры Для переменных получим разное время жизни ДанныеМодуля - Живет, пока исполняются тесты модуля одного контекста (Сервер, Клиент). ДанныеНабора - Живет, пока исполняются тесты набора. ДанныеТеста и Ссылка - Живут, пока исполняется тест. Схема работы транзакций","s":"Механизм удаления тестовых данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#механизм-удаления-тестовых-данных","p":233},{"i":240,"t":"Для глобальной настройки ВТранзакции() и/или УдалениеТестовыхДанных() вам необходимо всего лишь создать свой общий модуль, подписать на событие инициализации и там установить глобальные настройки. Подробнее тема будет раскрыта в будущем.","s":"Глобальная настройка удаления данных","u":"/yaxunit/docs/features/test-data/test-data-deletion","h":"#глобальная-настройка-удаления-данных","p":233},{"i":242,"t":"YAxUnit - это расширение конфигурации с открытым исходным кодом, которое помогает в нелегком труде по написанию модульных тестов для решений на платформе 1С:Предприятие. Прежде всего нужно пройти через процесс установки. После этого вы можете попробовать написать свой первый тест или ознакомиться с возможностями YAxUnit изучив руководство.","s":"Начало работы","u":"/yaxunit/docs/getting-started/","h":"","p":241},{"i":244,"t":"Кроме того, чтобы написать тестовые сценарии (методы), разработчик должен зарегистрировать их в движке - рассказать ему, какие имеются тесты, как их запускать, с какими параметрами и т.д. Регистрация выполняется внутри предопределенного экспортного метод ИсполняемыеСценарии, который обязательно должен находиться в каждом тестовом модуле. Процедура ИсполняемыеСценарии() Экспорт // Регистрация тестов ЮТТесты // Регистрация тестов выполняет через модуль регистратор .ДобавитьТестовыйНабор(\"Математические методы\") // Набор - объединение тестов .ДобавитьТест(\"Сложение\") // Обязательно при регистрации указываем имя экспортного метода .ДобавитьТест(\"Вычитание\", \"Вычитание\") // Также можно указать представление теста .ДобавитьТест(\"Вычитание\", \"ВычитаниеСервер\", , \"Сервер\") // Контекст исполнения, по умолчанию тест выполняется во всех контекстах модуля .ДобавитьКлиентскийТест(\"УмножениеНаКлиенте\") // Есть отдельный метод для регистрации клиентских тестов .ДобавитьСерверныйТест(\"ДелениеНаСервере\", \"Деление на сервер\") // Есть отдельный метод для регистрации серверных тестов .ДобавитьТестовыйНабор(\"Строковые методы\") .ДобавитьТест(\"СтрНайти\") .ДобавитьТест(\"СтрРазделить\"); КонецПроцедуры Процедура Сложение() Экспорт // Тест сложения КонецПроцедуры В нем перечисляются все доступные тесты этого модуля. Метод ИсполняемыеСценарии вызывается движком для каждого тестового модуля при загрузке тестов, задолго до исполнения самих тестов. В нем не стоит создавать какие-то тестовые данные или выполнять инициализацию, он должен просто отдать список тестов модуля. Регистрация и настройка тестов выполняется через методы модуля ЮТТесты, он позволяет: Зарегистрировать тесты, с возможностью выбрать контексты исполнения: ДобавитьТест - Тест выполняется во всех контекстах тестового модуля ДобавитьКлиентскийТест - Тест выполняется на клиенте ДобавитьСерверныйТест - Тест выполняется на сервере ДобавитьТестовыйНабор позволяет сгруппировать тесты в наборы Настроить параметры исполнения теста Очистка данных, перед использованием изучите документацию Выполнение ВТранзакции - Тест выполняется в транзакции Удаление тестовых данных (УдалениеТестовыхДанных) - Данные созданные тестом будут удалены (если они создаются с помощью API движка - ЮТест.Данные()) вне зависимости от транзакции СПараметрами - Тестовый метод будет вызван с указанными параметрами Настройка обработчиков событий Перед - Указывает, какой метод будет выполнятся перед тестом После - Указывает, какой метод будет выполнятся после тестом","s":"Регистрация тестовых методов","u":"/yaxunit/docs/features/test-registration","h":"","p":243},{"i":246,"t":"Доступ к методам генерации тестовых реализован через ЮТест.Данные(), этот метод возвращает общий модуль ЮТТестовыеДанные. tip Не рекомендуется обращаться к модулю ЮТТестовыеДанные напрямую, используйте ЮТест.Данные()","s":"Программное создание тестовых данных","u":"/yaxunit/docs/features/test-data/data-generation","h":"","p":245},{"i":248,"t":"Инструменты работы с тестовыми данными можно разделить на следующие группы: Генераторы случайных значений Методы создания данных в информационной базе Методы загрузки из макетов Работа с файлами","s":"Возможности","u":"/yaxunit/docs/features/test-data/data-generation","h":"#возможности","p":245},{"i":250,"t":"Как уже говорилось в статье в YAxUnit сделан большой упор на генерацию случайных тестовых данных, которая позволяет улучшить покрытие и сократить количество \"лишнего\" кода. Поставив в самом начале на такой подход мы еще ни разу в нем не разочаровались. Создание случайных данных базируется на генерации примитивных значения: Числа ЮТест.Данные().СлучайноеЧисло - Формирует случайное число в указанном диапазоне ЮТест.Данные().СлучайноеПоложительноеЧисло - Формирует случайное положительное число ограниченное максимумом ЮТест.Данные().СлучайноеОтрицательноеЧисло - Формирует случайное отрицательное число ограниченное минимумом Строки ЮТест.Данные().СлучайнаяСтрока - Формирует случайную строку указанной длины ЮТест.Данные().СлучайныйИдентификатор - Формирует случайный валидный идентификатор (Первым символом должна быть буква или символ подчеркивания, каждый из последующих символов может быть буквой, цифрой или символом подчеркивания) ЮТест.Данные().СлучайныйIPАдрес - Формирует случайный IP адрес ЮТест.Данные().СлучайныйНомерТелефона - Формирует случайный номер телефона ЮТест.Данные().УникальнаяСтрока - Создает строку на базе нового уникального идентификатора Даты ЮТест.Данные().СлучайнаяДата - Формирует случайную дату в указанном диапазоне ЮТест.Данные().СлучайноеВремя - Формирует случайное время ЮТест.Данные().СлучайнаяДатаВБудущем - Формирует случайную дату в будущем (больше текущей) с возможностью ограничить максимальное значение. Пример: СлучайнаяДатаВБудущем(2, \"часа\") - будет сформирована дата в интервале (ТекущаяДата, ТекущаяДата + 2 часа] ЮТест.Данные().СлучайнаяДатаВПрошлом - Формирует случайную дату в прошлом (меньше текущей) с возможностью ограничить минимальное значение. Пример: СлучайнаяДатаВПрошлом(2, \"часа\") - будет сформирована дата в интервале [ТекущаяДата - 2 часа, ТекущаяДата) ЮТест.Данные().СлучайнаяДатаПосле - Формирует случайную дату, которая больше указанной с возможностью ограничить максимальное значение. Пример: СлучайнаяДатаПосле(Дата, 2, \"часа\") - будет сформирована дата в интервале (Дата, Дата + 2 часа] ЮТест.Данные().СлучайнаяДатаДо - Формирует случайную дату, которая меньше указанной с возможностью ограничить минимальное значение. Пример: СлучайнаяДатаДо(Дата, 2, \"часа\") - будет сформирована дата в интервале [Дата - 2 часа, Дата) Булево ЮТест.Данные().СлучайноеБулево - Возвращает случайное булево Получение случайного из предопределенного списка ЮТест.Данные().СлучайноеЗначениеИзСписка - Возвращает случайное значение из указанного списка ВозможныеЗначения = ЮТКоллекции.ЗначениеВМассиве(-1, 0, 1); Возврат ЮТест.Данные().СлучайноеЗначениеИзСписка(ВозможныеЗначения); ЮТест.Данные().СлучайноеЗначениеПеречисления - Возвращает случайное значение перечисления Примеры: Цена = ЮТест.Данные().СлучайноеЗначениеПеречисления(Перечисления.ВидыЦен); // Можно получить значение через указание менеджера Цена = ЮТест.Данные().СлучайноеЗначениеПеречисления(\"Перечисление.ВидыЦен\"); // Или имя объекта метаданных (подходит для работы с клиента) ЮТест.Данные().СлучайноеПредопределенноеЗначение - Возвращает случайное предопределенное значение Примеры: Цена = ЮТест.Данные().СлучайноеПредопределенноеЗначение(Справочники.ВидыЦен); // Можно получить значение через указание менеджера Цена = ЮТест.Данные().СлучайноеПредопределенноеЗначение(\"Справочник.ВидыЦен\"); // Или имя объекта метаданных (подходит для работы с клиента) ЮТест.Данные().Подражатель - генератор правдоподобных данных. Генерирует случайные данные на базе словарей, является реализацией faker для 1С. ЮТест.Данные().Подражатель().Люди ФИО - Формирует случайное ФИО Фамилия - Формирует случайную фамилию Имя - Формирует случайное имя Отчество - Формирует случайное отчество ИНН - Формирует случайный ИНН СНИЛС - Формирует случайный СНИЛС ЮТест.Данные().Подражатель().Компании Наименование - Формирует случайное наименование компании ИНН - Формирует случайный ИНН компании КПП - Формирует случайный КПП компании ЮТест.Данные().Подражатель().Банки НомерСчета - Формирует случайный номер банковского счета БИК - Формирует случайный валидный БИК банка","s":"Генераторы случайных данных","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генераторы-случайных-данных","p":245},{"i":252,"t":"Создание пустышек - примитивных объектов с минимальным заполнения. Полезно использовать когда вам нужна ссылка определенного типа, но не важно ее заполнение ЮТест.Данные().СоздатьЭлемент - Создает новый элемент справочника или плана видов характеристик Товар = ЮТест.Данные().СоздатьЭлемент(Справочники.Товары); // На основании менеджера Товар = ЮТест.Данные().СоздатьЭлемент(\"Справочники.Товары\"); // На основании имени менеджера ПараметрыЗаписи = ЮТФабрика.ПараметрыЗаписи(); ПараметрыЗаписи.ОбменДаннымиЗагрузка = Истина; Товар = ЮТест.Данные().СоздатьЭлемент(\"Справочники.Товары\", , , ПараметрыЗаписи); // Запись в режиме ОбменДанными.Загрузка = Истина ЮТест.Данные().СоздатьДокумент - Создает новый документ Товар = ЮТест.Данные().СоздатьДокумент(Документ.ПриходТовара); // На основании менеджера Товар = ЮТест.Данные().СоздатьДокумент(\"Документ.ПриходТовара\"); // На основании имени менеджера ЮТест.Данные().СоздатьГруппу - Создает новую группу справочника или плана видов характеристик Товар = ЮТест.Данные().СоздатьГруппу(Документ.ПриходТовара); // На основании менеджера Товар = ЮТест.Данные().СоздатьГруппу(\"Документ.ПриходТовара\"); // На основании имени менеджера ЮТест.Данные().Фикция - Создает новый объект на основании его типа Товар = ЮТест.Данные().Фикция(Тип(\"ДокументСсылка.ПриходТовара\")); Товар = ЮТест.Данные().Фикция(Новый ОписаниеТипов(\"ДокументСсылка.ПриходТовара\")); Товар = ЮТест.Данные().Фикция(Новый ОписаниеТипов(\"ДокументСсылка.ПриходТовара, ДокументСсылка.РасходТовара\")); // Будет выбран случайный тип ЮТест.Данные().КонструкторОбъекта, с помощью которого вы можете создать объект информационной базы с необходимыми реквизитами. Конструктор позволяет: В более компактной форме заполнять объект Имеет методы записи и проведения При возникновении ошибки оборачивает их в более понятные человеку описания Киллер фича - Фикция и ФикцияОбязательныхПолей. Устанавливает случайно сгенерированные значения реквизитов. Таким образом делается акцент на важных для теста реквизитах и экономит \"строки\" на генерацию ненужных значений Умеет создавать данные с клиента и удалять их по окончании теста Конструктор = ЮТест.Данные().КонструкторОбъекта(\"Документы.ПриходТовара\") .Фикция(\"Поставщик\") .Фикция(\"Склад\") .ФикцияОбязательныхПолей() .ТабличнаяЧасть(\"Товары\"); Для Инд = 1 По 3 Цикл Конструктор.ДобавитьСтроку() .Фикция(\"Товар\") .Установить(\"Цена\", ЮТест.Данные().СлучайноеПоложительноеЧисло(9999, 2)) .Установить(\"Количество\", ЮТест.Данные().СлучайноеПоложительноеЧисло(20)) .Установить(\"Сумма\", Конструктор.ДанныеСтроки().Цена * Конструктор.ДанныеСтроки().Количество) КонецЦикла; Возврат Конструктор.Провести();","s":"Методы создания данных в информационной базе","u":"/yaxunit/docs/features/test-data/data-generation","h":"#методы-создания-данных-в-информационной-базе","p":245},{"i":254,"t":"Работа с макетами описана в отдельной статье","s":"Загрузка данных из макетов","u":"/yaxunit/docs/features/test-data/data-generation","h":"#загрузка-данных-из-макетов","p":245},{"i":256,"t":"ЮТест.Данные().НовыйФайл - Создает новый файл, который будет удален после теста ЮТест.Данные().НовоеИмяВременногоФайла - Возвращает имя нового файла, по окончании выполнения теста этот файл будет удален","s":"Работа с файлами","u":"/yaxunit/docs/features/test-data/data-generation","h":"#работа-с-файлами","p":245},{"i":259,"t":"#Если Сервер Тогда Конструктор = ЮТест.Данные().КонструкторОбъекта(Документы.ПриходТовара); #Иначе Конструктор = ЮТест.Данные().КонструкторОбъекта(\"Документы.ПриходТовара\"); #КонецЕсли Конструктор .Фикция(\"Поставщик\") .Фикция(\"Склад\") .Фикция(\"Валюта\") .Установить(\"Организация\", ЮТест.Данные().КонструкторОбъекта(\"Справочники.Организации\").Установить(\"КакойТоТамУчет\", Истина)) .ТабличнаяЧасть(\"Товары\"); Для Инд1 = 1 По ЮТест.Данные().СлучайноеЧисло(1, 5) Цикл Конструктор.ДобавитьСтроку() .Фикция(\"Товар\") .Установить(\"Цена\", ЮТест.Данные().СлучайноеПоложительноеЧисло(9999, 2)) .Установить(\"Количество\", ЮТест.Данные().СлучайноеПоложительноеЧисло(20)) .Установить(\"Сумма\", Конструктор.ДанныеСтроки().Цена * Конструктор.ДанныеСтроки().Количество) КонецЦикла; Ссылка = Конструктор.Провести();","s":"Генерация фейкового документа","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генерация-фейкового-документа","p":245},{"i":261,"t":"Функция ОписаниеСервера(Знач Идентификатор = Неопределено) Экспорт Описание = БазовоеОписаниеОбъекта(Идентификатор, \"СРВ\"); Описание.Вставить(\"Адрес\", ЮТТестовыеДанные.СлучайныйIPАдрес()); Описание.Вставить(\"ЧастотаЯдра\", ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(4, 3)); Описание.Вставить(\"КоличествоЯдер\", ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(10)); Описание.Вставить(\"КоличествоПотоков\", Описание.КоличествоЯдер * 2); Описание.Вставить(\"ПроизводительностьПроцессора\", Описание.ЧастотаЯдра * Описание.КоличествоЯдер); Описание.Вставить(\"ОбъемПамяти\", ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(1024, 3)); Описание.Вставить(\"Диски\", Новый Массив()); Описание.Вставить(\"Кластер\"); Для Инд = 1 По ЮТТестовыеДанные.СлучайноеЧисло(1, 3) Цикл Описание.Диски.Добавить(ОписаниеДиска()); КонецЦикла; Возврат Описание; КонецФункции Функция ОписаниеЗаявкиНаСозданиеВМ() Экспорт Описание = Новый Структура(); Описание.Вставить(\"Наименование\", \"req-\" + ЮТТестовыеДанные.СлучайнаяСтрока()); Описание.Вставить(\"ДатаДобавления\", глПолучитьМосковскоеВремя()); Описание.Вставить(\"ДатаОкончанияАренды\", глДобавитьКДате(глПолучитьМосковскоеВремя(), \"ДЕНЬ\", 2)); Описание.Вставить(\"Адрес\", ЮТТестовыеДанные.СлучайныйIPАдрес()); Описание.Вставить(\"Проект\", Проект()); Описание.Вставить(\"Ментейнер\", ПараметрыСеанса.Сотрудник); Описание.Вставить(\"КоличествоCPU\", ЮТТестовыеДанные.СлучайноеЧисло(1, 4)); Описание.Вставить(\"КоличествоПамяти\", ЮТТестовыеДанные.СлучайноеЧисло(1, 16)); Описание.Вставить(\"КоличествоДисков\", ЮТТестовыеДанные.СлучайноеЧисло(1, 16)); Описание.Вставить(\"ОперационнаяСистема\", ЮТТестовыеДанные.СоздатьЭлемент(Справочники.ОперационныеСистемы)); Описание.Вставить(\"СредаЭксплуатации\", \"\"); Описание.Вставить(\"Назначение\", ЮТТестовыеДанные.СоздатьЭлемент(Справочники.НазначенияВиртуальныхМашин)); Описание.Вставить(\"ТипСреды\", Справочники.ТипыИнформационныхСред.BETA); Описание.Вставить(\"КодСервиса\", ЮТТестовыеДанные.СлучайнаяСтрока(1)); Возврат Описание; КонецФункции Функция НовыйОбразDocker(Версия, ПоУмолчанию = Истина) Экспорт Данные = Новый Структура(\"Адрес, ВерсияПлатформы, ТипПлатформы, ИспользоватьПоУмолчанию\"); Данные.Адрес = \"gitlab.ru/orais/ci_cd/1cws-apache24:\" + Версия; Данные.ВерсияПлатформы = Версия; Данные.ТипПлатформы = Перечисления.ТипыСоединенияИсточникаДанных.Соединение1СПредприятие83Сервер; Данные.ИспользоватьПоУмолчанию = ПоУмолчанию; Возврат ЮТТестовыеДанные.СоздатьЭлемент(Справочники.ОбразыDocker, Версия, Данные); КонецФункции","s":"Генерация произвольных фейковых данных","u":"/yaxunit/docs/features/test-data/data-generation","h":"#генерация-произвольных-фейковых-данных","p":245},{"i":264,"t":"Перед написанием тестов вам необходимо: Создать информационную базу, на которой будете прогонять тесты. Установить тестовый движок в проект. Не забывайте о необходимости сбросить признаки Безопасный режим и Защита от опасных действий после загрузки расширения. Если вы используете EDT, то установить плагин, который будет вам помогать.","s":"Подготовка окружения","u":"/yaxunit/docs/getting-started/first-test","h":"#подготовка-окружения","p":262},{"i":266,"t":"Вы все установили, перед вами открыта EDT или конфигуратор, в котором есть проверяемая конфигурация и расширение с тестовым движком YAxUnit. Тесты с использование YAxUnit пишутся в расширении, это может быть как отдельное расширение, так и расширение движка. Подробнее об плюсах и минусах этих вариантов вы можете почитать в статье об организации тестов. Для первого теста рекомендую использовать расширение движка. Необходимо создать общий модуль в расширении (новый, а не заимствованный), назовем его ОМ_ПервыйТест, это будет наш первый тестовый набор (test suite). Следующим шагом необходим создать экспортную процедуру с наименованием ИсполняемыеСценарии, это главный метод тестового набора, здесь необходимо будет перечислить тесты, которые содержит модуль. Так как в 1С:Предприятии нельзя в режиме исполнения понять, какие методы содержит модуль (нет рефлексии). ОМ_ПервыйТест Процедура ИсполняемыеСценарии() Экспорт КонецПроцедуры Предположим мы хотим протестировать как работает сложение. Для этого нам необходимо создать экспортный метод, который будет реализовывать тест и зарегистрировать его в методе ИсполняемыеСценарии. ОМ_ПервыйТест Процедура ИсполняемыеСценарии() Экспорт ЮТТесты.ДобавитьТест(\"Сложение\"); КонецПроцедуры Процедура Сложение() Экспорт КонецПроцедуры За регистрацию тестов отвечает модуль ЮТТесты. Он содержит набор методов позволяющих добавлять тесты и настраивать их исполнение (параметры, режимы исполнения - клиент/сервер, работу в транзакции и многое другое). С помощью команды ЮТТесты.ДобавитьТест(\"Сложение\") мы добавляем тест Сложение в тестовый набор. На этом этапе можно уже запускать наш тест. Теперь добавим полезной нагрузки тесту, проверим что 2 + 2 = 4. ОМ_ПервыйТест Процедура Сложение() Экспорт РезультатСложения = 2 + 2; // 1 ЮТест.ОжидаетЧто(РезультатСложения) // 2 .Равно(4); // 3 КонецПроцедуры Тест выполняет интересующую нас команду 2 + 2 (это может быть вызов какого-то метода конфигурации). Используя механизм утверждений (проверок) указываем, что хотим проверить ЮТест.ОжидаетЧто(РезультатСложения) Проверяем, что РезультатСложения равно 4 С помощью утверждений разработчик описывает, ожидания (требования) от работы команды(метода). Тест во время исполнения, проверяет соответствуют ли эти ожидания реальным данным, если есть расхождения, то будет выброшено исключение, которое зафиксируется в отчете о тестировании. Настало время запустить наш первый тест, как это сделать прочтите в статье. После выполнения вы увидите отчет о тестировании, в котором тест будет \"зеленым\". Если в тесте исправить проверку .Равно(4); на .Равно(3); и еще раз запустить, то тест уже изменит свой статус и вы увидите сообщение об ошибке. Можно еще доработать нащ тест, проверить разные варианты сложения, для этого могут помочь параметры теста. ОМ_ПервыйТест Процедура ИсполняемыеСценарии() Экспорт ЮТТесты .ДобавитьТест(\"Сложение\") .СПараметрами(2, 3, 5) .СПараметрами(2, -3, -1) .СПараметрами(\"2\", \"-3\", \"2-3\") .СПараметрами(\"2\", -3, \"2-3\") ; КонецПроцедуры Процедура Сложение(ПервыйОперанд, ВторойОперанд, Результат) Экспорт РезультатСложения = ПервыйОперанд + ВторойОперанд; ЮТест.ОжидаетЧто(РезультатСложения) .Равно(Результат); КонецПроцедуры При регистрации указываются параметры, с которыми должен быть вызван тест, дополняем сигнатуру процедуры, чтобы она приняла параметры и переводим тест на использование этих параметров. Также можно добавить проверок. ОМ_ПервыйТест Процедура Сложение(ПервыйОперанд, ВторойОперанд, Результат) Экспорт РезультатСложения = ПервыйОперанд + ВторойОперанд; ЮТест.ОжидаетЧто(РезультатСложения) .Заполнено() .ИмеетТип(\"Число, Строка\") .Равно(Результат); КонецПроцедуры Поздравляю с первый реализованным тестом. Используя руководство и имеющиеся тесты вы сможете дальше изучить и написать более полезные тесты для своих продуктов. Примеры тестов: Тестов движка Тесты других открытых проектов bellerage-ssl AdvancedGlobalSearchOneS Также есть видео курс, кажется годным, но все не смотрел.","s":"Первый тест","u":"/yaxunit/docs/getting-started/first-test","h":"#первый-тест","p":262},{"i":268,"t":"YAxUnit - это расширение для 1С:Предприятия, которое необходимо добавить к вашему проекту.","s":"Установка","u":"/yaxunit/docs/getting-started/install/","h":"","p":267},{"i":270,"t":"1С:Предприятие версии 8.3.10 или старше","s":"Требования","u":"/yaxunit/docs/getting-started/install/","h":"#требования","p":267},{"i":273,"t":"Скачаем архив релиза Копируем из архива расширение расположенное в каталоге exts/yaxunit/ в свой каталог с исходниками (не в workspace) Импортируем проект расширения в workspace Привязываем импортированный проект расширения к конфигурации Обновляем конфигурацию В конфигураторе снимаем с расширения безопасный режим и защиту от опасных действий Готово, можно приступить к написанию тестов. совет Для удобства разработки тестов рекомендуется установить плагин","s":"Первичная установка тестового движка в рабочее пространство (workspace)","u":"/yaxunit/docs/getting-started/install/","h":"#первичная-установка-тестового-движка-в-рабочее-пространство-workspace","p":267},{"i":275,"t":"Скачаем архив релиза Если вы дорабатывали движок, то скачиваем архив оригинальной установленной версии движка Разархивируем их во временный каталог Воспользуемся механизмом сравнения объединения EDT Второй источник - каталог к новой версии тестового движка Использование третьего источника нужно для трехстороннего сравнения и применяется при доработках движка. Нажимаем \"Объединить\" Готово.","s":"Обновление тестового движка","u":"/yaxunit/docs/getting-started/install/","h":"#обновление-тестового-движка","p":267},{"i":277,"t":"Скачаем расширение (cfe) релиза Загружаем в конфигуратор Снимаем с расширения безопасный режим и защиту от опасных действий Готово","s":"Установка в конфигуратор","u":"/yaxunit/docs/getting-started/install/","h":"#установка-в-конфигуратор","p":267},{"i":279,"t":"Большая часть публичной функциональности тестового движка YAxUnit реализована с использование текучих выражений (Fluent interface) Основная цель их использования - улучшение читаемости кода и упрощение работы с движком. Текучие выражения хорошо зарекомендовали себя и широко применяются в других языках (примеры: C#: builder pattern, java: stream-api, php: dsl, C#: tests assertions, 1С: текучие утверждения, 1С: Элемент, 1С: объектная модель запроса). Текучие выражения - это цепочка методов, объединенных одним контекстом, который они настраивают/обрабатывают. Он упрощает множественные вызовы методов одного и того же объекта. Например: Создание документа с использованием текучих выражений Документ = ЮТест.Данные().КонструкторОбъекта(Документы.ПриходТовара) .Установить(\"Поставщик\", Поставщик) // Устанавливает значение реквизита документа. .Фикция(\"Дата\") // Генерирует случайную дату. .Фикция(\"Номер\") // Генерирует случайный номер. .Фикция(\"Склад\") // Создает \"пустышку\" склада. .Фикция(\"Валюта\") // Создает \"пустышку\" валюты. .ТабличнаяЧасть(\"Товары\") // Переключает контекст на работу с табличной частью \"Товары\". .ДобавитьСтроку() // Добавляет строку табличной части. .Фикция(\"Товар\", Новый Структура(\"Поставщик\", Поставщик)) // Создает \"пустышку\" товары от конкретного поставщика. .Фикция(\"Цена\") // Генерирует случайную цену. .Провести(); Проверка документа с использованием текучих выражений ЮТест.ОжидаетЧто(Документ) .Свойство(\"Дата\").Заполнено() // Проверяет, что дата документа заполнена. .Свойство(\"Номер\").Заполнено() // Проверяет, что номер документа заполнен. .Свойство(\"Склад\").Заполнено() // Проверяет, что склад документа заполнен. .Свойство(\"Валюта\").Заполнено() // Проверяет, что валюта документа заполнена. .Свойство(\"Товары\").ИмеетДлину(1) // Проверяет, что табличная часть \"Товары\" имеет длину 1. .Свойство(\"Товары[0].Товар\").Заполнено() // Проверяет, что товар из первой строки заполнен .Свойство(\"Товары[0].Товар.Поставщик\").Равно(Поставщик); // и имеет поставщика, равного нужному Примеры выше можно было бы реализовать без использования текучих выражений, например: Создание документа с заполнением случайных значений Документ = Документы.ПриходТовара.СоздатьДокумент(); Документ.Поставщик = Поставщик; Документ.Дата = ЮТест.Данные().СлучайнаяДата(); Документ.Номер = ЮТест.Данные().СлучайнаяСтрока(); Документ.Склад = ЮТест.Данные().Фикция(Тип(\"СправочникСсылка.Склад\")); Документ.Валюта = ЮТест.Данные().Фикция(Тип(\"СправочникСсылка.Валюты\")); СтрокаТовары = Документ.Товары.Добавить(); СтрокаТовары.Товар = ЮТест.Данные().Фикция(Тип(\"СправочникСсылка.Товары\"), Новый Структура(\"Поставщик\", Поставщик)); СтрокаТовары.Цена = ЮТест.Данные().СлучайноеПоложительноеЧисло(); Документ.Записать(РежимЗаписиДокумента.Проведение); Ссылка = Документ.Ссылка; Или вариант используя конструктора, но без цепочки вызовов Конструктор = ЮТест.Данные().КонструкторОбъекта(Документы.ПриходТовара); Конструктор.Установить(\"Поставщик\", Поставщик); Конструктор.Фикция(\"Дата\"); Конструктор.Фикция(\"Номер\"); Конструктор.Фикция(\"Склад\"); Конструктор.Фикция(\"Валюта\"); Конструктор.ТабличнаяЧасть(\"Товары\"); Конструктор.ДобавитьСтроку(); Конструктор.Фикция(\"Товар\", Новый Структура(\"Поставщик\", Поставщик)); Конструктор.Фикция(\"Цена\"); Документ = Конструктор.Провести(); Первый вариант (с использованием текучих выражений) не содержит \"служебного\" кода (обращения к документу или конструктору), таким образом концентрация полезного кода выше, меньше отвлекающих факторов и больше акцент на то, что действительно важно. Но при этом текучие выражения имеют и ряд минусов: Проблема с отладкой, нельзя поставить точку внутри цепочки, только проход по шагам. Не работает контекстная подсказка в конфигураторе (хотя она и так редко работает). Необходимость привычки и использовать \"правильное\" форматирование (отступы).","s":"Текучий интерфейс","u":"/yaxunit/docs/getting-started/fluent-api","h":"","p":278},{"i":281,"t":"Текучие выражения работают за счет передачи контекста между вызовами, достигается это тем, что объект, реализующий интерфейс текучих выражений: хранит внутри себя контекст(состояние) возвращает сам себя из методов или новый объект, передав в него текущий контекст. В языках, поддерживающих ООП, под каждый текучий интерфейс создается свой класс, хранящий контекст и предоставляющий необходимый API. В 1С это можно реализовать в виде набора обработок. Таким образом в YAxUnit созданы: Конструктор объектов информационной базы, ЮТест.Данные().КонструкторОбъекта. Конструктор объектов XDTO, ЮТест.Данные().КонструкторОбъектаXDTO. Эмулятор выборки данных ADO.RecordSet, ЮТест.Данные().ADORecordSet. Эмулятор запроса к http сервису, ЮТест.Данные().HTTPСервисЗапрос. А есть, другая часть API построенная на текучих выражения, она реализуется через общие модули и хранение состояния в глобальном контексте. Общие модули позволяют, в отличии от обработок: создавать API доступный и на клиенте, и на сервере избежать дублирования кода, который приводи к расхождению логики api не захламлять контекстную подсказку свойствами обработки (или формы для клиента) оптимизировать время работы (нет затрат на создание обработок) Дополнительно, так как контекст глобальный, не обязательно передавать объект, чтобы получить доступ к настроенному контексту. Например: При регистрации теста, информация о тестах никуда не возвращается, движок, после вызова метода ИсполняемыеСценарии, просто считывает результат из глобального контекста. Или настройки мокито, выполненные в методе теста сразу же доступны в методах других модулей (перехватываемых).","s":"Принцип работы текучих выражений в YAxUnit","u":"/yaxunit/docs/getting-started/fluent-api","h":"#принцип-работы-текучих-выражений-в-yaxunit","p":278},{"i":283,"t":"Для того чтобы лучше понять тестирование и научиться разным приемам читайте/ищите статьи по тестированию в других языках/продуктах. Большинство практик и примеров универсальные и никак не связаны с тем, что вы тестируете, разница лишь в инструментарии. Перед внедрением, когда вы уже попробовали и поняли необходимость использования тестов вам следует сразу же продумать и регламентировать Подход к организации тестов - что тестировать, что нет, как называть модули с тестами, как именовать модули помощники. Это все нужно чтобы упростить работу с тестами в будущем. Как вам валидировать \"правильность\" тестов, чтобы они были действительно полезными.","s":"Рекомендации","u":"/yaxunit/docs/getting-started/recomendations","h":"","p":282},{"i":285,"t":"Если у вас в компании множество команд занимающихся тестированием, то вам следует: Продумать схему обновления, рекомендую использовать релизный репозиторий и обновление через git Возможно стоит создать свою версию движка на базе публичной версии, в которой вы будете собирать \"помогаторы\" тестирования для ваших продуктов.","s":"Внедрение","u":"/yaxunit/docs/getting-started/recomendations","h":"#внедрение","p":282},{"i":287,"t":"При написании тестов не стоит забывать, что вы пишете код, а это значит, что вы можете использовать те же принципы, что при обычной разработке. Вы можете создавать общие модули и экспортные методы, которые упростят написание тестов для вашего продукта. Такие как модули создания тестовых данных, настройки мокирования, общих проверок и так далее. Главное сначала подумать об организации работы с ними, чтобы в будущем было проще находить нужные методы и избежать конфликтов при разработке.","s":"Модули помощники","u":"/yaxunit/docs/getting-started/auxiliary-modules","h":"","p":286},{"i":289,"t":"Предположим у нас есть подсистема управления складом, которая содержит документы поступления, перемещения и реализации. Создание документа поступления нам понадобится при тестировании всех видов документов, поэтому стоит вынести это в отдельный общий модуль. ОбщийМодуль.ТестовыеДанныеУправлениеСкладом Функция НовоеПоступлениеТовара(Склад, Товар, Поставщик = Неопределено) Экспорт Конструктор = ЮТест.Данные().КонструкторОбъекта(Документы.ПоступлениеТоваров) .ФикцияОбязательныхПолей() .Установить(\"Склад\"); Если Поставщик = Неопределено Тогда Конструктор.Фикция(\"Поставщик\"); Иначе Конструктор.Установить(\"Поставщик\", Поставщик); КонецЕсли Возврат Конструктор .ТабличнаяЧасть(\"Товары\") .ДобавитьСтроку() .Установить(\"Номенклатура\", Товар) .Фикция(\"Количество\") .Фикция(\"Цена\") .Записать(); КонецФункции Бывают случаи, когда слишком сложно кастомизировать создание объекта через параметры, тогда удобнее возвращать конструктор объекта с базовым заполнением. Либо сделать набор методов-пресетов для различных кейсов. ОбщийМодуль.ТестовыеДанныеУправлениеСкладом Функция КонструкторПоступленияТовара(Склад, Поставщик = Неопределено) Экспорт Конструктор = ЮТест.Данные().КонструкторОбъекта(Документы.ПоступлениеТоваров) .ФикцияОбязательныхПолей() .Установить(\"Склад\"); Если Поставщик = Неопределено Тогда Конструктор.Фикция(\"Поставщик\"); Иначе Конструктор.Установить(\"Поставщик\", Поставщик); КонецЕсли Возврат Конструктор; КонецФункции Функция НовоеПоступлениеТовара(Склад, Товар, Поставщик = Неопределено) Экспорт Конструктор = КонструкторПоступленияТовара(Склад, Поставщик); Возврат Конструктор .ТабличнаяЧасть(\"Товары\") .ДобавитьСтроку() .Установить(\"Номенклатура\", Товар) .Фикция(\"Количество\") .Фикция(\"Цена\") .Записать(); КонецФункции Функция НовоеПоступлениеТовараОтЮрЛица(Склад, Товар) Экспорт Поставщик = НовоеЮрЛицо(); Конструктор = КонструкторПоступленияТовара(Склад, Поставщик); Возврат Конструктор .ТабличнаяЧасть(\"Товары\") .ДобавитьСтроку() .Установить(\"Номенклатура\", Товар) .Фикция(\"Количество\") .Фикция(\"Цена\") .Записать(); КонецФункции Функция НовоеПоступлениеТовараОтФизЛица(Склад, Товар) Экспорт Поставщик = НовоеФизЛицо(); Конструктор = КонструкторПоступленияТовара(Склад, Поставщик); Возврат Конструктор .ТабличнаяЧасть(\"Товары\") .ДобавитьСтроку() .Установить(\"Номенклатура\", Товар) .Фикция(\"Количество\") .Фикция(\"Цена\") .Записать(); КонецФункции","s":"Конструкторы данных","u":"/yaxunit/docs/getting-started/auxiliary-modules","h":"#конструкторы-данных","p":286},{"i":291,"t":"Конфигурация настраивается в файле json и может иметь следующие параметры.","s":"Конфигурация запуска","u":"/yaxunit/docs/getting-started/run/configuration","h":"","p":290},{"i":293,"t":"Имя параметра Тип Значение по умолчанию Описание filter Object Object, смотрите ниже Параметры фильтрации, поиска тестов reportFormat String \"jUnit\" Формат отчета о тестировании, возможные значения: \"jUnit\", \"JSON\" , \"allure\" reportPath String \"\" Путь к формируемому отчету, можно указать или каталог (в которому будет создан файл отчета) или путь к файлу closeAfterTests Boolean True Признак закрытия 1С:Предприятие по завершению тестирования showReport Boolean True Открыть форму отчета завершению тестирования logging Object Object, смотрите ниже Параметры логирования, подробнее ниже exitCode String \"\" Путь к файлу, в который будет записан признак успешного выполнения (0 - успешно, 1 - есть ошибки)","s":"Основные параметры","u":"/yaxunit/docs/getting-started/run/configuration","h":"#основные-параметры","p":290},{"i":295,"t":"Имя параметра Тип Значение по умолчанию Описание extensions Array [\"tests\"] Список имен расширений, из которых грузятся тесты modules Array Null Список имен модулей, из которых грузятся тесты tests Array Null Список полных путей к исполняемым тестам ([имя модуля.имя теста]) suites Array Null Не реализованно. Список имен тестовых наборов, которые будут запускаться tags Array Null Не реализованно. Список тегов, которые будут запускаться contexts Array Null Список имен контекстов исполнения, в которых будут запускаться тесты paths Array Null Не реализованно. Список полных путей к исполняемым тестам","s":"Параметры фильтрации","u":"/yaxunit/docs/getting-started/run/configuration","h":"#параметры-фильтрации","p":290},{"i":297,"t":"Имя параметра Тип Значение по умолчанию Описание file String \"\" Путь к файлу лога enable Boolean Null Использование логирвания. Если не указан, зависит от параметра file и console, если установлены - вкл, если нет - выкл console Boolean false Вывод лога в stdout (консоль) level String \"debug\" Уровень детализации лога. Возможные значения: \"debug\", \"info\", \"error\" Примеры: Запустить тесты расположенные в модулях МодульТестов1, МодульТестов2, закрыть предприятие по завершении и сохранить отчет в формате junit { \"filter\": { \"modules\": [\"МодульТестов1\", \"МодульТестов2\"] }, \"reportPath\": \"C:\\\\temp\\\\jUnit\\\\report.xml\", \"reportFormat\": \"jUnit\", \"closeAfterTests\": true } Запустить все тесты из расширения YAXUNIT и сохранить отчет файл C:\\temp\\jUnit\\report.xml, остальные параметры будут установлены по умолчанию { \"filter\": { \"extensions\": [\"YAXUNIT\"] }, \"reportPath\": \"C:\\\\temp\\\\jUnit\\\\report.xml\" } Запустить все тесты с выводом подробного лога в файл, сохранить отчет файл C:\\temp\\jUnit\\report.xml { \"reportPath\": \"C:\\\\temp\\\\jUnit\\\\report.xml\", \"logging\": { \"file\": \"C:\\\\temp\\\\jUnit\\\\tests.log\", \"level\": \"debug\" } }","s":"Параметры логирования","u":"/yaxunit/docs/getting-started/run/configuration","h":"#параметры-логирования","p":290},{"i":299,"t":"Для того, что бы вам и нам было проще писать тесты мы разработали плагин для EDT. С его помощью вы сможете: Запускать и отлаживать свои тесты; Просматривать результаты выполнения. И что-то еще Для установки плагина вам необходимо воспользоваться стандартным функционалом Eclipse (EDT) Установить новое ПО.... Открываем EDT. Переходим к Установить новое ПО (в меню Справка); Добавляем новый репозиторий; Основной репозиторий Develop Для версий EDT до 2023-02 https://bia-technologies.github.io/edt-test-runner/repository https://bia-technologies.github.io/edt-test-runner/dev/repository https://bia-technologies.github.io/edt-test-runner/repository/updates/23.x совет Для ускорения установки можно убрать галочку Обращаться во время инсталляции ко всем сайтам ... Нажимаем далее; Принимаем лицензию; Соглашаемся с предупреждением безопасности; И перезагружаем IDE. примечание EDT будет долго перезагружаться и это нормально.","s":"Установка плагина для работы с тестами в EDT","u":"/yaxunit/docs/getting-started/install/install-plugin","h":"","p":298},{"i":302,"t":"Тесты размещаются в расширениях конфигурации, вы можете их совместить с движком, либо создать отдельное расширение. Вместе с движком. Доступна контекстная подсказка. Сложнее обновлять движок, необходимо воспользоваться сравнением-объединением. В отдельном расширении. Нет подсказки по методам движка. Движок обновляется загрузкой/заменой. Проще переключаться между версиями. Движок можно не хранить в репозитории проекта. Мы в своих проектах используем первый вариант, так как удобство и экономия времени каждым разработчиком от контекстной подсказки перевешивает минус ручного обновления.","s":"Расширение с тестами","u":"/yaxunit/docs/getting-started/structure","h":"#расширение-с-тестами","p":300},{"i":304,"t":"Тесты располагаются в общих модулях (не заимствованных). Тестовые модули (наборы тестов объекта) состоят из следующих блоков: Метод регистрации тестов ИсполняемыеСценарии. В методе регистрации необходимо перечислить все тесты и, при необходимости, выполнить настройку. Реализация тестов, тестовые методы, собственно сами тесты. Обработчики событий, при необходимости. Принято на один тестируемый модуль объекта создавать один общий модуль с тестами, например, тесты на модуль объекта и отдельно тесты на модуль менеджера. Также полезно использовать регламент наименования тестовых модулей, так чтобы вам проще было с ними работать в будущем, облегчить навигацию. Рекомендуем рассмотреть схему именования с префиксами для типа объекта и суффиксами для типа модуля. Она поддерживается в плагине для EDT и если ее соблюдать, вы сможете с легкостью переключатся между тестом и тестируемым методом.","s":"Тестовые модули","u":"/yaxunit/docs/getting-started/structure","h":"#тестовые-модули","p":300},{"i":306,"t":"Тест состоит из двух обязательных частей: Регистрация в методе ИсполняемыеСценарии Реализация теста.","s":"Тестовые методы","u":"/yaxunit/docs/getting-started/structure","h":"#тестовые-методы","p":300},{"i":308,"t":"В общем случае запуск тестов выполняется запуском 1С:Предприятия с параметром RunUnitTests. При необходимости можно указать путь к файлу конфигурации запуска для настройки прогона тестов. Для упрощения этого процесса есть другие способы. Важно После загрузки расширения в информационную базу необходимо отключить у него безопасный режим и защиту от опасных действий","s":"Запуск и отладка тестов","u":"/yaxunit/docs/getting-started/run/","h":"","p":307},{"i":310,"t":"Если вы используете EDT, то установив плагин вы получаете возможность запускать тесты нажатием одной кнопки. info Все описанные ниже способы позволяют запускать тесты в режиме отладки","s":"Запуск из EDT","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-edt","p":307},{"i":312,"t":"Плагин добавляет в EDT новый тип конфигурации запуска приложения. С ее помощью вы можете запускать тесты также как и 1С:Предприятие (кнопкой панели инструментов) Важно Без созданной и настроенной конфигурации запуска модульных тестов не будут работать другие варианты запуска.","s":"Конфигурация запуска","u":"/yaxunit/docs/getting-started/run/","h":"#конфигурация-запуска","p":307},{"i":314,"t":"Также плагин позволяет запускать тесты прямо из модуля для нужных методов. Если вы перейдете в модуль с тестами, то рядом с каждым тестовым методом вы увидите иконки запуска. Кликнув по ним вы сможете запустить конкретный тест. При нажатии на иконку метода ИсполняемыеСценарии вы запустите все тесты модуля. Команды запуска добавлены в схему модуля.","s":"Запуск из боковой панели модуля","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-боковой-панели-модуля","p":307},{"i":316,"t":"Плагин добавляет набор различных команд для работы с тестами, среди которых есть и запуск. Основным ее плюсом является возможность работать с клавиатуры и не запоминать большое количество горячих клавиш. Ctrl+Shift+T, затем Enter и тест текущего метода запущен.","s":"Запуск из палитры команд","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-палитры-команд","p":307},{"i":318,"t":"Возможности конфигуратора не столь большие, поэтому есть только один способ запустить тесты. Создать файл конфигурации запуска Вручную С помощью формы настройки Указать путь к файлу конфигурации запуска в параметрах запуска tip При разработки/отладке тестов полезно держать открытой форму настройки для быстрой перенастройки запускаемых тестов. Сначала запустил тесты модуля, потом в той же форме убрали \"зеленые\", сохранили настройку в тот же файл и выполнили отладку нужных тестов, запустив их из конфигуратор.","s":"Запуск из конфигуратора","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-конфигуратора","p":307},{"i":320,"t":"Для запуска тестов из предприятия необходимо воспользоваться командой Запуск тестирования","s":"Запуск из предприятия","u":"/yaxunit/docs/getting-started/run/","h":"#запуск-из-предприятия","p":307},{"i":322,"t":"[путь к клиенту 1С] ENTERPRISE [Параметры подключения к ИБ] [Параметры авторизации] /C RunUnitTests=/путь/к/конфигурационному/файлу Для формирования строки запуска можно воспользоваться интерфейсом настройки Пример: \"C:\\Program Files\\1cv8\\8.3.18.1698\\bin\\1cv8c.exe\" ENTERPRISE /IBName MyInfoBase /N Admin /C RunUnitTests=C:\\tmp\\test-config.json Запуск тестов в режиме тонкого клиента на информационной базе MyInfoBase под пользователем Admin по конфигурации указанной в файле C:\\tmp\\test-config.json","s":"Строка запуска предприятия","u":"/yaxunit/docs/getting-started/run/","h":"#строка-запуска-предприятия","p":307},{"i":324,"t":"Расширение добавляет в командный интерфейс конфигурации новый раздел \"Юнит тест\". Из него вы можете интерактивно запускать тесты или сформировать файл конфигурации запуска.","s":"Графический интерфейс","u":"/yaxunit/docs/yaxunit-ui","h":"","p":323},{"i":326,"t":"Для запуска и отладки тестов вы можете воспользоваться командой \"Запуск тестов\" Будут автоматически загружены все тесты и выведены в виде дерева сгруппированного по тестовым наборам (модулям). Из этой формы вы можете запустить нужные тесты. И сразу же увидеть результат прогона.","s":"Запуск тестов","u":"/yaxunit/docs/yaxunit-ui","h":"#запуск-тестов","p":323},{"i":329,"t":"Для облегчения создания конфигурации реализована форма конфигурирования. Чтобы найти форму, перейдите в подсистему Юнит тесты или воспользуйтесь меню Все функции / Функции для технического специалиста. Там найдете обработку Юнит тесты, из которой, воспользовавшись командой Сформировать настройки попадете в интерфейс конфигурирования Позволяет указать запускаемые тесты и получить строку запуска из терминала и параметры для конфигуратора","s":"Интерфейс настройки конфигурации","u":"/yaxunit/docs/yaxunit-ui","h":"#интерфейс-настройки-конфигурации","p":323},{"i":332,"t":"Для загрузки данных из макетов подойдет метод ЮТест.Данные().ЗагрузитьИзМакета Он позволяет: Загружать данные из табличных макет (ТабличныйДокумент или ТекстовыйДокумент с таблицей markdown) Загружать данные на клиенте и на сервер Загружать не весь макет, а конкретную область (в одном макете может находится несколько таблиц данных) Приводить значения к указанным типам и создавать записи в базе данных Пример табличного документа: Товар Товар.Поставщик Товар.Вид Цена Количество Сумма Товар 1 Поставщик 1 Товар 100 1 100 Товар 1 100 2 200 Товар 1 Поставщик 2 Товар 100 3 300 Товар 2 Поставщик 1 Товар 2 000 1 2000 Услуга Услуга 300,5 1 300.5 Особенности: Данные в базе всегда создаются, не выполняется поиск уже существующих ссылок. При необходимости вы можете найти данные сами и передать в параметрах ЗаменяемыеЗначения tip При преобразовании табличного документа в таблицу значений существующие объекты метаданных не изменяются, только создаются новые. Нужно проявлять внимательность в случаях, если в базе уже имеются данные с тем же кодом/наименованием (и по ним используется контроль уникальности), что и в табличном документе. Можно указывать значения вложенных реквизитов, например при создании товаров (колонка Товар) необходимо указать конкретные значения поставщика и вида товара. Для этого необходимо добавить колонки Товар.Поставщик и Товар.Вид, в которых указать нужные значения. Переиспользование созданных данных, используется КэшЗначений, в который помещаются все созданные данные, если кэш содержит данные подходящего типа с указанным идентификатором, то используется ранее созданное значение из кэша. Например, в примере выше, для первой строки будет создан товар с идентификатором Товар 1. В строках 2 и 3 будет использовано значение из кэша - Товар 1, в 4й и 5й строке - созданы новые товары. tip Кэш значений может передаваться между загрузками разных макетов, например есть макет с табличной частью документа и второй макет с набором ожидаемых движений. Чтобы созданные товары из табличной части соответствовали товарам движений необходимо передать КэшЗначений между загрузками. КэшЗначений = Неопределено; ТабличнаяЧасть = ЮТест.Данные().ЗагрузитьИзМакета(\"ОбщийМакет.ДанныеДокумента.ТабличнаяЧасть\", ОписанияТиповТЧ, КэшЗначений); ОжидаемыеДвижения = ЮТест.Данные().ЗагрузитьИзМакета(\"ОбщийМакет.ДанныеДокумента.ДвиженияРегистра1\", ОписанияТиповРегистра1, КэшЗначений); tip Значение в колонке \"Товар\" является идентификатором ссылки. Для справочника значение этой колонки по умолчанию записывается в реквизит \"Наименование\" или \"Код\", в зависимости от того, какой из этих реквизитов является основным представлением. Для документа это значение никуда не записывается, оно лишь является идентификатором. Таким образом, если одному значению в колонке \"Товар\" соответствуют различные значения в других колонках, то в элемент справочника запишутся реквизиты из первой строки, а для других строк ссылка на этот элемент будет проставлена по соответствующему идентификатору","s":"Описание","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#описание","p":330},{"i":335,"t":"В качестве источника данных можно использовать весь табличный документ. В этом случае будет получена таблица значений, начиная с 1-ой строки и 1-ой колонки табличного документа до первой пустой строки. Исходные данные Товар Товар.Поставщик Товар.Вид Цена Количество Сумма Товар 1 Поставщик 1 Товар 100 1 100 Товар 1 100 2 200 Товар 1 Поставщик 2 Товар 100 3 300 Товар 2 Поставщик 1 Товар 2 000 1 2000 Услуга Услуга 300,5 1 300.5 info Этот код работает и на клиенте и на сервер. Для сервера результатом будет таблица значений, для клиента - массив структур ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Цена\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Сумма\", Новый ОписаниеТипов(\"Число\")); ТаблицаТоваров = ЮТест.Данные().ЗагрузитьИзМакета(\"ОбщийМакет.ЮТ_МакетТестовыхДанных\", ОписанияТипов); ЮТест.ОжидаетЧто(ТаблицаТоваров) .ИмеетТип(\"ТаблицаЗначений\") .ИмеетДлину(5) .Свойство(\"[0].Товар.Наименование\").Равно(\"Товар 1\") .Свойство(\"[0].Товар.Поставщик.Наименование\").Равно(\"Поставщик\") .Свойство(\"[0].Товар.Вид\").Равно(Перечисления.ВидыТоваров.Товар) .Свойство(\"[0].Количество\").Равно(1) .Свойство(\"[0].Цена\").Равно(100) .Свойство(\"[0].Сумма\").Равно(100) .Свойство(\"[1].Товар\").Равно(ТаблицаТоваров[0].Товар) .Свойство(\"[1].Количество\").Равно(2) .Свойство(\"[1].Цена\").Равно(100) .Свойство(\"[1].Сумма\").Равно(200) .Свойство(\"[2].Товар\").Равно(ТаблицаТоваров[0].Товар) .Свойство(\"[2].Количество\").Равно(3) .Свойство(\"[2].Цена\").Равно(100) .Свойство(\"[2].Сумма\").Равно(300) .Свойство(\"[3].Товар.Наименование\").Равно(\"Товар 2\") .Свойство(\"[3].Товар.Поставщик.Наименование\").Равно(\"Поставщик\") .Свойство(\"[3].Товар.Вид\").Равно(Перечисления.ВидыТоваров.Товар) .Свойство(\"[3].Количество\").Равно(1) .Свойство(\"[3].Цена\").Равно(2000) .Свойство(\"[3].Сумма\").Равно(2000) .Свойство(\"[4].Товар.Наименование\").Равно(\"Услуга\") .Свойство(\"[4].Товар.Поставщик\").НеЗаполнено() .Свойство(\"[4].Товар.Вид\").Равно(Перечисления.ВидыТоваров.Услуга) .Свойство(\"[4].Количество\").Равно(1) .Свойство(\"[4].Цена\").Равно(300.5) .Свойство(\"[4].Сумма\").Равно(300.5);","s":"Загрузка всего макета","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-всего-макета","p":330},{"i":337,"t":"Можно получить отдельную область из табличного документа и использовать ее в качестве источника данных для таблицы значений. Таким образом в одном табличном документе можно хранить несколько таблиц. Пример юнит-теста для проверки работы метода. На входе он получает таблицу значений, которую заполняет и/или возвращает. В одной области табличного документа - исходные данные, передаваемые в качестве входящего параметра, а в другой - таблица с ожидаемым значением. Исходные данные Товар Товар.Поставщик Товар.Вид Количество Товар 1 Поставщик 1 Товар 1 Товар 2 Поставщик 1 Товар 1 Услуга Услуга 1 Товар Цена Количество Сумма Товар 1 100 1 100 Товар 2 2 000 1 2000 Услуга 300,5 1 300.5 ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); // Для общего использования созданных значений используется переменная КешЗначений. // В двух табличных документах одинаковый состав товаров. // Чтобы в обеих таблицах этому товару соответствовало одно значение справочника - // нужно передавать в параметре функции переменную, в которой будут храниться соответствия // наименований к ссылкам на объекты. КэшЗначений = Новый Соответствие; ТаблицаИсходныхДанных = ЮТест.Данные().ЗагрузитьИзМакета( \"ОбщийМакет.ЮТ_МакетТестовыхДанных.R1C1R4C4\", ОписанияТипов, КэшЗначений ); ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Цена\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Сумма\", Новый ОписаниеТипов(\"Число\")); ТаблицаОжидаемыхЗначений = ЮТест.Данные().ЗагрузитьИзМакета( \"ОбщийМакет.ЮТ_МакетТестовыхДанных.R5C1R8C4\", ОписанияТипов, КэшЗначений ); ТаблицаРезультата = ОбщийМодуль1.ТаблицаТоваровСЦенамиИзОстатков(ТаблицаИсходныхДанных); ЮТест.ОжидаетЧто(ТаблицаРезультата) .Равно(ТаблицаОжидаемыхЗначений);","s":"Загрузка области из макета","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-области-из-макета","p":330},{"i":339,"t":"Интеграционный-тест для проверки формирования движений документа по некоторому регистру. В первой таблице - табличная часть документа. Во второй - реквизиты самого документа. В третьей - ожидаемые движения по регистру, который нужно протестировать. В макете мы создадим три именованные области с таблицами Область Реквизиты_документа ПриходТовара Дата Поставщик Валюта Склад Организация Документ 1 Дата Поставщик Валюта Склад Организация Область Табличная_часть_документа Документ Товар Товар.Поставщик Товар.Вид Цена Количество Сумма Документ 1 Товар 1 Поставщик Товар 100 1 100 Документ 1 Товар 2 Поставщик Товар 2 000 1 2000 Документ 1 Услуга Услуга 300,5 1 300.5 Область Ожидаемые_движения Период Активность ВидДвижения Регистратор Склад Товар Количество Дата Истина Приход Документ 1 Склад Товар 1 1 Дата Истина Приход Документ 1 Склад Товар 2 1 Дата Истина Приход Документ 1 Склад Услуга 1 КэшЗначений = Новый Соответствие; Организация = ЮТест.КонтекстМодуля().Организация; Поставщик = ЮТест.Данные().СоздатьЭлемент(Справочники.Контрагенты, \"Поставщик\"); ДатаДокумента = НачалоДня(ТекущаяДатаСеанса()); // Если нужно не создавать новое значение, а использовать существующее, // например, созданное ранее, то можно использовать соответствие - // значение из табличного документа к нужному значению. ЗаменяемыеЗначения = Новый Соответствие; ЗаменяемыеЗначения.Вставить(\"Организация\", Организация); ЗаменяемыеЗначения.Вставить(\"Поставщик\", Поставщик); ЗаменяемыеЗначения.Вставить(\"Дата\", ДатаДокумента); ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"ПриходТовара\", Новый ОписаниеТипов(\"ДокументСсылка.ПриходТовара\")); ОписанияТипов.Вставить(\"Дата\", Новый ОписаниеТипов(\"Дата\")); ОписанияТипов.Вставить(\"Организация\", Новый ОписаниеТипов(\"СправочникСсылка.Организации\")); ОписанияТипов.Вставить(\"Поставщик\", Новый ОписаниеТипов(\"СправочникСсылка.Контрагенты\")); ОписанияТипов.Вставить(\"Склад\", Новый ОписаниеТипов(\"СправочникСсылка.Склады\")); ОписанияТипов.Вставить(\"Валюта\", Новый ОписаниеТипов(\"СправочникСсылка.Валюты\")); ТаблицаДокументов = ЮТест.Данные().ЗагрузитьИзМакета( \"ОбщийМакет.ЮТ_МакетТестовыхДанных.Реквизиты_документа\" ОписанияТипов, КэшЗначений, ЗаменяемыеЗначения ); ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Документ\", Новый ОписаниеТипов(\"ДокументСсылка.ПриходТовара\")); ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Цена\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Сумма\", Новый ОписаниеТипов(\"Число\")); ТаблицаТоваров = ЮТест.Данные().ЗагрузитьИзМакета( \"ОбщийМакет.ЮТ_МакетТестовыхДанных.Табличная_часть_документа\", ОписанияТипов, КэшЗначений, ЗаменяемыеЗначения ); ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Период\", Новый ОписаниеТипов(\"Дата\")); ОписанияТипов.Вставить(\"Активность\", Новый ОписаниеТипов(\"Булево\")); ОписанияТипов.Вставить(\"ВидДвижения\", Новый ОписаниеТипов(\"ВидДвиженияНакопления\")); ОписанияТипов.Вставить(\"Регистратор\", Новый ОписаниеТипов(\"ДокументСсылка.ПриходТовара\")); ОписанияТипов.Вставить(\"Склад\", Новый ОписаниеТипов(\"СправочникСсылка.Склады\")); ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); ТаблицаДвижений = ЮТест.Данные().ЗагрузитьИзМакета( \"ОбщийМакет.ЮТ_МакетТестовыхДанных.Ожидаемые_движения\", ОписанияТипов, КэшЗначений, ЗаменяемыеЗначения ); Для Каждого ДанныеДокументов Из ТаблицаДокументов Цикл Отбор = Новый Структура(\"Документ\", ДанныеДокументов.ПриходТовара); ТоварыДокумента = ТаблицаТоваров.Скопировать(Отбор); ДокументОбъект = ДанныеДокументов.Документ.ПолучитьОбъект(); ДокументОбъект.Товары.Загрузить(ТоварыДокумента); ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение); ТоварныеЗапасы = ДокументОбъект.Движения.ТоварныеЗапасы; ТоварныеЗапасы.Прочитать(); ТаблицаТоварныхЗапасов = ТоварныеЗапасы.Выгрузить(); Отбор = Новый Структура(\"Регистратор\", ДанныеДокументов.ПриходТовара); ОжидаемыеТоварныеЗапасы = ТаблицаДвижений.Скопировать(Отбор); ЮТест.ОжидаетЧто(ТаблицаТоварныхЗапасов) .Равно(ОжидаемыеТоварныеЗапасы); КонецЦикла;","s":"Загрузка документа с табличной частью и проверка движений","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#загрузка-документа-с-табличной-частью-и-проверка-движений","p":330},{"i":341,"t":"Создание и заполнение объектов двойной вложенности и более (например, \"Товар.Поставщик.ВидКонтрагента\") не поддерживается. Если есть такая потребность, следует использовать переменную \"ЗаменяемыеЗначения\". Т.е. следует создать и заполнять нужный объект перед преобразованием табличного документа в таблицу значений, а затем передать его в функцию получения таблицы значений. Поставщик = ЮТест.Данные().КонструкторОбъекта(Справочники.Контрагенты) .Установить(\"ВидКонтрагента\", ВидКонтрагента) .Записать(); // В табличном документе должна быть колонка [Товар.Поставщик] со значением \"Некий поставщик\". // В этом случае в таблицу значений попадет значение, полученное из соответствия ЗаменяемыеЗначения = Новый Соответствие; ЗаменяемыеЗначения.Вставить(\"Некий поставщик\", Поставщик); ТаблицаЗначений = ЮТест.Данные().ЗагрузитьИзМакета( ТабличныйДокумент, ОписанияТипов, Неопределено, ЗаменяемыеЗначения ); ЮТест.ОжидаетЧто(ТаблицаЗначений) .Свойство(\"[0].Товар.Поставщик.ВидКонтрагента\").Равно(ВидКонтрагента);","s":"Заменяемые значения","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#заменяемые-значения","p":330},{"i":343,"t":"Можно использовать составные типы в колонках таблицы значений, но создание объектов метаданных для такой колонки не поддерживается. Можно воспользоваться соответствием \"ЗаменяемыеЗначения\", если потребуется в одну колонку записать значения разных типов. ТипАналитики = Новый ОписаниеТипов(\"СправочникСсылка.Товары,СправочникСсылка.Контрагенты\"); ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Аналитика\", ТипАналитики); Поставщик = ЮТест.Данные().СоздатьЭлемент(Справочники.Контрагенты); Товар = ЮТест.Данные().СоздатьЭлемент(Справочники.Товары); ЗаменяемыеЗначения = Новый Соответствие; ЗаменяемыеЗначения.Вставить(\"Аналитика (Поставщик)\", Поставщик); ЗаменяемыеЗначения.Вставить(\"Аналитика (Товар)\", Товар); ТаблицаЗначений = ЮТест.Данные().ЗагрузитьИзМакета( ТабличныйДокумент, ОписанияТипов, Неопределено, ЗаменяемыеЗначения ); ЮТест.ОжидаетЧто(ТаблицаЗначений) .Свойство(\"[0].Аналитика\").Равно(Поставщик) .Свойство(\"[1].Аналитика\").Равно(Товар) ;","s":"Заменяемые значения и составные типы","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#заменяемые-значения-и-составные-типы","p":330},{"i":345,"t":"При необходимости вы можете разместить таблицу с данными прямо в коде. tip Если вы используете EDT, то удобнее редактировать многострочные строки в Редакторе запроса ТаблицаMarkDown = \"| Товар | Цена | Количество | Сумма | ||---------|-------|------------|-------| || Товар 1 | 100 | 1 | 100 | || Товар 2 | 2 000 | 1 | 2000 | || Услуга | 300,9 | 1 | 300,9 |\"; ОписанияТипов = Новый Соответствие; ОписанияТипов.Вставить(\"Товар\", Новый ОписаниеТипов(\"СправочникСсылка.Товары\")); ОписанияТипов.Вставить(\"Цена\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Количество\", Новый ОписаниеТипов(\"Число\")); ОписанияТипов.Вставить(\"Сумма\", Новый ОписаниеТипов(\"Число\")); Данные = ЮТест.Данные().ЗагрузитьИзМакета(ТаблицаMarkDown, ОписанияТипов);","s":"Inline макеты, загрузка из Markdown","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#inline-макеты-загрузка-из-markdown","p":330},{"i":347,"t":"ЮТест.Данные().ТаблицаMarkDown - Читает таблицу MarkDown в массив структур Макет = \"| Имя | ИмяКоллекции | Конструктор | Группы | Ссылочный | Реквизиты | Измерения | Ресурсы | РеквизитыАдресации | ТабличныеЧасти | ||------------------------|-------------------------|----------------------|--------|-----------|-----------|-----------|---------|--------------------|----------------| || Справочник | Справочники | СоздатьЭлемент | + | + | + | | | | + | || Документ | Документы | СоздатьДокумент | | + | + | | | | + | || ПланВидовХарактеристик | ПланыВидовХарактеристик | СоздатьЭлемент | + | + | + | | | | + | || ПланСчетов | ПланыСчетов | СоздатьСчет | | + | + | | | | + | || ПланВидовРасчета | ПланыВидовРасчета | СоздатьВидРасчета | | + | + | | | | + | || ПланОбмена | ПланыОбмена | СоздатьУзел | | + | + | | | | + | || РегистрСведений | РегистрыСведений | СоздатьНаборЗаписей | | | + | + | + | | | || РегистрНакопления | РегистрыНакопления | СоздатьНаборЗаписей | | | + | + | + | | | || РегистрБухгалтерии | РегистрыБухгалтерии | СоздатьНаборЗаписей | | | + | + | + | | | || РегистрРасчета | РегистрыРасчета | СоздатьНаборЗаписей | | | + | + | + | | | || БизнесПроцесс | БизнесПроцессы | СоздатьБизнесПроцесс | | + | + | | | | + | || Задача | Задачи | СоздатьЗадачу | | + | + | | | + | + | |\"; КоллекцияОписаний = ЮТТестовыеДанные.ТаблицаMarkDown(Макет); ТипыМетаданных = Новый Структура(); Для Каждого Запись Из КоллекцияОписаний Цикл Описание = Новый Структура(); Описание.Вставить(\"Имя\", Запись.Имя); Описание.Вставить(\"ИмяКоллекции\", Запись.ИмяКоллекции); Описание.Вставить(\"Конструктор\", Запись.Конструктор); Описание.Вставить(\"Группы\", Запись.Группы = \"+\"); Описание.Вставить(\"Ссылочный\", Запись.Ссылочный = \"+\"); Описание.Вставить(\"Реквизиты\", Запись.Реквизиты = \"+\"); Описание.Вставить(\"Измерения\", Запись.Измерения = \"+\"); Описание.Вставить(\"Ресурсы\", Запись.Ресурсы = \"+\"); Описание.Вставить(\"РеквизитыАдресации\", Запись.РеквизитыАдресации = \"+\"); Описание.Вставить(\"ТабличныеЧасти\", Запись.ТабличныеЧасти = \"+\"); ТипыМетаданных.Вставить(Описание.Имя, Описание); ТипыМетаданных.Вставить(Описание.ИмяКоллекции, Описание); КонецЦикла; Возврат ТипыМетаданных; ЮТест.Данные().СтруктураMarkDown - Читает таблицу MarkDown в структуру Функция ИмяКоллекции(Имя) Экспорт Макет = \"| Имя | ИмяКоллекции | ||------------------------|-------------------------| || Справочник | Справочники | || Документ | Документы | || ПланВидовХарактеристик | ПланыВидовХарактеристик | || ПланСчетов | ПланыСчетов | || ПланВидовРасчета | ПланыВидовРасчета | || ПланОбмена | ПланыОбмена | || РегистрСведений | РегистрыСведений | || РегистрНакопления | РегистрыНакопления | || РегистрБухгалтерии | РегистрыБухгалтерии | || РегистрРасчета | РегистрыРасчета | || БизнесПроцесс | БизнесПроцессы | || Задача | Задачи | |\"; Описания = ЮТТестовыеДанные.СтруктураMarkDown(\"Имя\", Макет); Возврат Описания[Имя].ИмяКоллекции; КонецФункции","s":"Другие методы загрузки","u":"/yaxunit/docs/features/test-data/load-from-templates","h":"#другие-методы-загрузки","p":330}],"index":{"version":"2.3.9","fields":["t"],"fieldVectors":[["t/2",[0,0.115,1,6.196]],["t/4",[2,4.932,3,6.971]],["t/7",[0,0.112]],["t/9",[0,0.115,4,4.004]],["t/11",[0,0.109,5,7.587]],["t/13",[0,0.113]],["t/15",[0,0.115,6,4.565]],["t/17",[2,4.932,3,6.971]],["t/19",[0,0.115,7,6.084,8,5.422]],["t/21",[2,4.932,9,7.822]],["t/24",[0,0.115,10,5.003,11,5.003,12,5.003,13,5.003,14,5.003,15,5.003,16,5.003,17,5.003]],["t/26",[0,0.114,18,6.557,19,6.557,20,5.373,21,5.373,22,6.557]],["t/28",[0,0.11,23,7.531]],["t/30",[0,0.109,24,3.892,25,7.531]],["t/32",[0,0.113,26,6.868,27,6.868,28,6.868,29,6.868,30,5.26,31,6.868]],["t/34",[2,4.932,32,7.822]],["t/37",[0,0.107,33,6.613,34,3.729,35,7.421,36,7.421,37,6.613]],["t/39",[0,0.11,30,5.726,38,7.476]],["t/41",[0,0.114,20,5.48,21,5.48,30,5.122,39,6.686,40,6.686,41,6.686]],["t/44",[0,0.114,42,6.514,43,5.806,44,6.514,45,6.514]],["t/46",[0,0.113,20,5.785,21,5.785,46,7.059]],["t/48",[2,4.932,47,7.822]],["t/51",[0,0.114,43,5.696,48,4.895,49,6.391,50,6.391,51,6.391,52,6.391]],["t/53",[0,0.113,37,6.425,53,7.21]],["t/55",[0,0.114,54,6.776,55,6.776]],["t/57",[0,0.112,6,5.07,56,7.01,57,7.01,58,7.01,59,7.01,60,7.01]],["t/60",[0,0.112,30,5.522,61,7.21,62,5.908,63,7.21]],["t/62",[2,4.932,64,7.822]],["t/65",[0,0.115,62,4.927,65,6.012,66,6.012,67,6.012]],["t/67",[0,0.115,68,5.461,69,5.461,70,4.867,71,5.461,72,5.461,73,5.461,74,5.461,75,5.461,76,5.461]],["t/69",[0,0.114,77,6.962,78,6.962]],["t/71",[0,0.115,79,6.048,80,6.048,81,6.048,82,6.048,83,6.048,84,6.048,85,6.048,86,6.048]],["t/74",[0,0.115,62,4.898,70,5.326,87,5.977,88,5.326,89,5.977,90,5.977,91,5.977]],["t/76",[0,0.112,92,7.367]],["t/78",[0,0.111,93,7.476]],["t/80",[0,0.11,94,7.531]],["t/82",[0,0.112,95,7.314]],["t/84",[2,4.932,96,6.971]],["t/86",[0,0.114,97,6.914]],["t/88",[0,0.111]],["t/91",[2,4.932,96,6.971]],["t/94",[0,0.114,98,6.514,99,6.514,100,6.514]],["t/96",[0,0.113,101,7.261]],["t/98",[0,0.107,102,6.218,103,7.587]],["t/100",[0,0.112,88,6.425,104,7.21,105,7.21]],["t/102",[0,0.105,106,5.856,107,7.645]],["t/104",[0,0.115,108,5.432,109,1.647,110,5.432,111,5.432,112,5.432,113,5.432,114,5.432]],["t/106",[0,0.115]],["t/108",[0,0.115,34,2.108,109,1.272,115,4.195,116,4.195,117,4.195,118,4.195,119,4.195,120,2.168,121,1.663,122,2.375]],["t/110",[0,0.116,121,2.963,123,3.718,124,4.806,125,3.549]],["t/112",[0,0.116]],["t/114",[0,0.116]],["t/116",[0,0.115]],["t/118",[0,0.116]],["t/120",[0,0.113,34,3.649]],["t/122",[0,0.115,24,3.144]],["t/124",[0,0.115,24,2.691,34,2.617]],["t/126",[0,0.116,24,2.204,126,5.381]],["t/128",[0,0.116,4,4.233,24,2.041,127,3.237,128,3.52]],["t/130",[0,0.115,24,3.615]],["t/132",[0,0.115]],["t/134",[0,0.114,129,6.162,130,6.162]],["t/136",[0,0.116,34,1.208]],["t/139",[0,0.115]],["t/141",[0,0.116,109,1.82,121,1.677,131,4.23,132,4.23]],["t/143",[0,0.116]],["t/145",[0,0.115,109,2.111,121,3.391]],["t/148",[0,0.116,109,2.059]],["t/150",[0,0.115]],["t/153",[0,0.116,4,2.94,128,2.683,133,3.011,134,3.011,135,3.011,136,3.011,137,3.011,138,3.011]],["t/155",[0,0.116,139,3.35,140,3.759,141,3.759,142,2.471,143,2.88,144,3.35,145,2.88,146,3.35,147,3.081]],["t/157",[0,0.115]],["t/159",[0,0.115,4,5.09,34,1.94,109,1.17,139,3.44,142,2.536,148,3.86,149,8.073,150,3.86,151,3.86,152,3.86,153,3.86,154,3.86,155,3.86,156,3.86,157,3.86]],["t/161",[0,0.115,102,5.918,127,5.918,158,7.221,159,7.221,160,5.551,161,5.551,162,7.221,163,5.551,164,5.551,165,5.551]],["t/163",[0,0.115]],["t/165",[0,0.115,6,3.235,34,2.248,106,3.426,109,1.356,122,3.534,143,3.426,166,5.116]],["t/167",[0,0.115,106,4.865,122,3.595]],["t/169",[0,0.115,6,4.374]],["t/171",[0,0.116,109,1.189]],["t/173",[0,0.116]],["t/175",[0,0.115,6,4.322,167,5.977,168,5.977]],["t/177",[0,0.115]],["t/179",[0,0.116,109,0.675,169,2.517]],["t/181",[0,0.116,120,2.607,170,2.296]],["t/183",[0,0.111,24,3.807,170,5.066]],["t/185",[0,0.116,109,2.388,121,1.823,142,1.944,171,4.875,172,2.958]],["t/187",[0,0.114,171,6.144]],["t/189",[0,0.115]],["t/191",[0,0.115]],["t/193",[0,0.115]],["t/195",[0,0.116,24,0.994,109,0.584,121,0.763,123,1.024]],["t/197",[0,0.116,120,3.949]],["t/199",[0,0.116,109,2.628,120,2.724,121,3.47,123,3.487,173,2.912]],["t/201",[0,0.116,120,2.017]],["t/203",[0,0.116,109,2.176,120,1.67,174,3.232]],["t/206",[0,0.115,120,2.281,121,2.452,123,3.798,124,3.036,175,4.415,176,4.415,177,4.415]],["t/208",[0,0.113,121,2.704,178,6.821,179,6.821,180,6.821,181,6.079,182,6.821,183,6.079]],["t/210",[0,0.114,121,2.669,184,6.589]],["t/212",[0,0.115,109,2.758,185,5.488]],["t/214",[0,0.113,123,3.835,186,7.21]],["t/216",[0,0.115,187,5.732,188,6.432]],["t/218",[0,0.116]],["t/220",[0,0.115]],["t/222",[0,0.116,109,0.693,123,1.215,142,1.501,143,1.75,144,2.036,145,1.75,146,2.036,147,3.066,184,4.383,189,4.752,190,2.285]],["t/224",[0,0.116,4,4.368,24,0.571,109,1.963,120,2.435,121,2.89,123,2.995,142,0.727,147,0.906,173,1.374,191,1.106,192,1.106]],["t/226",[0,0.116,4,3.523,121,2.875,193,3.83,194,3.83]],["t/228",[0,0.116,4,4.52,109,1.886,121,2.465,123,2.92,195,2.834,196,2.834,197,2.834,198,2.834]],["t/230",[0,0.116,24,2.301]],["t/232",[0,0.115]],["t/234",[0,0.113]],["t/236",[0,0.116,34,1.536,109,1.43,121,1.87]],["t/238",[0,0.116,24,2.695]],["t/240",[0,0.115]],["t/242",[0,0.115,34,3.763,109,1.781]],["t/244",[0,0.116,24,1.301]],["t/246",[0,0.114,170,4.598]],["t/248",[0,0.115]],["t/250",[0,0.116,33,1.765,34,0.995,109,1.303,120,1.024,121,2.682,199,2.963]],["t/252",[0,0.116,109,0.855,121,1.117,123,1.499,145,2.159,200,2.512]],["t/254",[0,0.111]],["t/256",[0,0.114]],["t/259",[0,0.115,109,2.52,121,2.37,124,4.11,145,4.578,200,5.326]],["t/261",[0,0.115,109,2.484,121,2.298,123,3.611,173,3.986,185,3.59,199,5.165,201,4.028,202,4.028,203,4.028,204,5.796,205,4.028,206,5.796,207,4.028,208,4.028,209,4.028]],["t/264",[0,0.115,122,3.325]],["t/266",[0,0.116,34,1.437,109,1.143,121,2.921,122,0.94,123,3.324,124,1.141,129,1.479,130,1.479,173,3.08,184,3.993,210,1.271,211,1.479,212,1.66]],["t/268",[0,0.112,34,3.675,109,2.218]],["t/270",[0,0.105,109,2.318,213,7.645]],["t/273",[0,0.115,214,5.461,215,7.145]],["t/275",[0,0.115,122,3.286]],["t/277",[0,0.114,216,6.962]],["t/279",[0,0.116,24,1.074,34,1.044,109,1.746,120,1.788,187,1.852,210,1.592,217,2.079,218,2.079,219,3.084,220,2.079,221,2.079,222,2.079,223,2.079,224,2.079,225,2.079]],["t/281",[0,0.116,4,3.002,24,3.368,34,1.555,102,2.535,109,0.938,126,4.243,127,2.535]],["t/283",[0,0.116]],["t/285",[0,0.115,8,5.295]],["t/287",[0,0.115]],["t/289",[0,0.116]],["t/291",[0,0.112,142,4.841]],["t/293",[0,0.115,106,3.503,109,1.923,120,2.363,142,3.006,166,5.196,226,4.076,227,7.857,228,4.076,229,6.485,230,4.076,231,4.076,232,5.65,233,5.65,234,4.574,235,4.076,236,4.574]],["t/295",[0,0.115,171,6.633,210,5.013,211,4.269,237,4.269,238,8.864,239,4.269,240,4.79,241,4.79,242,4.79]],["t/297",[0,0.115,34,2.824,109,1.704,121,2.228,166,4.605,171,2.956,226,5.008,228,3.44,229,5.008,230,5.905,231,3.44,232,5.008,233,3.44,235,3.44,237,3.44,239,3.44,243,6.626,244,3.86,245,5.619,246,3.86,247,3.86,248,5.619,249,6.626,250,3.163,251,3.86,252,6.626,253,5.619,254,3.86]],["t/299",[0,0.115,122,4.524,143,3.213,210,5.319,255,4.195,256,4.195,257,4.195,258,4.195,259,6.944,260,6.944,261,4.195,262,4.195,263,4.195]],["t/302",[0,0.115]],["t/304",[0,0.116,122,2.327]],["t/306",[0,0.113]],["t/308",[0,0.115,109,1.741,264,5.115]],["t/310",[0,0.114,122,3.736,250,5.408]],["t/312",[0,0.115,109,1.856,122,3.465]],["t/314",[0,0.115]],["t/316",[0,0.115,265,6.158,266,6.158]],["t/318",[0,0.115,170,3.527]],["t/320",[0,0.113]],["t/322",[0,0.114,109,1.711,219,6.505,264,5.03,267,7.299,268,5.644,269,5.644,270,5.644,271,7.299,272,5.644,273,7.299,274,5.644,275,7.299,276,5.644]],["t/324",[0,0.114]],["t/326",[0,0.115]],["t/329",[0,0.115]],["t/332",[0,0.116,48,1.511,109,2.315,121,2.217,123,1.763,124,1.357,169,3.45,170,2.945,173,1.357,277,1.759,278,1.759,279,1.427,280,1.427,281,1.511,282,1.511]],["t/335",[0,0.115,109,2.696,120,3.351,121,3.021,123,3.803,124,2.557,169,4.917,173,4.459,181,3.313,183,3.313,184,2.689,250,3.047,277,3.313,278,3.313,279,2.689,280,2.689,281,2.848,282,2.848,283,3.718,284,3.718,285,3.718,286,3.718,287,3.718,288,3.718,289,3.718,290,3.718,291,3.718,292,3.718,293,3.718,294,3.718,295,3.718,296,3.718,297,3.718]],["t/337",[0,0.116,109,2.587,121,2.31,169,3.289,279,2.251,280,2.251,281,2.384,282,2.384,298,3.113,299,3.113]],["t/339",[0,0.116,109,2.558,121,1.929,169,2.646,184,2.783,279,1.71,280,1.71,281,1.811,282,1.811,300,2.365,301,2.365,302,2.365,303,2.365]],["t/341",[0,0.116,120,2.407]],["t/343",[0,0.115,109,1.571,120,2.678]],["t/345",[0,0.115,48,4.918,109,2.401,121,2.545,122,2.637,169,4.415,170,3.203,279,3.369,280,3.369,304,6.42]],["t/347",[0,0.116,48,4.601]]],"invertedIndex":[["",{"_index":0,"t":{"2":{"position":[[0,5],[6,2],[9,5],[15,9],[25,7],[33,1],[35,8],[44,8],[53,9],[63,7],[71,1],[73,7],[81,2],[84,5],[90,6],[97,9],[107,4],[112,5],[118,6],[125,8],[134,11],[146,1],[148,12],[161,3],[165,5],[171,3],[175,10],[186,10],[197,3],[201,1],[203,8],[231,8],[240,2],[243,8],[252,6]]},"7":{"position":[[0,5],[6,1],[8,2],[11,3],[15,8],[24,8],[33,6],[40,2],[43,7]]},"9":{"position":[[0,13],[14,10],[25,11],[37,8],[46,9],[56,9],[66,3],[70,7],[78,10],[89,7],[97,6],[104,1],[106,10],[117,7],[125,7],[133,3],[137,8],[146,5],[152,10],[163,7],[171,7],[179,3],[183,10],[194,10],[205,1],[207,5],[213,5],[219,11],[231,11],[243,11],[260,8]]},"11":{"position":[[0,5],[6,11],[18,3],[22,9],[32,9]]},"13":{"position":[[0,6],[7,11],[19,4],[24,1],[26,13],[40,1],[42,7],[50,4],[55,9],[65,1],[67,9],[77,12]]},"15":{"position":[[0,7],[8,9],[18,3],[22,5],[28,8],[37,13],[51,1],[56,9],[66,6],[73,3],[77,6],[84,1],[86,6],[93,3],[97,13],[111,10],[122,7],[130,8],[139,1],[141,9],[151,7],[159,5],[165,6],[172,7],[180,5],[186,5],[192,1],[194,8],[203,6],[210,19],[230,1],[232,12]]},"19":{"position":[[0,15],[16,6],[23,9],[33,6],[40,6],[47,11],[59,9],[69,5],[75,6],[82,1],[84,11],[96,7],[104,10],[115,7],[123,3],[127,7],[135,1],[137,6],[144,9],[154,7],[162,10],[173,6],[180,9],[190,10],[201,1],[203,6],[210,1],[212,13],[226,7],[234,11],[246,8],[255,8],[274,10],[285,6],[292,9],[302,1],[304,8]]},"24":{"position":[[0,7],[8,11],[20,8],[29,6],[36,9],[46,6],[53,1],[55,9],[69,11],[81,8],[90,8],[99,6],[106,9],[116,2],[119,7],[131,9],[141,11],[153,8],[162,7],[170,3],[174,6],[181,1],[183,12],[196,9],[206,10],[221,11],[233,9],[243,10],[254,10],[265,3],[269,7],[277,8],[286,1],[288,8],[297,6],[308,5],[314,8],[323,21],[345,5],[351,8],[360,7],[368,5],[374,6],[381,6],[392,9],[402,11],[414,8],[423,6],[430,8],[439,6],[450,11],[462,9],[472,9],[482,13],[496,8],[505,6],[516,1],[518,11],[530,8],[539,6],[546,8],[555,5],[561,10],[572,12],[585,5],[591,10],[602,7]]},"26":{"position":[[0,13],[14,10],[25,3],[29,8],[38,10],[49,11],[61,6],[72,10],[83,6],[90,13],[104,9],[114,10],[125,3],[129,8],[138,7],[146,6],[158,7],[181,10],[192,6],[199,7],[207,7],[215,6]]},"28":{"position":[[0,11],[12,3],[16,8],[25,6],[32,14],[47,4]]},"30":{"position":[[0,10],[15,3],[19,6],[26,1],[28,9]]},"32":{"position":[[0,9],[10,8],[19,10],[41,7],[58,10],[69,9],[79,6],[91,7],[109,9],[119,9],[129,10],[140,2],[143,7],[151,6]]},"37":{"position":[[18,10],[29,8],[38,8],[57,7]]},"39":{"position":[[0,9],[10,5],[16,6],[23,6],[30,10],[47,7]]},"41":{"position":[[0,15],[16,12],[29,7],[37,9],[47,7],[61,7],[79,14],[94,8],[103,15],[119,8],[134,7],[157,1],[159,11],[171,9],[181,12],[194,3],[198,7],[206,7]]},"44":{"position":[[0,10],[11,6],[18,11],[30,10],[41,3],[45,9],[61,7],[83,10],[94,6],[101,7],[109,10],[120,7],[128,11],[140,7],[153,10],[164,6],[171,3],[175,11],[187,6],[194,11],[206,3],[210,9],[220,10],[231,7]]},"46":{"position":[[0,10],[11,6],[18,8],[27,9],[37,8],[46,13],[60,4],[65,6],[72,12],[85,8],[94,2],[97,7],[111,7]]},"51":{"position":[[0,8],[9,6],[16,2],[19,10],[30,9],[40,3],[44,7],[67,13],[81,7],[103,8],[112,11],[124,9],[134,3],[138,6],[150,8],[159,11],[171,8],[180,9],[190,8],[199,12],[217,8],[226,7],[234,8],[243,5],[249,22]]},"53":{"position":[[0,8],[9,1],[11,7],[19,1],[21,9],[31,9],[41,8],[50,2],[53,11],[65,9],[81,7]]},"55":{"position":[[0,6],[7,1],[9,10],[20,6],[27,2],[30,11],[47,12],[60,5],[71,15],[87,8],[96,11],[108,7],[116,9],[128,5],[134,10],[145,6],[152,1],[154,12],[167,11],[179,9]]},"57":{"position":[[11,11],[23,16],[40,6],[47,3],[59,1],[72,5],[78,4],[83,10],[94,12],[107,1],[109,7]]},"60":{"position":[[0,13],[14,10],[25,5],[31,6],[44,7],[62,10],[73,10],[84,6],[97,7]]},"65":{"position":[[0,8],[9,11],[21,8],[30,14],[45,8],[54,1],[56,5],[62,8],[71,1],[73,6],[80,14],[95,1],[97,15],[118,7],[136,11],[148,8],[157,7],[165,8],[174,5],[180,8],[189,1],[191,10],[202,9],[212,5],[218,2],[221,6],[233,11],[245,8],[254,7],[262,8],[271,5],[277,8],[286,7],[294,7],[302,10],[313,3],[317,12]]},"67":{"position":[[0,5],[6,11],[18,40],[64,8],[73,9],[83,8],[92,8],[101,2],[104,9],[119,7],[135,12],[148,8],[157,9],[167,8],[176,15],[192,5],[203,10],[214,11],[226,2],[229,3],[233,8],[242,5],[248,14],[263,5],[274,8],[283,9],[293,10],[304,1],[306,20],[327,1],[329,22],[357,11],[369,3],[373,8],[382,10],[393,7],[401,9],[411,1],[413,10],[429,7],[437,11],[449,2],[452,13],[466,10],[482,9],[492,9],[502,10],[513,2],[516,11]]},"69":{"position":[[0,7],[8,7],[16,7],[24,1],[26,12],[39,9],[49,9],[64,9],[74,12],[87,9],[97,9],[107,11],[119,7],[127,7],[135,6],[142,7]]},"71":{"position":[[0,9],[10,12],[23,12],[41,7],[70,7],[78,1],[80,3],[84,5],[90,9],[100,8],[109,2],[112,2],[115,4],[125,8],[134,5],[140,9],[150,8],[159,9],[174,9],[184,9],[194,3],[198,9],[208,6],[220,9],[230,6],[242,5],[248,9],[258,9],[268,6],[280,8],[289,8],[298,10]]},"74":{"position":[[0,6],[7,3],[11,6],[18,10],[29,7],[42,7],[56,8],[65,9],[75,6],[82,11],[94,3],[98,2],[101,12],[114,13],[133,7],[149,8],[158,11],[170,6],[177,6],[184,9],[194,7],[202,9],[212,2],[215,5],[226,7],[244,6],[251,7],[259,6],[266,2],[269,5],[275,8],[284,3],[288,11],[300,10],[311,7]]},"76":{"position":[[0,2],[3,8],[12,11],[24,7],[32,10],[43,3],[47,8],[56,5],[62,8]]},"78":{"position":[[0,6],[7,9],[17,10],[28,14],[43,5],[49,3],[53,10]]},"80":{"position":[[0,8],[9,5],[15,6],[22,3],[26,10],[37,6]]},"82":{"position":[[0,3],[4,7],[12,9],[22,6],[29,1],[31,6],[38,5],[44,9],[54,13],[68,6]]},"86":{"position":[[0,11],[12,9],[22,8],[31,7],[39,1],[41,6],[48,11],[60,9],[70,5],[76,3],[80,7],[88,12],[101,9],[111,9],[124,9],[134,8],[143,1],[145,12]]},"88":{"position":[[0,10],[11,6],[18,3],[22,7],[30,5],[36,8],[45,6]]},"94":{"position":[[0,8],[9,5],[15,9],[25,10],[36,6],[43,8],[57,8],[66,5],[72,3],[76,9],[86,10],[97,8],[106,16],[123,6],[135,6],[142,5],[148,9],[158,10],[169,8],[178,2],[181,8],[190,5],[196,1],[198,9],[208,10]]},"96":{"position":[[0,5],[6,11],[18,10],[29,2],[32,7],[40,1],[42,6],[49,6],[56,11],[68,5],[74,8]]},"98":{"position":[[0,8],[9,6],[16,3],[20,11]]},"100":{"position":[[0,8],[9,6],[16,10],[27,6],[34,1],[36,9],[46,7],[54,6],[61,2],[81,7]]},"102":{"position":[[0,5],[6,1],[8,7]]},"104":{"position":[[0,4],[5,1],[7,19],[27,8],[36,7],[44,2],[47,5],[53,6],[60,2],[63,12],[76,1],[78,6],[85,5],[91,2],[94,12],[112,13],[126,6],[133,16],[150,6],[157,6],[164,4],[171,8],[180,1],[182,4],[187,1],[189,11],[201,8],[215,8],[259,1],[261,10],[272,13],[291,5],[297,1],[299,13],[313,2],[316,6],[323,5],[329,2],[332,8],[341,10],[352,3],[356,2],[359,11],[371,1],[373,11],[390,2],[393,9],[403,8],[412,7],[420,8],[429,2],[432,6]]},"106":{"position":[[0,3],[4,11],[16,3],[20,7],[28,3],[32,11],[44,9],[54,7],[62,3],[66,10],[77,4],[82,19],[102,11],[114,3],[118,5],[124,4],[129,9],[139,11],[151,8],[160,13],[174,3],[178,2],[181,1],[183,5],[189,5],[195,6]]},"108":{"position":[[0,12],[15,3],[19,8],[28,7],[36,2],[39,12],[52,12],[65,2],[68,5],[74,8],[83,3],[87,3],[91,13],[105,1],[107,3],[111,6],[118,4],[123,10],[134,1],[136,11],[148,17],[166,16],[183,9],[193,3],[197,8],[206,8],[215,1],[217,7],[225,12],[247,11],[259,8],[268,12],[281,1],[283,7],[291,8],[300,11],[312,9],[322,10],[333,1],[335,12],[348,12],[361,11],[373,10],[384,2],[387,6],[394,11],[406,9],[416,2],[419,1],[421,8],[430,12],[443,5],[449,8],[458,1],[460,7],[468,5],[474,9],[484,13],[498,1],[500,8],[509,9],[519,2],[522,8],[531,9],[541,12],[554,1],[556,9],[566,10],[577,14],[592,6],[599,11],[611,30],[642,53],[696,19],[842,1],[844,10],[855,4],[860,8],[869,11],[881,5],[887,9],[897,9],[907,11],[919,8],[928,3],[932,11],[944,8],[953,11],[965,6],[982,2],[1004,8],[1013,8],[1045,7],[1053,5],[1062,2],[1065,3],[1069,2],[1072,4],[1077,1],[1079,3],[1083,3],[1087,5],[1093,9],[1103,1]]},"110":{"position":[[0,8],[9,7],[17,11],[29,8],[38,12],[51,1],[53,8],[62,4],[67,9],[77,9],[87,8],[98,1],[102,6],[109,7],[117,3],[124,5],[130,15],[146,3],[150,10],[161,10],[174,4],[179,8],[188,3],[194,1],[198,5],[207,3],[211,6],[218,11],[230,3],[234,12],[247,1],[249,9],[259,3],[284,1],[299,2],[302,6],[309,9],[319,9],[329,6],[336,1],[338,3],[342,13],[356,11],[370,4],[377,1],[381,2],[386,5],[392,17],[413,1],[417,2],[434,2],[437,7],[445,2],[448,6],[455,8],[464,1],[466,14],[481,7],[489,1],[491,10],[502,11],[514,4],[519,3],[523,12],[536,7],[544,2],[547,3],[551,6],[558,8],[567,9],[577,2],[580,8],[589,7],[597,8],[606,12],[619,8],[628,5],[634,3],[638,2],[641,4],[646,6],[653,7],[661,3],[665,8],[674,1],[676,11],[688,5],[694,10],[705,5],[711,10],[722,7],[730,7],[738,10],[749,3],[753,2],[756,5],[762,12],[775,2],[778,3],[782,8],[791,7],[799,6],[806,3],[810,1],[812,8],[821,4],[826,10],[837,9],[847,7],[855,8],[864,9],[874,7],[882,1],[884,6],[891,1],[893,14],[908,4],[913,6],[920,11],[932,10],[943,6],[950,5],[956,7],[964,3],[968,9],[978,6],[985,4],[990,4],[995,3],[999,7],[1007,9],[1017,3],[1021,3],[1025,3],[1029,9],[1039,1],[1041,6],[1048,11],[1060,4],[1065,9],[1075,7],[1083,1],[1085,11],[1097,3]]},"112":{"position":[[0,8],[9,8],[18,8],[27,7],[35,7],[43,2],[46,6],[53,10],[64,8],[73,6],[80,14],[95,4],[100,3],[104,7],[112,6],[119,9],[129,1],[131,7],[139,7],[147,2],[150,6],[157,9],[167,5],[173,9],[183,4],[188,5],[194,6],[201,8],[210,2],[213,2],[216,6],[223,2],[226,6],[233,12],[246,10],[257,5],[263,8],[272,12],[285,10],[296,3],[300,4],[305,8],[314,3],[318,8],[327,3],[331,10],[342,7],[350,12],[363,11],[375,7],[383,1],[385,14],[400,3],[404,9],[414,11],[426,2],[429,9],[439,9],[449,8],[458,3],[462,9],[472,2],[475,5],[481,6],[488,8],[497,4],[502,9],[512,10],[523,6],[530,3],[534,3],[538,10],[549,3],[553,6],[560,7],[568,7],[576,3],[580,8],[589,11],[601,1],[603,10],[614,6],[621,13],[635,3],[639,13],[653,8],[662,3],[666,2],[669,5],[675,9]]},"114":{"position":[[0,7],[8,5],[14,11],[26,7],[34,3],[38,3],[42,5],[48,9],[58,4],[63,4],[68,1],[70,14],[85,5],[91,7],[99,3],[103,8],[112,6],[121,10],[132,9],[142,11],[154,1],[156,3],[160,6],[167,3],[171,8],[180,12],[193,6],[200,5],[206,7],[214,3],[218,10],[229,10],[240,3],[244,10],[255,1],[257,5],[263,1],[265,4],[270,5],[276,6],[283,11],[295,10],[306,1],[308,8],[317,3],[321,6],[328,1],[330,4],[335,12],[348,12],[361,5],[367,28],[396,7],[404,10],[415,18],[434,6],[441,16],[458,11],[470,6],[477,1],[479,13],[493,3],[497,3],[501,11],[513,2],[516,9],[526,9],[536,7],[544,1],[546,10],[557,7],[565,2],[568,9],[578,9],[588,7],[596,8],[605,1],[607,7],[615,10],[626,48],[675,20],[696,2],[699,1],[701,4],[706,3],[710,7],[718,48],[767,18],[786,2],[789,1],[791,4],[796,4],[801,6],[808,48],[857,32],[890,2],[893,1],[895,4],[900,4],[905,6],[912,13],[926,10],[937,59],[997,57],[1055,34],[1090,2],[1093,4],[1098,6],[1105,2],[1108,10],[1119,48],[1168,59]]},"116":{"position":[[0,14],[17,9],[27,7],[35,7],[43,2],[46,8],[55,16],[74,9],[84,10],[95,7],[103,2],[106,8],[115,28],[146,9],[156,7],[164,1],[166,7],[174,7],[182,1],[184,9],[194,13],[208,20],[231,9],[241,7],[249,1],[251,7],[259,7],[267,1],[269,9],[279,5],[285,22],[310,9],[320,7],[328,1],[330,7],[338,7],[346,1],[348,9],[358,7],[366,30],[399,9],[409,10],[420,1],[422,7],[430,7],[438,1],[440,9],[450,13],[464,22],[489,9],[499,10],[510,1],[512,7],[520,7],[528,1],[530,9],[540,5],[546,24],[573,9],[583,10],[594,1],[596,7],[604,7],[612,1],[614,9],[624,7]]},"118":{"position":[[0,4],[5,8],[14,11],[26,2],[29,8],[38,1],[40,10],[51,9],[61,13],[75,1],[77,33],[111,19],[131,1],[133,16],[150,41],[192,12],[205,2],[208,10],[219,3],[223,10],[234,15],[250,9],[260,1],[262,10],[273,48],[322,6],[329,3],[333,10],[344,1],[346,6],[353,40],[394,2],[397,10],[408,12],[421,6],[428,28],[457,2],[460,8],[469,10],[480,48],[529,6],[536,2],[539,3],[543,8],[552,37],[590,2],[593,8],[602,10],[613,6],[620,8],[629,14],[644,1],[646,36],[683,21],[705,32],[738,7],[746,6],[753,8],[762,12],[775,37],[813,28],[842,33],[876,8],[885,10],[896,2],[899,10],[910,12],[923,27],[951,8],[960,10],[971,20],[992,7],[1000,5],[1006,7],[1014,8],[1023,6],[1030,9],[1040,15],[1056,1],[1058,1],[1060,7],[1068,16],[1085,9],[1095,2],[1098,11],[1110,7],[1118,5],[1124,1],[1126,6],[1133,7],[1141,27],[1169,7],[1177,3],[1181,6],[1188,1],[1190,4],[1195,12],[1208,3],[1212,8],[1221,3],[1225,2],[1228,6],[1235,5],[1241,3],[1245,2],[1248,3],[1252,11],[1264,9],[1274,15],[1290,1],[1292,16],[1309,8],[1318,8],[1327,9],[1337,6],[1344,6],[1351,1],[1353,4],[1358,1],[1360,12],[1373,11],[1385,3],[1389,10],[1400,5],[1406,6],[1413,7],[1421,3],[1425,6],[1432,2],[1435,10],[1446,1],[1448,3],[1452,12],[1465,10],[1476,8],[1485,5],[1491,8],[1500,2],[1503,10]]},"120":{"position":[[8,13],[22,12],[35,7],[43,5],[49,12],[62,3],[66,6],[73,13],[87,1],[89,9],[99,7]]},"122":{"position":[[0,9],[14,8],[23,6],[30,10],[41,1],[43,11],[55,2],[58,1],[60,7],[68,10],[79,10],[90,7],[98,5],[104,7],[112,6],[119,3],[123,2],[126,10],[137,1],[139,6],[146,12],[159,3],[163,5],[169,12],[182,12],[195,16],[212,10],[223,5],[229,19],[249,9],[259,21],[281,7],[289,19],[309,14],[324,9],[334,8],[343,1],[345,9]]},"124":{"position":[[0,7],[8,5],[14,7],[22,12],[35,10],[54,7],[62,1],[64,6],[71,6],[78,4],[83,6],[90,8],[99,6],[106,5],[112,1],[118,12],[131,1],[133,7],[141,2],[144,13],[158,6],[165,1],[167,6],[174,7],[182,7],[190,14],[207,10],[218,6],[225,6],[232,1],[234,9],[244,7],[252,18],[273,10],[284,6],[291,6],[298,1],[300,13],[314,29],[346,10],[357,6],[364,6],[371,1],[373,13],[387,3],[391,8],[400,8],[409,14],[424,4],[429,16],[448,10],[459,6],[466,6],[473,1],[475,10],[486,16],[505,10],[516,11],[528,10],[539,16],[558,10],[569,11],[581,9],[591,7],[599,6]]},"126":{"position":[[0,9],[14,5],[20,3],[24,5],[30,9],[40,2],[43,7],[51,4],[56,2],[59,9],[69,6],[76,3],[80,6],[87,14],[102,5],[108,3],[112,8],[121,3],[125,6],[132,10],[143,12],[156,10],[167,9],[177,6],[184,11],[196,2],[199,9],[209,2],[212,7],[220,3],[224,8],[233,1],[235,6],[242,10],[253,13],[267,1],[269,8],[278,6],[285,8],[294,1],[296,6],[303,1],[305,8],[314,6],[321,6],[328,13],[342,9],[352,11],[364,3],[368,8],[377,7],[385,34],[420,1],[422,7],[430,8],[439,2],[442,6],[449,7],[457,6],[464,14],[479,4],[484,1],[486,12],[499,12],[512,8],[521,8],[532,11],[544,8],[553,1],[555,11],[567,11],[579,29],[609,30],[640,28],[669,8],[678,8],[687,2],[690,7],[698,2],[701,6],[708,7],[716,3],[720,11],[732,6],[739,8],[748,2],[751,2],[754,6],[761,6],[768,1],[770,10],[781,8],[790,12],[803,3],[807,9],[817,14],[832,7],[840,9],[850,9],[860,9],[909,1],[911,7],[919,8],[928,2],[931,6],[938,7],[951,7]]},"128":{"position":[[0,9],[14,3],[18,12],[31,7],[39,14],[54,9],[64,11],[76,2],[79,11],[91,11],[103,9],[113,2],[116,12],[129,7],[142,7],[150,1],[152,11],[164,14],[179,1],[181,4],[186,4],[191,6],[198,10],[209,7],[217,1],[219,4],[224,6],[231,7],[239,16],[256,9],[266,3],[270,6],[277,9],[287,1],[289,8],[298,9],[308,8],[317,10],[328,2],[331,8],[340,5],[346,4],[351,6],[358,9],[368,10],[379,3],[383,8],[392,6],[399,9],[409,18],[428,9],[438,6],[445,7],[453,12],[466,7],[474,6],[481,9],[491,3],[495,12],[508,11],[520,19],[540,3],[544,1],[546,6],[553,7],[561,10],[572,5],[578,3],[582,11],[594,6],[601,9],[611,9],[621,10],[632,8],[641,2],[644,8],[653,2],[656,9],[666,7],[674,12],[687,3],[691,3],[695,4],[700,8],[709,8],[718,6],[725,5],[765,9],[775,9],[785,1],[787,11],[799,8],[808,6],[820,8],[829,4],[834,6],[841,9],[851,8],[860,8],[869,1],[871,9],[881,5],[887,7],[895,2],[898,2],[901,1],[903,9],[913,1],[915,3],[919,7],[927,7],[935,14],[950,3],[954,6],[961,3],[965,13],[979,3],[983,8],[1022,9],[1032,14],[1047,8],[1056,7],[1064,1]]},"130":{"position":[[0,8],[9,8],[18,10],[29,6],[36,8],[45,3],[49,8],[58,10],[69,12],[82,8],[91,11],[103,7],[111,12],[124,9],[134,2],[137,7],[145,12],[158,6],[165,12],[178,1],[180,15],[196,8],[210,4],[215,5],[221,6],[228,8],[237,5],[243,1],[245,14],[260,5],[266,2],[269,3],[273,9],[283,5],[289,9],[299,1],[301,7],[309,11],[321,3],[325,8],[338,12],[351,1],[353,9],[363,7],[371,10],[382,16],[399,5],[405,6],[412,1],[414,1],[416,6],[423,11],[435,11],[447,5],[453,3],[457,7],[465,8],[474,10],[485,8],[494,7],[502,8],[511,6]]},"132":{"position":[[0,9],[10,6],[17,1],[19,4],[24,42],[67,43],[111,9],[121,9],[131,6],[138,2],[141,4],[146,1],[148,6],[155,1],[157,9],[167,8],[176,7],[184,5],[190,8],[199,8],[208,6],[215,6],[222,5],[228,12],[241,6],[248,10],[259,10],[270,6],[277,7],[285,3],[289,9],[299,6],[306,1],[308,4],[313,2],[316,6],[323,15],[339,7],[347,16],[364,16],[381,11],[393,21]]},"134":{"position":[[0,3],[4,13],[18,10],[29,1],[31,10],[42,6],[49,2],[52,6],[59,6],[66,10],[77,7],[85,6],[92,6],[99,5],[105,6],[112,8],[121,8]]},"136":{"position":[[8,3],[12,14],[27,5],[33,12],[46,10],[57,8],[66,13],[80,7],[88,5],[94,5],[100,5],[106,4],[111,8],[120,7],[128,10],[139,7],[147,1],[149,12],[162,7],[170,7],[178,9],[188,6],[195,2],[198,9],[208,9],[218,10],[229,9],[239,8],[248,1],[250,6],[257,9],[267,8],[276,8],[285,7],[293,8],[302,9],[312,7],[320,4],[325,9],[335,9],[345,7],[353,10],[364,8],[373,1],[375,5],[381,2],[384,3],[388,5],[394,7],[402,1],[404,7],[412,9],[422,4],[427,7],[435,17],[455,3],[459,7],[467,10],[478,5],[484,8],[493,6],[500,6],[507,1],[509,6],[516,10],[527,20],[550,3],[554,7],[562,10],[573,5],[579,8],[588,6],[595,6],[602,7],[610,9],[620,5],[626,2],[629,10],[640,4],[645,8],[654,6],[661,2],[664,12],[677,2],[680,1],[682,5],[688,2],[691,9],[701,5],[707,8],[716,3],[720,5],[726,7],[734,17],[754,3],[758,7],[766,10],[777,5],[783,8],[792,7],[800,6],[807,17],[827,3],[831,7],[839,10],[850,5],[856,7],[864,6],[871,7],[879,10],[890,3],[894,13],[908,10],[919,23],[943,7],[951,17],[969,1],[971,17],[989,10],[1000,1],[1002,11],[1014,6],[1021,7],[1029,11],[1041,3],[1045,11],[1057,20],[1080,3],[1084,7],[1092,10],[1103,5],[1109,7],[1117,7],[1125,6],[1132,15],[1150,3],[1154,7],[1162,10],[1173,5],[1179,7],[1187,4],[1192,6],[1199,6],[1206,3],[1210,10],[1221,6],[1228,4],[1233,11],[1245,4],[1250,5],[1256,4],[1261,10],[1272,3],[1276,9],[1286,4],[1291,7],[1299,10],[1310,1],[1312,8],[1321,6],[1328,10],[1339,11],[1351,10],[1362,5],[1368,3],[1372,11],[1384,11],[1396,5],[1402,10],[1413,6],[1420,6],[1427,12],[1440,4],[1445,8],[1454,9],[1464,1],[1466,11],[1478,7],[1486,3],[1490,2],[1493,3],[1497,3],[1501,5],[1507,10],[1518,6],[1527,3],[1531,7],[1539,1],[1541,3],[1545,8],[1554,4],[1559,1],[1561,3],[1565,4],[1570,6],[1577,9],[1587,6],[1594,1],[1596,7],[1604,10],[1615,1],[1617,2],[1620,8],[1629,1],[1631,2],[1634,7],[1642,2],[1645,7],[1653,5],[1659,7],[1667,6],[1676,1],[1678,5],[1684,8],[1693,11],[1705,1],[1707,5],[1713,8],[1722,9],[1732,6],[1739,3],[1743,8],[1752,4],[1757,8],[1766,1],[1768,7],[1776,18],[1795,1],[1797,7],[1805,17],[1823,3],[1827,13],[1841,11],[1853,5],[1859,14],[1874,11],[1886,7],[1894,3],[1898,11],[1910,7],[1918,6],[1925,5],[1931,5],[1937,5],[1943,1],[1945,6],[1952,3],[1956,7],[1964,7],[1972,9],[1982,21],[2004,7],[2012,7],[2020,36],[2057,2],[2060,15],[2076,11],[2088,12],[2101,5],[2107,8],[2116,6],[2123,6],[2130,30],[2161,2],[2164,15],[2180,11],[2192,12],[2205,5],[2211,7],[2219,6],[2226,6],[2233,40],[2274,30],[2305,30],[2336,42],[2379,2],[2382,15],[2398,11],[2410,3],[2414,11],[2426,5],[2432,46],[2479,40],[2520,2],[2523,15],[2539,11],[2551,11],[2563,5],[2569,8],[2578,6],[2585,6],[2592,30],[2623,14]]},"139":{"position":[[0,5],[6,2],[9,9],[19,6],[26,6],[33,9],[43,6],[50,8],[59,8],[68,11],[80,2],[83,10],[94,7],[102,13],[116,6],[123,1],[125,12],[138,6],[145,9],[155,7],[163,10],[174,10],[185,5],[191,7],[199,11],[211,7],[219,7],[227,8],[236,7],[244,1],[246,5],[252,9],[262,12],[275,2],[278,16],[295,5],[301,8],[310,1],[312,9],[322,8],[331,9],[341,5],[347,12],[360,5],[366,6],[373,9],[383,8],[392,5],[398,7],[406,6],[413,1],[415,6],[422,5],[428,1],[430,8],[439,20],[460,20],[481,3],[485,9],[495,10],[506,6],[513,10],[524,9],[534,10],[545,5],[551,3],[555,8],[564,12],[577,8],[586,5],[592,1],[594,3]]},"141":{"position":[[0,12],[13,6],[20,5],[26,9],[36,9],[46,10],[57,8],[66,5],[72,21],[96,5],[102,1],[104,6],[111,6],[118,6],[125,8],[134,1],[136,6],[143,5],[149,1],[151,1],[153,12],[166,7],[174,17],[192,17],[210,8],[219,9],[229,6],[236,31],[270,5],[276,1],[278,6],[285,6],[292,7],[300,8],[309,1],[311,6],[318,5],[324,6],[331,1],[333,1],[335,12],[348,7],[356,20],[377,20],[398,17],[416,17],[434,8],[443,9],[453,6],[460,22],[485,5],[491,1],[493,6],[500,9],[510,7],[518,8],[527,1],[529,6],[536,5],[542,6],[549,1],[551,1],[553,12],[566,7],[574,17],[592,15],[608,20],[629,20],[650,17],[668,17],[686,2],[689,6],[696,6],[703,10],[714,4],[719,11],[731,14],[746,11],[758,7],[766,16],[783,9],[793,10],[804,3],[808,6],[815,7],[823,7],[831,1],[833,8],[842,11],[854,10],[865,7],[873,5],[879,6],[886,6],[893,10],[904,7],[912,7],[953,2],[956,5],[962,6],[969,8],[978,10],[989,22],[1090,2],[1093,5],[1099,6],[1106,10]]},"143":{"position":[[0,9],[10,3],[14,8],[23,6],[30,1],[32,13],[46,11],[58,1],[60,7],[68,10],[79,2],[82,10],[93,5],[99,8],[108,6],[115,7],[123,7],[131,5],[137,13],[151,1],[153,12],[166,3],[170,8],[179,9],[189,1],[191,12],[204,3],[208,8],[217,7],[225,4],[230,3],[234,9],[244,6],[251,4],[256,3],[260,8],[269,7],[277,3],[281,8],[290,6],[297,9],[307,9],[317,1],[319,11],[331,16],[348,9],[358,7],[366,8],[375,10],[386,17],[404,9],[414,11],[426,6],[433,7],[441,8],[450,1],[452,10],[463,2],[466,1],[468,8],[477,11],[489,8],[498,2],[501,6],[508,7],[516,9],[526,1],[528,5],[534,6],[541,1],[543,8],[552,13],[566,9],[576,21],[598,9],[608,9],[618,1],[620,13],[634,6],[641,9],[651,7],[659,9],[669,3],[673,6],[680,1],[682,7],[690,1],[692,2],[695,4],[700,6],[707,10],[718,16],[735,10],[746,14],[761,9],[771,16],[788,6],[795,10],[806,7],[814,9],[824,3],[828,5],[834,9],[844,12],[857,7],[865,1],[867,9],[877,9],[887,25],[913,7],[921,2],[924,4],[929,14],[944,1],[946,10],[957,6],[964,7],[972,5],[978,7],[986,6],[993,2],[996,7],[1004,5],[1010,11],[1022,6],[1029,1],[1031,8],[1040,2],[1043,8],[1052,7],[1060,14],[1075,7],[1083,2],[1086,1],[1088,5],[1094,8],[1103,6],[1110,2],[1113,12],[1126,10],[1137,11],[1149,1],[1151,41],[1193,6],[1200,1],[1202,24],[1227,2],[1230,3],[1234,5],[1240,2],[1243,9],[1253,5],[1259,6],[1266,7],[1274,5],[1280,1],[1282,16],[1299,35],[1335,84],[1420,12],[1433,2],[1436,2],[1439,5],[1445,6],[1452,8],[1461,10],[1472,6],[1479,7],[1487,40],[1528,25],[1554,50],[1605,2],[1608,1],[1610,5],[1616,6],[1623,6],[1632,11],[1644,40],[1685,23],[1709,2],[1712,5],[1718,7],[1726,4],[1731,6],[1738,9],[1748,3],[1752,2],[1755,5],[1761,17],[1779,1],[1781,29],[1811,7],[1819,35],[1855,32],[1888,83],[1972,14]]},"145":{"position":[[0,8],[9,9],[19,27],[47,52],[130,2],[133,9],[143,3],[147,1],[149,9],[159,4],[164,8],[173,1],[175,10],[186,8],[195,7],[203,5],[213,27],[241,26],[298,2],[301,4],[306,6],[313,3],[317,1],[319,8],[328,4],[333,27],[361,53],[415,33],[449,2],[452,9],[462,3],[466,6],[473,7],[481,9],[491,3],[495,11],[507,6],[514,27],[542,28],[601,2],[604,9],[614,3],[618,1],[620,9],[630,3],[634,9],[644,1],[646,10],[657,8],[666,7],[674,5],[684,8],[693,10],[704,6],[711,3],[715,11],[727,9],[737,5],[743,6],[750,7],[758,9],[768,1],[770,10],[781,10],[792,10],[803,7],[813,6],[820,10],[831,1],[833,11],[845,2],[848,8],[857,9],[867,7],[875,10],[886,23],[910,40],[951,40],[1022,40],[1063,40],[1135,12],[1148,11],[1160,6],[1167,1],[1169,4],[1174,2],[1177,9],[1187,11],[1199,60],[1260,16],[1277,38],[1320,39],[1360,2],[1363,9],[1373,7],[1381,2],[1384,4],[1389,12],[1402,1],[1404,37],[1442,16],[1459,38],[1502,41]]},"148":{"position":[[0,9],[10,3],[14,1],[16,11],[28,10],[39,9],[49,2],[52,7],[60,10],[71,1],[73,11],[85,9],[95,1],[97,10],[108,10],[119,3],[123,8],[132,1],[134,5],[140,3],[144,2],[147,2],[150,6],[157,5],[163,12],[176,9],[186,11],[198,8],[207,23],[231,27],[259,36],[296,36],[364,1],[366,4],[371,7],[382,7],[390,8],[399,9],[409,3],[413,4],[418,11],[430,1],[432,5],[438,8],[447,2],[450,1],[452,5],[458,1],[460,2],[463,7],[471,3],[475,5],[481,10],[492,4],[497,1],[499,3],[503,2],[506,9],[516,9],[526,3],[530,6],[537,6],[544,3],[548,9],[558,7],[566,9],[576,5],[582,8],[591,7],[599,3],[603,6],[610,4],[615,8],[624,5],[630,12],[643,5],[649,9],[659,7],[667,10],[678,7],[686,10],[697,23],[721,27],[749,47],[797,36],[865,5],[871,2],[874,7],[882,3],[886,10],[897,10],[908,1],[910,11],[922,14],[937,1],[939,36],[976,13],[990,1],[992,35],[1028,14],[1043,1],[1045,13],[1059,5],[1065,5],[1071,1],[1073,9],[1083,10],[1094,8],[1103,8],[1112,5],[1118,5],[1124,6],[1131,9],[1141,5],[1147,9],[1157,14],[1172,1],[1174,47],[1222,13],[1236,1],[1238,46]]},"150":{"position":[[0,3],[4,6],[11,10],[22,12],[35,6],[42,3],[46,12],[59,20],[80,11],[92,8],[101,1],[103,13],[117,7],[125,10],[136,6],[143,6],[150,1],[152,8],[161,9],[171,5],[177,9],[187,9],[197,3],[201,2],[204,11],[216,3],[220,2],[223,14],[238,5],[244,4],[249,11],[261,9],[271,8],[280,13],[294,2],[297,14],[312,10]]},"153":{"position":[[0,11],[14,3],[18,17],[36,3],[40,8],[49,11],[61,6],[68,4],[73,1],[75,8],[84,3],[88,14],[103,3],[107,12],[120,2],[123,6],[130,8],[139,13],[153,8],[162,11],[174,4],[181,9],[191,10],[202,3],[206,10],[217,8],[226,9],[236,9],[246,7],[254,9],[264,9],[274,7],[282,2],[285,5],[291,7],[299,1],[301,6],[308,11],[325,6],[332,1],[334,9],[344,7],[352,2],[355,14],[370,1],[372,3],[376,9],[411,3],[415,3],[419,2],[422,6],[429,2],[432,6],[439,14],[454,7],[462,3],[466,13],[480,9],[490,7],[498,2],[501,5],[507,6],[514,8],[523,12],[536,4],[541,1],[543,6],[550,12],[563,11],[575,12],[588,4],[608,3],[612,3],[616,9],[626,1],[628,11],[640,1],[642,9],[652,9],[662,7],[670,8],[679,9],[689,3],[693,7],[701,2],[704,5],[710,4],[715,5],[721,4],[726,12],[739,15],[755,3],[759,13],[773,8],[782,6],[789,9],[799,9],[809,1],[811,11],[823,5],[829,2],[832,6],[839,8],[848,10],[859,10],[870,3],[874,6],[881,9],[899,10],[910,4],[915,9],[925,1],[927,7],[935,8],[944,6],[951,4],[956,3],[960,2],[963,5],[969,3],[973,9],[983,3],[987,9],[997,5],[1003,9],[1013,3],[1017,12],[1035,8],[1044,8],[1053,4],[1058,7],[1066,14],[1081,9],[1091,9],[1101,9],[1111,7],[1137,8],[1146,11],[1158,6],[1165,7],[1175,9],[1185,1],[1187,9],[1197,6],[1204,12],[1217,1],[1219,8],[1228,10],[1239,1],[1241,11],[1253,6],[1260,4],[1265,3],[1269,5],[1275,10],[1286,9],[1296,7],[1304,7],[1312,11],[1324,6],[1331,7],[1339,2],[1342,10],[1353,9],[1363,4],[1368,10],[1379,3],[1383,1],[1385,8],[1394,4],[1399,10],[1410,1],[1412,11],[1424,6],[1431,1],[1433,3],[1437,1],[1439,13],[1453,4],[1458,1],[1460,7],[1468,10],[1479,10],[1490,6],[1497,14],[1512,9],[1522,6],[1529,4],[1534,1],[1536,5],[1542,8],[1551,10],[1562,3],[1566,2],[1569,10],[1580,1],[1582,10],[1593,6],[1600,9],[1610,6]]},"155":{"position":[[0,3],[4,10],[15,7],[23,1],[25,6],[32,1],[34,6],[41,2],[44,11],[56,10],[67,7],[75,7],[83,9],[93,13],[107,2],[110,13],[124,6],[131,1],[133,9],[143,5],[149,11],[161,9],[171,3],[175,10],[186,7],[194,9],[204,1],[206,3],[210,4],[215,5],[221,8],[230,4],[235,5],[241,5],[247,2],[250,10],[261,7],[269,1],[271,8],[280,8],[289,3],[293,6],[300,7],[308,9],[318,1],[320,7],[328,6],[335,3],[339,7],[347,4],[352,8],[361,2],[364,6],[371,10],[382,8],[391,3],[395,1],[397,6],[404,12],[417,8],[426,6],[433,4],[438,9],[448,13],[462,5],[468,11],[480,7],[488,10],[510,8],[519,1],[521,3],[525,6],[532,3],[536,12],[549,15],[565,7],[573,7],[581,1],[583,6],[590,5],[596,1],[598,5],[782,26],[809,2],[812,7],[820,6],[827,9],[837,7],[845,1],[847,5],[853,15],[869,2],[872,5],[878,6],[885,5],[891,10],[902,6],[909,3],[913,5],[919,10],[930,28],[959,1],[961,3],[965,7],[973,3],[977,9],[987,2],[990,5],[996,10],[1007,7],[1015,1],[1017,6],[1024,6],[1031,5],[1037,5],[1043,16],[1060,6],[1067,16],[1084,10],[1095,9],[1105,1],[1107,12],[1120,1],[1122,9],[1132,6],[1139,1],[1141,7],[1149,2],[1152,6],[1159,8],[1168,1],[1170,9],[1180,7]]},"157":{"position":[[0,6],[7,8],[16,8],[25,6],[32,6],[39,7],[47,3],[51,8],[60,12],[73,6],[80,1],[82,10],[93,7],[101,6],[108,11],[120,8],[129,2],[132,9],[142,9],[152,6],[159,2],[162,6],[169,9],[179,6],[186,5],[192,4],[197,2],[200,2],[203,5],[209,7]]},"159":{"position":[[0,6],[7,6],[14,1],[16,7],[24,2],[27,11],[41,12],[59,9],[69,6],[76,2],[79,4],[84,9],[94,6],[119,7],[127,10],[138,7],[146,1],[148,9],[158,2],[161,4],[170,10],[181,4],[186,4],[191,11],[203,7],[211,2],[218,8],[227,4],[232,12],[245,4],[250,5],[256,2],[259,8],[268,10],[279,9],[289,6],[296,6],[303,4],[308,7],[316,1],[318,7],[326,9],[336,5],[342,8],[351,4],[356,11],[368,4],[373,7],[381,2],[384,7],[392,2],[413,12],[426,3],[430,10],[441,1],[443,7],[451,5],[457,9],[467,2],[470,6],[477,1],[479,3],[483,11],[495,7],[503,5],[509,7],[517,5],[523,1],[525,8],[534,5],[540,3],[544,8],[553,1],[596,12],[609,9],[619,6],[643,8],[662,1],[686,1],[696,9],[706,1],[733,1],[760,1],[776,16],[793,1],[808,6],[815,31],[847,1],[871,22],[894,1],[914,23],[938,1],[958,5],[964,6],[971,10],[982,13],[996,1],[998,4],[1003,7],[1011,9],[1021,9],[1031,4],[1036,33],[1070,25],[1126,6],[1133,9],[1143,7],[1151,19],[1171,25],[1219,7]]},"161":{"position":[[0,3],[4,12],[17,6],[24,8],[33,1],[35,4],[40,5],[46,9],[56,11],[68,12],[81,4],[86,3],[90,8],[99,6],[106,2],[124,3],[128,5],[134,6],[141,3],[145,8],[182,11],[194,9],[218,8],[271,6],[330,6],[337,10],[348,13],[362,1],[364,4],[369,7],[377,9],[417,9],[427,10],[438,1],[440,8],[449,10],[462,9],[472,5],[478,6],[485,8]]},"163":{"position":[[0,3],[4,13],[18,8],[27,9],[37,5],[43,3],[47,6],[54,3],[58,5],[64,7],[72,1],[74,5],[80,2],[83,17],[101,2],[104,8],[113,1],[115,9],[125,4],[130,2],[133,3],[137,7],[145,7],[153,7],[161,6],[168,3],[172,5],[178,3],[182,5],[188,6],[195,9],[205,12],[218,1],[220,9],[230,3],[234,8],[243,7],[251,13],[265,1],[267,11],[279,4]]},"165":{"position":[[0,6],[7,6],[14,12],[27,8],[36,12],[49,8],[58,1],[60,14],[75,7],[91,13],[105,11],[117,8],[126,1],[128,10],[139,6],[146,8],[155,5],[161,1],[163,7],[179,12],[192,3],[196,10],[207,6],[214,1],[221,9],[231,6],[238,7],[246,9],[256,12],[269,6],[276,1],[283,9],[293,10],[304,2],[307,5],[313,6],[320,1],[322,10],[333,11],[345,1],[347,9],[357,9],[367,5],[373,1],[375,7],[392,4],[397,5],[403,11],[415,1],[421,5],[427,7],[435,17],[453,11],[465,9],[475,12],[488,7],[496,1],[498,11],[510,5],[516,1],[518,6],[542,6],[549,4],[554,2],[557,2],[560,11],[572,4],[577,2],[580,6],[587,13],[601,2],[604,5],[610,4],[615,7],[628,7],[636,11],[648,6],[655,2],[658,5],[664,1],[666,10],[677,8],[686,4],[691,1],[693,5],[699,9],[709,2],[712,9],[722,12],[735,6]]},"167":{"position":[[0,6],[7,16],[24,6],[31,7],[39,1],[41,13],[55,12],[68,3],[72,10],[83,1],[85,8],[94,7],[102,6],[109,2],[117,1],[119,7],[127,2],[137,9],[147,7],[155,1],[157,10],[168,9],[178,1],[180,11],[192,9],[202,8],[211,3],[215,8],[224,18],[243,7]]},"169":{"position":[[0,4],[5,11],[17,1],[22,3],[26,5],[32,13],[46,1],[48,7],[56,6],[63,11],[75,7],[83,1],[85,13],[99,9],[109,9],[119,9],[129,4],[134,11],[146,7],[154,5],[160,12],[173,1],[175,7],[183,5],[189,9],[199,7],[207,12],[220,7],[228,8],[237,1],[239,6],[246,7],[254,11],[266,2],[269,8],[278,7],[286,11],[298,2],[301,16]]},"171":{"position":[[0,8],[9,7],[17,2],[20,3],[24,7],[32,4],[37,2],[40,5],[46,7],[54,3],[58,1],[60,12],[73,7],[81,2],[84,4],[105,5],[111,3],[115,9],[125,7],[133,9],[143,2],[146,6],[153,5],[159,3],[163,2],[166,8],[175,13],[189,8],[198,1],[200,10],[211,1],[213,6],[220,7],[228,3],[232,11],[244,10],[255,6],[262,9],[272,5],[278,12],[291,9],[301,7],[309,13],[323,17],[341,2],[344,10],[355,8],[364,8],[373,1],[375,3],[379,6],[386,3],[390,3],[394,3],[398,8],[407,7],[415,1],[417,6],[424,7],[432,8],[441,12],[454,10],[465,5],[471,10],[482,1],[484,3],[488,5],[494,8],[503,6],[510,6],[517,6],[524,3],[528,8],[537,10],[548,1],[550,6],[557,8],[566,3],[570,8],[579,7],[587,3],[591,5],[597,6],[604,1],[606,3],[610,6],[617,5],[623,9],[633,6],[640,11],[652,6],[659,9],[669,6],[676,1],[678,8],[687,5],[693,6],[700,3],[704,5],[710,2],[713,7],[721,2],[724,3],[728,5],[734,6],[741,11],[753,6],[760,3],[764,10],[775,6],[782,1],[784,7],[792,3],[796,10],[807,9],[817,6],[824,3],[828,2],[831,6],[838,1],[840,4],[845,9],[855,6],[862,6],[869,3],[873,10],[884,6],[891,1],[893,3],[897,6]]},"173":{"position":[[0,6],[7,10],[18,8],[27,4],[32,3],[36,14],[51,7],[59,3],[63,3],[67,10],[78,3],[82,6],[89,1],[91,5],[97,1],[99,5],[105,10],[116,2],[119,3],[123,7],[131,7],[139,13],[153,6],[160,1],[162,7],[170,7],[180,15],[196,1],[198,6],[205,7],[213,5],[219,1],[221,9],[231,8],[240,7],[248,11],[260,3],[264,10],[275,7],[283,11],[295,8],[304,6],[311,6],[318,6],[325,5],[331,1],[333,7],[341,2],[344,9],[354,4],[359,4],[364,5],[370,1],[372,6],[379,1],[381,3],[385,9],[395,10],[406,5],[412,7],[420,10],[431,11],[443,6],[450,10],[461,4],[466,2],[469,9],[479,11],[491,9],[501,8],[510,5],[516,8],[525,2],[528,5],[534,9],[544,1],[546,10],[557,1],[559,5],[565,1],[567,4],[572,6],[579,3],[583,10],[594,12],[607,2],[610,10],[621,6],[628,1],[630,8],[639,1],[641,3],[645,2],[648,9],[658,6],[665,2],[668,5],[674,7],[682,6],[689,6],[696,8],[705,15],[721,10],[732,4],[737,6],[744,4],[749,12],[762,1],[764,6],[771,13],[785,7],[793,6],[800,9],[810,9],[820,9],[830,1],[832,2],[835,10],[846,1],[848,15],[864,9],[874,1],[876,5],[882,5],[888,5],[894,6],[901,2],[904,7],[912,2],[915,1],[917,10],[928,12],[941,1],[943,4],[948,6],[955,3],[959,11],[971,9],[981,5],[987,5],[993,3],[997,10],[1008,2],[1011,7],[1019,2],[1022,4],[1027,9],[1037,6],[1044,6],[1051,5],[1057,3],[1061,5],[1067,7],[1075,6],[1082,14],[1097,1],[1099,6],[1106,5],[1112,6],[1119,12],[1132,1],[1134,4],[1139,11],[1151,8],[1160,8],[1169,6],[1176,11],[1188,5],[1194,1],[1196,9],[1206,6],[1213,4],[1218,8],[1227,12],[1240,8],[1249,6],[1256,2],[1259,7],[1267,9],[1277,5],[1283,8],[1292,12],[1305,11],[1317,9],[1327,9],[1337,6],[1344,7],[1352,8],[1361,7],[1369,5],[1375,6],[1382,8],[1391,1],[1393,7],[1401,1],[1403,3],[1407,12],[1420,8],[1429,11],[1441,6],[1448,13],[1462,7],[1470,5],[1476,17],[1494,5],[1500,8],[1509,6],[1516,4],[1521,2],[1524,7],[1532,4],[1537,3],[1541,5],[1547,7],[1555,3],[1559,14],[1574,2],[1577,5],[1583,4],[1588,4],[1593,10],[1604,3],[1608,2],[1611,8],[1620,1],[1622,8]]},"175":{"position":[[0,3],[4,7],[12,6],[19,12],[32,14],[47,14],[62,5],[68,5],[74,2],[77,7],[85,8],[94,5],[100,3],[104,1],[110,3],[114,1],[116,2],[119,5],[125,11],[137,5],[143,4],[150,3],[154,8],[163,5],[173,3],[177,4],[182,4],[187,5],[199,2],[202,9],[212,8],[221,12],[234,3],[238,9],[248,9],[258,4],[263,3],[267,7],[275,7]]},"177":{"position":[[0,5],[6,14],[21,13],[35,7],[43,5],[49,8],[58,21],[80,8],[89,10],[100,11],[112,10],[123,1],[125,7],[133,10],[144,1],[146,6],[153,2],[156,6],[163,4],[168,11],[180,12],[193,1],[195,8],[204,1],[206,3],[210,6],[217,5],[223,4],[228,13],[242,6],[249,11],[261,5],[267,10],[278,7]]},"179":{"position":[[0,3],[4,9],[14,6],[21,5],[27,7],[35,3],[39,4],[44,5],[50,1],[52,11],[64,7],[72,12],[85,11],[97,8],[106,6],[113,6],[120,9],[130,6],[137,9],[147,9],[157,6],[164,12],[177,9],[187,9],[197,9],[207,3],[211,3],[215,2],[218,12],[231,10],[242,5],[248,9],[258,8],[267,2],[270,6],[277,9],[287,10],[298,3],[302,8],[311,8],[320,6],[327,7],[335,9],[345,6],[352,9],[362,11],[374,7],[382,5],[388,6],[395,9],[405,11],[417,9],[427,6],[434,2],[437,10],[448,6],[455,6],[462,3],[470,7],[478,7],[486,1],[488,2],[491,7],[499,8],[508,14],[523,10],[534,17],[552,1],[554,12],[567,10],[578,9],[588,6],[597,5],[603,7],[611,10],[622,7],[630,10],[641,11],[653,9],[663,5],[669,10],[680,6],[687,6],[694,12],[707,3],[711,7],[719,6],[726,12],[739,7],[747,5],[753,6],[760,14],[775,7],[783,12],[796,7],[804,2],[807,6],[814,9],[824,12],[837,7],[845,16],[862,7],[870,2],[873,6],[880,9],[890,12],[903,7],[911,29],[941,4],[946,5],[952,1],[954,13],[968,4],[973,9],[983,1],[985,13],[999,7],[1007,4],[1012,9],[1022,1],[1024,12],[1037,5],[1043,9],[1053,1],[1055,17],[1073,10],[1084,4],[1089,5],[1095,1],[1097,12],[1110,5],[1116,5],[1122,1],[1124,13],[1138,10],[1149,7],[1157,63],[1221,20],[1242,6],[1249,24],[1274,10],[1285,27],[1313,25],[1339,17],[1357,27],[1385,6],[1392,21],[1414,15],[1430,12],[1443,12],[1456,13],[1470,9],[1480,9],[1490,8],[1499,10],[1510,9],[1520,10],[1531,4],[1536,13],[1550,8],[1559,2],[1562,8],[1571,9],[1581,9],[1591,1],[1593,5],[1599,4],[1604,6],[1611,5],[1617,5],[1623,1],[1625,5],[1631,1],[1633,10],[1644,10],[1655,4],[1660,7],[1668,6],[1675,4],[1680,6],[1687,8],[1696,10],[1707,7],[1715,6],[1722,8],[1731,4],[1736,5],[1742,1],[1744,28],[1773,5],[1779,1],[1781,28],[1810,15],[1826,1],[1828,31],[1860,11],[1872,1],[1874,51],[1926,16],[1943,1],[1994,21],[2016,1],[2018,16],[2035,1],[2086,44],[2131,6],[2138,22],[2161,17],[2179,39],[2219,6],[2226,17],[2244,13],[2258,2],[2261,8],[2270,7],[2278,11],[2290,9],[2300,2],[2303,4],[2308,11],[2320,6],[2327,2],[2330,10],[2341,6],[2348,7],[2356,6],[2363,3],[2367,5],[2373,1],[2375,10],[2386,6],[2395,5],[2401,5],[2407,9],[2417,2],[2420,7],[2428,2],[2431,7],[2439,10],[2450,1],[2452,5],[2458,7],[2466,13],[2480,7],[2488,5],[2494,9],[2504,11],[2516,6],[2523,1],[2525,9],[2535,7],[2543,2],[2546,11],[2558,9],[2568,7],[2576,8],[2585,1],[2587,9],[2597,6],[2604,15],[2620,6],[2627,1],[2629,10],[2640,7],[2648,1],[2650,8],[2659,3],[2663,8],[2672,2],[2675,5],[2681,12],[2694,3],[2698,2],[2701,6],[2708,9],[2718,5],[2724,7],[2732,3],[2736,11],[2748,2],[2751,3],[2755,13],[2769,9],[2779,12],[2792,4],[2797,6],[2804,2],[2807,3],[2811,6],[2818,13],[2832,8],[2841,3],[2845,9],[2855,8],[2864,8],[2873,6],[2880,2],[2883,11],[2895,8],[2904,23],[2930,3],[2934,9],[2944,1],[2946,7],[2954,13],[2968,3],[2972,7],[2980,24],[3005,9],[3015,4],[3020,6],[3027,1],[3029,14],[3046,3],[3050,7],[3058,1],[3060,7],[3068,9],[3078,10],[3089,12],[3102,6],[3109,8],[3118,8],[3127,1],[3129,8]]},"181":{"position":[[0,11],[12,3],[16,8],[25,8],[34,6],[41,1],[43,12],[56,12],[69,5],[75,17],[93,7],[101,10],[112,18],[131,6],[138,14],[153,11],[165,6],[172,1],[174,14],[193,2],[196,13],[210,10],[221,1],[223,6],[230,13],[244,9],[254,11],[266,16],[283,10],[294,11],[306,5],[312,8],[321,8],[330,9],[340,8],[349,8],[358,13],[372,8],[381,5],[387,8],[396,9],[406,8],[415,1],[417,8],[426,8],[435,4],[440,8],[449,8],[458,10],[469,6],[476,8],[485,7],[493,18],[512,8],[521,9],[531,8],[540,2],[543,12],[556,6],[563,8],[572,9],[582,6],[589,16],[606,7],[614,5],[620,7],[630,3],[634,9],[644,12],[657,1],[659,10],[670,12],[683,2],[686,4],[691,9],[701,7],[709,9],[719,3],[725,13],[739,11],[751,7],[759,3],[763,10],[774,8],[783,5],[789,11],[801,1],[803,4],[808,8],[817,5],[825,13],[839,3],[843,1],[845,9],[855,12],[868,7],[876,3],[880,8],[889,7],[897,7],[905,11],[917,21],[939,1],[941,23],[965,8],[976,9],[986,8],[995,7],[1003,6],[1010,3],[1014,8],[1023,9],[1033,10],[1044,12],[1057,6],[1064,8],[1075,13],[1089,11],[1101,8],[1110,1],[1112,9],[1122,3],[1126,8],[1135,11],[1147,9],[1157,9],[1167,5],[1173,5],[1179,7],[1187,5],[1193,10],[1204,1],[1206,8],[1215,8],[1224,9],[1234,76],[1311,12],[1324,8],[1333,18],[1352,1],[1354,20],[1375,6],[1382,6],[1389,2],[1392,10],[1403,9],[1413,9],[1423,7],[1431,7],[1439,7],[1447,1],[1449,9],[1459,9],[1469,5],[1475,6],[1482,9],[1492,30],[1525,9],[1535,8],[1591,7],[1599,9],[1609,9],[1653,8],[1662,8],[1671,9],[1681,3],[1685,6],[1692,5],[1698,8],[1707,16],[1724,3],[1728,10],[1739,8]]},"183":{"position":[[4,6],[11,1],[13,10],[24,5],[30,7],[38,8],[47,1],[49,8]]},"185":{"position":[[0,5],[8,8],[17,2],[20,9],[30,11],[42,9],[52,3],[56,13],[70,8],[79,4],[84,9],[94,2],[97,8],[106,7],[116,8],[125,2],[128,2],[131,9],[141,11],[153,9],[163,3],[167,13],[181,8],[190,4],[195,9],[205,2],[208,8],[217,6],[226,11],[238,8],[247,6],[254,4],[259,6],[266,10],[277,14],[294,11],[306,8],[315,6],[322,4],[327,6],[334,3],[338,5],[344,10],[355,6],[364,11],[376,8],[385,6],[392,4],[397,6],[404,10],[415,14],[432,11],[444,8],[453,6],[460,4],[465,6],[472,3],[476,5],[482,10],[493,15],[511,11],[523,8],[532,6],[539,4],[544,5],[550,12],[563,17],[583,11],[595,8],[604,6],[611,4],[616,2],[619,5],[625,12],[648,11],[660,8],[669,6],[676,4],[681,5],[704,11],[716,8],[725,6],[732,4],[737,2],[740,5],[751,9],[763,11],[775,8],[784,6],[791,4],[796,7],[804,11],[818,11],[830,8],[839,2],[842,6],[849,4],[854,7],[862,7],[872,11],[884,8],[893,6],[900,4],[905,5],[911,9],[923,11],[935,8],[944,2],[947,6],[954,4],[959,5],[965,11],[977,10],[988,3],[992,9],[1002,8],[1011,12],[1024,2],[1027,5],[1033,3],[1037,10],[1048,2],[1051,12],[1064,9],[1090,3],[1094,9],[1104,8],[1113,6],[1120,5],[1126,5],[1132,4],[1137,6],[1144,8],[1155,1],[1157,6],[1183,1],[1185,20],[1206,2],[1209,8],[1218,7],[1261,2],[1264,8],[1273,10],[1284,3],[1288,11],[1300,5],[1306,6],[1313,11],[1325,9],[1335,3],[1339,10],[1350,5],[1356,12],[1369,12],[1382,8],[1391,10],[1402,8],[1411,14],[1426,9],[1436,8],[1445,1],[1447,13],[1471,1],[1473,5],[1479,21],[1515,1],[1517,5],[1523,21],[1576,1],[1602,2],[1605,8],[1614,10],[1671,2],[1674,8],[1683,7],[1691,14],[1706,9],[1716,9],[1726,6],[1733,1],[1735,9],[1745,11],[1757,14],[1772,9],[1782,8],[1791,11],[1803,1],[1805,18],[1824,3],[1828,6],[1835,13],[1849,8],[1858,3],[1862,11],[1874,9],[1884,10],[1895,5],[1901,12],[1914,1]]},"187":{"position":[[0,9],[12,9],[22,13],[36,8],[45,11],[59,9],[69,15],[85,8],[94,10],[107,9],[117,13],[131,3],[135,5],[146,1],[148,13],[162,8],[171,12],[186,9],[196,2],[199,13],[213,3],[217,5],[228,1],[230,13],[244,8]]},"189":{"position":[[0,10],[13,10],[24,3],[28,6],[35,5],[41,9],[51,5],[57,16],[76,10],[87,3],[91,4],[96,6],[103,6],[110,9],[120,16],[139,10],[150,3],[154,5],[160,6],[167,6],[174,9],[184,12],[199,10],[210,3],[214,5],[220,6],[227,10],[238,2],[241,9],[251,8],[262,11],[274,6],[281,8],[290,9],[300,9],[310,10],[323,11],[335,6],[342,2],[345,8],[354,9],[364,9],[374,11],[388,11],[400,6],[407,10],[418,1],[420,9],[430,6],[437,15],[455,11],[467,6],[474,13],[488,2],[491,9],[501,6],[508,23],[534,11],[546,6],[553,8],[562,10],[573,15],[589,11],[601,9],[611,25],[639,11],[651,6],[658,2],[661,8],[670,10],[681,15],[697,11],[709,9]]},"191":{"position":[[0,19],[22,11],[34,8],[43,10],[54,1],[56,10],[67,9],[77,8],[86,8],[95,20],[118,11],[130,8],[139,10],[150,1],[152,10],[163,9],[173,9],[183,8],[192,25],[220,11],[232,8],[241,10],[252,1],[254,10],[265,9],[275,8],[284,5],[290,7],[298,1],[300,8],[309,7],[317,28],[348,11],[360,8],[369,10],[380,1],[382,10],[393,9],[403,9],[413,5],[419,7],[427,1],[429,7],[437,7]]},"193":{"position":[[0,8],[11,11],[23,8],[32,6],[39,5],[45,9],[55,3],[59,10],[72,3],[76,12],[89,8],[98,6],[105,10],[116,2],[119,10],[130,1],[132,8],[141,9],[151,5],[157,9],[167,3],[171,4],[176,7],[184,3],[188,6],[195,4],[200,5],[206,5],[212,8],[221,36],[258,7],[266,10],[277,4],[282,23],[306,8],[315,6],[322,14],[337,22],[360,8]]},"195":{"position":[[4,3],[8,9],[18,13],[32,7],[40,12],[53,7],[61,11],[73,13],[87,10],[98,7],[106,5],[112,5],[118,5],[124,10],[135,1],[137,6],[144,7],[152,2],[155,9],[165,1],[167,1],[169,6],[176,11],[188,3],[192,10],[203,8],[212,3],[216,4],[221,5],[227,10],[238,13],[252,16],[271,13],[285,9],[295,6],[302,5],[310,13],[324,3],[328,1],[330,9],[340,12],[353,6],[360,8],[371,9],[381,8],[390,7],[398,6],[405,3],[409,8],[418,9],[428,10],[439,12],[452,6],[459,5],[465,9],[475,8],[486,6],[493,3],[497,3],[501,6],[508,9],[518,10],[529,1],[531,1],[533,5],[539,8],[548,21],[572,9],[582,11],[594,5],[600,7],[608,1],[610,11],[622,1],[624,10],[635,3],[639,5],[645,8],[654,10],[665,1],[667,5],[673,10],[684,18],[703,9],[713,1],[715,7],[723,3],[727,13],[741,5],[747,9],[757,9],[767,10],[778,5],[784,5],[790,10],[801,1],[803,11],[815,26],[842,2],[845,7],[853,5],[859,8],[868,9],[878,60],[939,2],[942,9],[952,11],[964,5],[970,1],[972,9],[982,6],[989,32],[1022,4],[1027,8],[1036,2],[1039,5],[1045,4],[1050,6],[1057,7],[1065,2],[1068,11],[1080,9],[1090,10],[1101,6],[1108,9],[1118,9],[1128,6],[1135,34],[1170,2],[1173,5],[1179,7],[1187,6],[1194,5],[1200,11],[1212,9],[1222,9],[1232,9],[1242,7],[1250,34],[1285,1],[1287,7],[1295,2],[1298,10],[1309,10],[1320,6],[1327,1],[1329,10],[1340,6],[1347,5],[1353,2],[1356,2],[1359,9],[1369,5],[1375,11],[1387,6],[1394,7],[1402,2],[1405,6],[1412,16],[1429,4],[1434,9],[1444,14],[1459,5],[1465,6],[1472,6],[1479,5],[1485,9],[1495,5],[1501,10],[1512,1],[1514,4],[1519,3],[1523,2],[1526,11],[1538,23],[1564,9],[1574,11],[1586,5],[1592,7],[1600,1],[1602,11],[1614,1],[1616,10],[1627,3],[1631,5],[1637,2],[1640,8],[1649,10],[1660,3],[1664,8],[1673,10],[1684,1],[1686,7],[1694,8],[1703,2],[1706,11],[1718,3],[1722,13],[1736,5],[1742,9],[1752,9],[1762,10],[1773,5],[1779,5],[1785,10],[1796,1],[1798,11],[1810,26],[1837,2],[1840,7],[1848,5],[1854,8],[1863,9],[1873,60],[1934,2],[1937,9],[1947,11],[1959,5],[1965,1],[1967,9],[1977,6],[1984,26],[2011,2],[2014,11],[2026,9],[2036,5],[2042,11],[2054,3],[2058,7],[2066,36],[2103,2],[2106,11],[2118,9],[2128,5],[2134,11],[2146,3],[2150,7],[2158,4],[2163,1],[2165,8],[2174,7],[2182,2],[2185,8],[2194,7],[2202,36],[2239,1],[2241,7],[2249,2],[2252,10],[2263,10],[2274,6],[2281,1],[2283,10],[2294,2],[2297,15],[2313,9],[2323,23],[2347,6],[2354,10],[2365,3],[2369,12],[2382,3],[2386,6],[2393,4],[2398,2],[2401,2],[2404,7],[2412,12],[2425,7],[2433,5],[2439,6],[2446,2],[2449,6],[2456,3],[2460,11],[2472,6],[2479,5],[2485,12],[2498,4],[2503,3],[2507,5],[2513,7],[2521,3],[2525,1],[2527,3],[2531,5],[2537,8],[2546,1],[2548,7],[2556,4],[2561,2],[2564,7],[2572,5],[2578,3],[2582,5],[2588,12],[2601,2],[2604,11],[2616,3],[2620,5],[2626,10],[2637,2],[2640,11],[2652,5],[2658,9],[2668,3],[2672,5],[2678,8],[2687,8],[2696,1],[2698,18],[2717,11],[2729,1],[2731,26],[2758,60],[2819,37],[2857,2],[2860,9],[2870,3],[2874,3],[2878,10],[2889,10],[2900,6],[2907,3],[2911,13],[2925,1],[2927,13],[2941,45],[2987,9],[2997,8],[3006,3],[3010,13],[3024,7],[3032,6],[3039,4],[3044,8],[3053,11],[3065,5],[3071,4],[3076,8],[3085,9],[3095,5],[3101,2],[3104,10],[3115,5],[3121,2],[3124,13],[3138,10],[3149,2],[3152,6],[3159,8],[3168,26],[3195,2],[3201,9],[3211,6],[3218,18],[3237,2],[3243,3],[3247,6],[3254,42],[3297,2],[3303,9],[3313,6],[3320,6],[3327,2],[3330,4],[3335,8],[3344,5],[3350,7],[3358,26],[3385,58],[3444,2],[3447,3],[3451,6],[3458,7],[3466,3],[3470,2],[3473,9],[3483,9],[3493,2],[3496,2],[3499,6],[3506,4],[3511,8],[3520,6],[3527,3],[3531,6],[3538,7],[3546,8],[3555,7],[3563,5],[3569,7],[3577,1],[3579,16],[3596,7]]},"197":{"position":[[0,13],[16,11],[28,6],[35,6],[42,9],[52,9],[62,8],[71,15],[89,11],[101,6],[108,2],[111,8],[120,9],[130,8],[139,19],[161,11],[173,6],[180,6],[187,9],[197,9],[207,5],[213,18],[232,1],[234,8],[243,14],[258,8],[267,7],[275,8],[284,3],[288,9],[298,9],[308,9],[318,9],[328,7],[336,10],[347,1],[349,3],[353,2],[356,6],[363,9],[373,7],[381,8],[390,2],[393,6],[400,1],[402,8],[411,8],[420,2],[423,1],[425,1],[427,3],[431,9],[441,9],[451,39],[491,5],[497,9],[507,8],[516,7],[524,8],[533,8],[542,1],[544,8],[553,7],[561,1],[563,8],[572,12],[585,1],[587,9],[597,5],[603,5],[609,9],[619,7],[627,7],[635,1],[637,10],[648,9],[699,11],[711,8],[720,7],[728,8],[737,7],[745,7],[753,1],[755,4],[760,7],[768,8],[777,1],[779,7],[787,8],[796,12],[809,1],[811,5],[817,9],[827,8],[836,1],[838,41],[880,26],[958,23],[982,28],[1011,23],[1035,3],[1039,2],[1042,5],[1048,8],[1057,1],[1059,8],[1068,5],[1074,8],[1083,11],[1095,10],[1106,5],[1112,2],[1115,3],[1119,1],[1121,7],[1129,5],[1135,8],[1144,1],[1146,41],[1188,8],[1197,1],[1232,26],[1296,2],[1299,1],[1301,3],[1305,1],[1307,3],[1311,3],[1315,5],[1321,5],[1327,9],[1337,2],[1340,12],[1353,12],[1366,4],[1371,1],[1373,4],[1378,10]]},"199":{"position":[[0,10],[13,10],[24,3],[28,9],[38,5],[44,9],[54,6],[61,16],[80,10],[91,3],[95,9],[105,5],[111,7],[119,7],[127,6],[134,10],[145,16],[164,10],[175,3],[179,9],[189,5],[195,7],[203,7],[211,6],[218,10],[229,12],[244,10],[255,3],[259,6],[266,9],[276,10],[287,2],[290,10],[301,9],[311,1],[352,27],[454,1],[456,8],[467,11],[479,9],[489,6],[496,9],[506,9],[516,7],[524,10],[537,11],[549,9],[559,2],[562,6],[569,9],[579,9],[589,7],[597,9],[607,1],[648,27],[689,2],[692,10],[703,8],[712,26],[739,2],[742,8],[751,2],[754,8],[763,18],[809,28],[838,2],[841,2],[844,8],[853,5],[859,20],[880,1],[882,29],[914,10],[925,3],[929,6],[936,7],[944,9],[954,5],[960,9],[970,8],[979,40],[1022,10],[1033,3],[1037,6],[1044,7],[1052,9],[1062,5],[1068,9],[1078,9],[1088,7],[1096,5],[1102,10],[1113,8],[1122,28],[1153,10],[1164,3],[1168,1],[1170,9],[1180,4],[1185,7],[1193,10],[1204,9],[1214,8],[1223,39],[1265,10],[1276,3],[1280,1],[1282,9],[1292,4],[1297,7],[1305,10],[1316,9],[1326,9],[1336,7],[1344,5],[1350,10],[1361,8],[1370,9],[1380,1],[1382,29],[1412,5],[1438,5],[1470,2],[1473,27],[1538,2],[1541,9],[1551,3],[1555,3],[1559,8],[1568,9],[1578,8],[1587,8],[1652,2],[1655,9],[1665,3],[1669,3],[1673,8],[1682,9],[1692,8],[1701,8],[1715,2],[1718,9],[1768,2],[1771,9],[1781,3],[1785,4],[1790,2],[1793,4],[1798,7],[1806,9],[1816,8],[1825,8],[1878,2],[1881,9],[1891,3],[1895,4],[1900,2],[1903,4],[1908,7],[1916,9],[1926,8],[1935,8],[1949,2],[1952,9],[1966,1],[1968,35],[2006,10],[2017,3],[2021,8],[2030,9],[2040,13],[2054,10],[2065,8],[2074,9],[2084,1],[2125,27],[2153,53],[2207,18],[2226,2],[2229,3],[2233,8],[2242,3],[2246,5],[2265,2],[2268,1],[2270,6],[2277,2],[2280,5],[2290,34],[2327,10],[2338,3],[2342,9],[2352,8],[2361,8],[2370,7],[2378,13],[2392,10],[2403,8],[2412,9],[2422,1],[2463,27],[2491,52],[2544,18],[2563,2],[2566,4],[2571,8],[2580,7],[2588,8],[2597,6],[2616,2],[2619,1],[2621,6]]},"201":{"position":[[0,43],[46,11],[58,9],[68,6],[75,9],[85,8],[94,7],[102,13],[116,10],[127,8],[136,10],[149,11],[161,9],[171,2],[174,6],[181,9],[191,8],[200,7],[208,13],[222,10],[233,8],[242,35],[280,10],[291,3],[295,8],[304,9],[314,13],[328,10],[339,8],[348,22],[373,10],[384,3],[388,6],[395,3],[399,3],[403,8],[412,13],[426,6],[433,7],[441,6],[448,1],[450,4],[455,10],[466,7],[474,1],[476,9],[486,7],[494,9],[504,9],[514,9],[524,6],[531,7],[539,9],[549,2],[552,12],[565,6],[572,8],[581,12],[594,3],[598,10],[609,10],[620,3],[624,8],[633,9],[643,11],[655,2],[658,8],[667,6],[674,7],[682,5],[688,4],[693,5],[699,9],[709,4],[714,8],[723,1],[725,30],[756,8],[765,1],[767,37],[805,18],[824,26],[851,12],[864,41],[906,37],[944,16],[961,60],[1056,1],[1058,1],[1060,2],[1063,7],[1071,9],[1081,5],[1087,9],[1097,3],[1101,6],[1108,6],[1115,9],[1125,4],[1130,8],[1139,2],[1142,9],[1152,2],[1155,5],[1161,9],[1171,7],[1179,9],[1189,9],[1199,9],[1209,7],[1217,8],[1226,2],[1229,7],[1237,9],[1247,8],[1256,1],[1258,30],[1289,8],[1298,1],[1300,37],[1338,18],[1357,49],[1407,12],[1420,10],[1431,16],[1448,18],[1467,22],[1490,29],[1520,25],[1546,1],[1548,1]]},"203":{"position":[[0,1],[2,10],[13,1],[15,9],[25,7],[33,11],[45,4],[50,11],[62,9],[72,2],[75,1],[77,9],[87,10],[98,9],[108,10],[119,7],[127,11],[139,9],[149,5],[155,9],[165,9],[175,9],[185,52],[238,9],[248,7],[256,8],[265,1],[267,7],[275,5],[281,15],[297,11],[309,2],[312,9],[322,17],[340,8],[351,9],[361,7],[369,8],[378,1],[380,13],[394,10],[405,8],[414,2],[417,9],[427,8],[436,7],[446,9],[456,7],[464,8],[473,9],[483,1],[485,13],[499,10],[510,8],[519,2],[522,9],[532,8],[541,6],[550,13],[564,10],[575,8],[584,2],[587,8],[596,9],[606,1],[608,6],[615,3],[619,11],[633,9],[643,10],[654,8],[663,1],[665,13],[679,10],[690,8],[699,2],[702,8],[711,9],[721,1],[723,6],[730,3],[742,6],[749,8],[758,1],[760,7],[768,6],[775,9],[785,4],[790,2],[793,7],[801,10],[812,1],[814,4],[819,3],[823,2],[826,9],[836,10],[847,9],[857,8],[866,6],[873,1],[875,5],[881,21],[903,5],[909,30],[945,24],[970,21],[1032,2],[1035,8],[1044,11],[1056,2],[1059,6],[1066,2],[1069,8],[1078,8],[1087,19],[1107,1],[1109,9],[1119,1],[1121,5],[1127,7],[1135,9],[1145,5],[1151,6],[1158,4],[1163,3],[1167,9],[1177,24],[1251,1],[1253,6],[1260,8],[1269,1],[1271,8],[1280,9],[1290,2],[1293,4],[1298,2],[1301,6],[1308,3],[1312,10],[1323,1],[1325,10],[1336,3],[1340,8],[1349,1],[1351,7],[1359,9],[1369,5],[1375,7],[1383,2],[1386,6],[1393,18],[1412,2],[1415,9],[1425,7],[1433,20],[1454,2],[1457,9],[1467,9],[1477,7],[1485,38],[1524,2],[1527,9],[1537,9],[1569,5],[1575,15],[1591,2],[1594,9],[1604,9],[1614,1],[1616,5],[1622,11],[1645,2],[1648,9],[1658,7],[1666,8],[1678,2],[1681,9],[1691,7]]},"206":{"position":[[0,12],[13,1],[15,3],[19,7],[27,7],[35,9],[45,7],[53,9],[63,8],[72,4],[77,11],[89,8],[98,3],[102,3],[106,5],[112,9],[122,9],[132,8],[141,4],[146,3],[150,10],[161,9],[171,1],[189,27],[217,9],[227,7],[235,2],[238,9],[248,6],[255,11],[267,9],[277,11],[289,8],[298,1],[300,9],[310,18],[329,2],[332,8],[341,3],[345,12],[358,2],[361,13],[375,12],[388,8],[408,2],[411,7],[419,1],[421,5],[438,2],[441,8],[450,9],[460,9],[470,9],[480,1],[500,27],[528,9],[538,6],[545,1],[547,7],[555,19],[589,9],[599,1],[628,27],[656,9],[666,4],[671,1],[673,7],[709,1],[711,8],[720,1],[722,2],[725,6],[732,5],[738,8],[747,10],[758,9],[768,1],[770,8],[779,5],[785,6],[792,8],[801,2],[804,10],[815,9],[825,8],[834,5],[840,3],[844,5],[850,5],[856,8],[865,11],[877,10]]},"208":{"position":[[0,24],[25,10],[36,8],[45,12],[58,40],[99,30],[130,29],[160,39],[200,31],[232,33],[266,43],[509,18],[553,18],[594,33]]},"210":{"position":[[36,28],[65,43],[109,26],[136,35],[172,13],[222,25],[248,42],[295,31],[327,5],[333,11],[345,13],[395,25],[421,43],[465,37],[539,28],[568,36],[605,11],[617,13]]},"212":{"position":[[0,4],[5,1],[7,31],[39,6],[46,1],[48,5],[54,10],[65,24],[94,25],[126,23],[150,6],[157,25],[222,13],[236,1],[238,34],[273,23],[336,12],[349,12],[362,1],[364,33],[398,15],[414,22],[437,12],[450,12],[463,24],[488,40],[529,12],[542,23],[566,38],[605,37],[643,1]]},"214":{"position":[[0,18],[19,1],[102,15],[118,36],[155,19],[190,53],[244,66],[311,48],[360,53],[414,47],[462,1]]},"216":{"position":[[0,6],[9,6],[16,9],[26,2],[29,6],[36,11],[53,10],[64,3],[68,12],[90,9],[100,11],[112,13],[126,9],[136,5],[142,6],[149,6],[156,6],[163,7],[171,8],[180,10],[191,6],[198,8],[207,8],[216,5],[222,4],[227,9],[237,1],[239,9]]},"218":{"position":[[0,1],[2,7],[10,6],[17,2],[20,5],[26,1],[28,9],[38,9],[48,10],[59,7],[67,5],[73,2],[76,6],[83,3],[87,5],[93,4],[98,12],[111,11],[123,5],[129,6],[136,8],[145,4],[150,10],[161,1],[163,5],[169,12],[182,4],[187,10],[198,3],[202,6],[209,6],[216,3],[220,6],[227,6],[234,5],[240,5],[246,15],[262,9],[272,8],[281,8],[290,7],[298,2],[301,9],[311,7],[319,10],[330,3],[334,10],[345,3],[349,1],[351,9],[361,7],[369,9],[379,1],[381,8],[390,11],[402,6],[409,9],[419,2],[422,5],[428,7],[436,7],[444,9],[454,9],[464,7],[472,10],[483,2],[486,9],[496,6],[503,6],[510,9],[520,2],[523,7],[531,9],[541,10],[552,2],[555,8],[564,2],[567,6],[574,10],[585,5],[591,5],[597,5],[603,13],[617,10],[630,6],[637,11],[649,10],[660,6],[667,5],[673,7],[681,6],[688,10],[699,6],[706,10],[717,9],[727,4],[732,2],[735,9],[745,3],[749,11],[761,8],[770,3],[774,4],[779,8],[788,13],[802,4],[809,8],[818,5],[824,8],[833,39],[873,2],[876,3],[880,4],[885,10],[896,12],[909,29],[939,4],[944,5],[950,10],[961,5],[967,10],[978,8],[987,2],[990,9],[1000,3],[1004,3],[1008,8],[1017,31],[1049,2],[1052,3],[1056,11],[1068,10],[1079,8],[1088,29],[1118,2],[1121,6],[1128,8],[1137,7],[1145,4],[1150,10],[1161,2],[1164,3],[1168,2],[1171,6],[1178,10],[1189,3],[1193,11],[1205,4],[1210,6],[1217,2],[1220,4],[1225,6],[1232,31],[1264,2],[1267,5],[1273,8],[1282,6],[1289,1],[1291,3],[1295,2],[1298,7],[1306,29],[1336,5],[1342,10],[1353,6],[1360,9],[1370,1],[1372,7],[1380,27],[1408,2],[1411,3],[1415,4],[1420,7],[1428,27],[1456,5],[1462,1],[1464,26],[1491,22],[1514,2],[1517,3],[1521,11],[1533,10],[1544,6],[1551,27],[1579,6],[1586,2],[1589,6],[1596,9],[1606,12],[1619,6],[1626,3],[1630,6],[1639,9],[1649,8],[1658,3],[1662,7],[1670,5],[1676,4],[1681,6],[1688,6],[1695,2],[1698,5],[1704,8],[1713,10],[1724,3],[1728,5],[1734,10],[1745,2],[1748,6],[1755,10]]},"220":{"position":[[0,6],[7,10],[18,2],[21,4],[26,6],[33,10],[44,1],[46,13],[60,8],[69,9],[79,2],[82,9],[92,11],[104,6],[111,9],[121,8],[130,10],[141,9],[151,9],[161,3],[165,2],[168,6],[175,3],[179,1],[181,2],[184,14],[199,7],[207,13]]},"222":{"position":[[0,3],[4,4],[9,5],[15,2],[18,6],[25,10],[36,7],[44,3],[48,1],[50,6],[57,7],[65,10],[76,8],[85,3],[89,1],[91,4],[96,11],[108,1],[110,8],[119,10],[130,2],[133,7],[141,3],[145,8],[154,33],[188,7],[242,15],[258,1],[260,43],[304,18],[323,1],[325,5],[331,9],[341,1],[343,48],[392,25],[418,16],[435,20],[456,4],[461,2],[464,18],[483,5],[489,7],[497,35],[533,5],[539,7],[547,10],[558,10],[569,12],[582,4],[587,3],[591,10],[602,33],[636,9],[692,15],[708,1],[710,43],[754,18],[773,1],[775,5],[781,48],[830,25],[856,16],[873,20],[894,4],[899,2],[902,18],[921,5],[927,35],[963,10],[974,14],[989,7],[997,10],[1008,7],[1016,1],[1018,11],[1030,5],[1036,6],[1043,7],[1051,9],[1061,9],[1071,6],[1078,15],[1094,6],[1101,6],[1108,13],[1122,26],[1149,7],[1211,7],[1219,2],[1222,8],[1231,9],[1241,1],[1243,6],[1250,15],[1266,1],[1268,39],[1327,2],[1330,10],[1341,6],[1348,2],[1351,6],[1358,18],[1377,1],[1379,5],[1385,9],[1395,1],[1397,34],[1432,18],[1451,16],[1468,20],[1489,2],[1492,12],[1505,9],[1515,7],[1523,4],[1528,2],[1531,18],[1550,5],[1556,7],[1564,31],[1615,5],[1621,7],[1629,10],[1640,10],[1651,12],[1664,5],[1670,6],[1677,10],[1688,9],[1698,9],[1708,6],[1715,39],[1755,6],[1762,9],[1772,11],[1784,31],[1816,50],[1867,9],[1932,14],[1947,7],[1955,2],[1958,8],[1967,9],[1977,1],[1979,6],[1986,15],[2002,1],[2004,34],[2039,15],[2055,2],[2058,10],[2069,6],[2076,2],[2079,6],[2086,18],[2105,1],[2107,5],[2113,52],[2166,42],[2209,16],[2226,20],[2247,2],[2250,12],[2263,9],[2273,7],[2281,4],[2286,2],[2289,18],[2308,5],[2314,26],[2341,15],[2357,10],[2368,14],[2383,5],[2389,6],[2396,8],[2405,9],[2415,9],[2425,10],[2436,6],[2443,19],[2463,6],[2470,7],[2478,11],[2490,21],[2512,30],[2543,9],[2584,6],[2591,2],[2594,8],[2603,9],[2613,1],[2615,6],[2622,15],[2638,1],[2640,30],[2671,7],[2679,2],[2682,10],[2693,6],[2700,2],[2703,6],[2710,18],[2729,1],[2731,5],[2737,31],[2769,22],[2792,16],[2809,20],[2830,2],[2833,12],[2846,9],[2856,7],[2864,4],[2869,2],[2872,18],[2891,5],[2897,22],[2920,7],[2928,10],[2939,14],[2954,5],[2960,6],[2967,2],[2970,5],[2976,9],[2986,9],[2996,6],[3003,2],[3006,5],[3012,7],[3020,12],[3033,1],[3035,14],[3050,6],[3057,5],[3063,9],[3073,2],[3078,7],[3086,7],[3094,2],[3097,9],[3107,8],[3118,13],[3132,5],[3138,6],[3145,8],[3154,1],[3156,3],[3160,3],[3164,6],[3171,4],[3176,6],[3183,5],[3189,10],[3200,8],[3209,6],[3216,8],[3225,7],[3233,5],[3239,3],[3243,5],[3249,12],[3262,8],[3271,8],[3280,4],[3285,2],[3288,7],[3296,6],[3303,7],[3311,1],[3313,6],[3320,12],[3333,2],[3336,10],[3347,5],[3353,1],[3355,5],[3497,2],[3500,8],[3509,6],[3556,46],[3603,41],[3645,10],[3656,2],[3659,8],[3668,6],[3675,28],[3704,2],[3707,8],[3716,10],[3768,38],[3818,9],[3828,8],[3837,2],[3840,6],[3847,6]]},"224":{"position":[[0,8],[11,3],[15,7],[23,9],[33,7],[41,2],[44,10],[55,5],[61,6],[68,1],[70,3],[74,5],[80,8],[89,12],[102,6],[109,5],[115,4],[120,3],[124,3],[128,4],[133,8],[142,1],[144,7],[156,2],[159,7],[167,11],[181,6],[188,9],[198,2],[201,8],[210,8],[219,11],[231,7],[241,7],[249,5],[255,5],[261,1],[263,1],[265,5],[271,11],[283,10],[294,13],[308,9],[320,10],[331,5],[337,5],[343,9],[353,6],[360,10],[371,21],[395,10],[406,5],[412,5],[418,10],[429,11],[441,12],[456,10],[467,5],[473,5],[479,3],[483,9],[493,2],[496,11],[508,16],[527,10],[538,5],[544,5],[550,10],[561,3],[565,5],[611,43],[655,41],[697,29],[727,9],[737,1],[739,7],[747,5],[753,1],[755,6],[762,3],[766,7],[774,9],[784,8],[793,3],[797,8],[806,9],[816,1],[818,8],[827,8],[836,2],[839,7],[847,8],[856,11],[868,3],[872,5],[878,5],[884,4],[889,5],[895,3],[899,9],[909,9],[919,7],[927,7],[935,7],[943,2],[946,4],[951,6],[958,7],[966,12],[979,8],[988,6],[995,11],[1007,8],[1016,1],[1018,6],[1025,5],[1031,3],[1035,9],[1045,8],[1054,11],[1066,3],[1070,10],[1081,7],[1091,8],[1100,20],[1121,11],[1133,14],[1148,8],[1157,7],[1165,7],[1173,2],[1176,4],[1181,6],[1188,7],[1196,8],[1205,9],[1215,5],[1221,3],[1225,6],[1232,9],[1242,6],[1249,7],[1257,6],[1264,8],[1273,12],[1286,1],[1288,8],[1297,1],[1299,6],[1306,18],[1325,1],[1327,8],[1336,7],[1344,5],[1350,10],[1361,8],[1370,7],[1378,11],[1390,1],[1392,5],[1398,6],[1405,3],[1409,7],[1417,8],[1426,3],[1430,9],[1440,1],[1442,5],[1448,4],[1453,11],[1465,4],[1470,6],[1477,7],[1485,6],[1492,9],[1502,3],[1506,8],[1515,7],[1523,3],[1527,7],[1535,8],[1544,3],[1548,9],[1558,1],[1560,8],[1569,7],[1577,2],[1580,2],[1583,7],[1591,6],[1600,10],[1611,6],[1618,10],[1629,10],[1640,10],[1651,5],[1657,9],[1667,6],[1674,9],[1684,1],[1686,7],[1694,5],[1700,10],[1711,8],[1720,3],[1724,7],[1732,3],[1736,7],[1744,8],[1753,13],[1767,11],[1779,1],[1781,7],[1789,5],[1795,3],[1799,10],[1810,5],[1816,12],[1829,1],[1831,10],[1842,1],[1844,9],[1854,7],[1862,7],[1870,5],[1876,3],[1880,4],[1885,4],[1890,9],[1900,9],[1910,10],[1921,11],[1933,1],[1935,7],[1943,5],[1949,3],[1953,10],[1964,9],[1974,7],[1982,9],[1992,11],[2004,14],[2019,5],[2025,8],[2034,4],[2039,2],[2042,10],[2053,2],[2056,5],[2062,12],[2075,3],[2079,7],[2087,5],[2093,13],[2107,9],[2117,3],[2121,9],[2131,7],[2139,10],[2150,7],[2158,6],[2165,6],[2172,6],[2179,1],[2181,8],[2190,10],[2201,5],[2207,10],[2218,10],[2229,8],[2238,10],[2249,5],[2255,22],[2280,8],[2289,5],[2295,9],[2305,5],[2311,8],[2320,26],[2349,8],[2358,5],[2364,9],[2374,6],[2381,9],[2391,8],[2400,25],[2428,8],[2437,5],[2443,9],[2453,6],[2460,8],[2469,8],[2478,31],[2512,8],[2521,5],[2527,9],[2537,8],[2546,10],[2557,4],[2562,10],[2573,8],[2582,6],[2589,15],[2605,8],[2614,9],[2712,49],[2762,38],[2801,8],[2810,8],[2819,13],[2833,9],[2843,10],[2856,8],[2865,7],[2873,1],[2875,12],[2888,7],[2896,7],[2904,5],[2910,5],[2916,6],[2923,1],[2925,11],[3025,8],[3046,8],[3055,5],[3061,6],[3068,1],[3070,6],[3077,10],[3117,33],[3151,39],[3191,8],[3212,6],[3219,7],[3227,5],[3233,3],[3237,12],[3250,8],[3259,6],[3266,3],[3270,10],[3281,7],[3289,10],[3300,10],[3311,3],[3315,12],[3328,9],[3338,3],[3342,12],[3355,3],[3359,3],[3363,5],[3369,22],[3392,4],[3397,2],[3400,9],[3410,14],[3425,10],[3436,2],[3439,2],[3442,8],[3451,2],[3454,9],[3464,7],[3472,1],[3474,10],[3485,6],[3492,2],[3495,8],[3504,2],[3507,7],[3515,5],[3521,7],[3567,1],[3572,7],[3580,7],[3598,1],[3610,1],[3623,12],[3636,20],[3689,10],[3713,2],[3716,6],[3741,2],[3744,6],[3769,2],[3772,6],[3782,5],[3788,8],[3797,8],[3806,8],[3815,2],[3818,6],[3825,7],[3833,8],[3842,20],[3863,15],[3922,10],[3946,2],[3949,6],[3974,2],[3977,6],[4002,2],[4005,6],[4014,8],[4023,10],[4034,5],[4040,4],[4045,3],[4049,12],[4062,1],[4064,8],[4073,6],[4080,9],[4090,1],[4092,6],[4099,5],[4105,5],[4111,7],[4119,7],[4127,11],[4139,9],[4149,8],[4158,7],[4168,7],[4176,9],[4186,8],[4195,19],[4217,7],[4225,10],[4236,1],[4238,10],[4249,7],[4257,10],[4270,10],[4281,10],[4292,5],[4298,10],[4309,3],[4313,9],[4323,14],[4340,9],[4350,8],[4359,5],[4365,13],[4379,6],[4386,13],[4400,1],[4402,7],[4410,10],[4421,5],[4427,6],[4434,11],[4446,12],[4459,2],[4462,9],[4472,5],[4478,6],[4485,11],[4497,11],[4509,2],[4512,3],[4516,6],[4523,11],[4535,6],[4542,6],[4549,11],[4561,8],[4570,5],[4576,13],[4590,3],[4594,5],[4600,5],[4606,7],[4614,9],[4624,8],[4633,20],[4654,2],[4657,2],[4660,9],[4670,5],[4676,6],[4683,49],[4733,2],[4736,3],[4740,6],[4747,1],[4749,11],[4771,11],[4783,5],[4789,12],[4802,21],[4875,6],[4882,11],[4894,7],[4902,9],[4912,8],[4921,1],[4923,18],[4942,25],[4968,50],[5019,2],[5022,8],[5031,8],[5040,10],[5051,9],[5061,42],[5104,2],[5107,8],[5116,8],[5125,5],[5131,8],[5140,53],[5194,6],[5201,4],[5206,8],[5215,2],[5218,3],[5222,6],[5229,9],[5239,4],[5244,5],[5250,5],[5256,4],[5261,30],[5292,13],[5306,2],[5309,9],[5319,12],[5332,7],[5340,8],[5349,30],[5380,41],[5422,17],[5440,2],[5443,2],[5446,8],[5455,3],[5459,8],[5468,15],[5484,10],[5495,2],[5498,9],[5508,9],[5518,51],[5570,7],[5578,9],[5588,1],[5590,10],[5601,1],[5603,8],[5612,5],[5618,11],[5630,7],[5638,9],[5648,7],[5656,5],[5662,10],[5673,1],[5675,7],[5683,2],[5686,14],[5701,9],[5711,4],[5716,5],[5722,3],[5726,11],[5738,3],[5742,8],[5751,10],[5762,12],[5775,8],[5784,5],[5790,2],[5793,10],[5804,6],[5811,9],[5821,20],[5842,23],[5866,16],[5883,2],[5886,6],[5893,5],[5899,6],[5906,6],[5913,6],[5920,15],[5936,2],[5939,6],[5946,5],[5952,18],[5971,2],[5974,6],[5981,27],[6009,2],[6012,9],[6022,1],[6024,3],[6028,11],[6040,7],[6048,12],[6061,9],[6071,9],[6081,8],[6090,7],[6098,6],[6105,7],[6113,39],[6153,7],[6171,1],[6181,11],[6193,1],[6203,14],[6218,1],[6220,13],[6234,12],[6247,1],[6249,13],[6263,5],[6269,1],[6271,13],[6285,15],[6301,1],[6303,5],[6309,20],[6330,1],[6332,5],[6338,7],[6346,11],[6358,11],[6370,14],[6385,3],[6389,6],[6396,6],[6405,9],[6415,3],[6419,6],[6426,3],[6430,8],[6439,10],[6524,14],[6539,6],[6546,5],[6552,6],[6559,8],[6568,5],[6574,12],[6587,8],[6625,33],[6659,40],[6713,2],[6716,5],[6722,5],[6728,5],[6734,6],[6829,23],[6865,2],[6868,3],[6872,12],[6885,5],[6891,25],[6917,2],[6920,6],[6927,8],[6936,8],[6945,12],[6958,14],[6973,6],[6980,5],[6986,6],[6993,8],[7002,5],[7008,12],[7021,8],[7059,33],[7093,47],[7141,8],[7163,2],[7166,5],[7172,5],[7178,5],[7184,6],[7287,7],[7307,7],[7315,2],[7318,3],[7322,9],[7332,2],[7335,6],[7342,8],[7351,6],[7358,4],[7363,7],[7371,2],[7374,11],[7386,6],[7393,6],[7429,33],[7463,95],[7559,27],[7600,2],[7603,5],[7609,5],[7615,5],[7621,6],[7772,27],[7813,2],[7816,9],[7826,7],[7834,7],[7842,6],[7878,33],[7948,28]]},"226":{"position":[[0,5],[6,9],[16,9],[26,7],[34,2],[37,6],[44,8],[53,5],[59,9],[69,4],[74,7],[82,7],[90,2],[93,5],[99,4],[104,9],[114,9],[124,6],[131,1],[133,5],[139,7],[147,7],[155,3],[159,5],[165,12],[178,5],[184,7],[192,5],[198,6],[205,9],[215,9],[225,1],[227,8],[236,5],[242,7],[250,5],[256,5],[262,3],[266,6],[273,1],[275,11],[287,7],[295,12],[308,1],[310,11],[322,5],[328,15],[344,1],[346,15],[362,2],[365,10],[376,7],[384,7],[392,3],[396,8],[405,7],[413,4],[418,7],[426,1],[428,7],[436,3],[440,12],[453,5],[459,10],[470,10],[481,8],[490,3],[494,8],[503,1],[505,7],[513,4],[518,10],[529,9],[539,5],[545,14],[560,10],[571,1],[573,10],[584,15],[600,7],[608,8],[617,9],[627,7],[635,10],[646,1],[648,3],[652,3],[656,6],[663,7],[671,3],[675,12],[688,6],[695,2],[698,10],[709,2],[712,9],[751,33],[785,47],[833,24],[858,30],[889,33],[996,10],[1007,2],[1010,7],[1018,1],[1020,5],[1026,7],[1034,5],[1040,9],[1050,1],[1104,8],[1113,2],[1116,9],[1126,5],[1132,5],[1138,10],[1149,20],[1170,9],[1180,1],[1255,2],[1258,9],[1268,5],[1274,5],[1282,5],[1288,7],[1296,3],[1300,6],[1307,15],[1323,7]]},"228":{"position":[[0,5],[6,7],[14,5],[20,5],[26,9],[36,5],[42,7],[50,1],[52,6],[59,11],[71,11],[83,3],[87,4],[92,5],[98,10],[109,15],[125,7],[133,16],[150,13],[164,1],[166,23],[220,2],[223,13],[237,11],[249,6],[256,2],[259,8],[268,6],[275,10],[286,9],[296,1],[298,6],[305,45],[351,12],[434,15],[460,2],[463,8],[472,9],[482,1],[484,8],[493,2],[496,5],[502,10],[618,27],[646,2],[649,7],[657,6],[664,7],[683,2],[686,8],[705,45],[751,73],[825,27],[863,2],[866,8],[875,9],[885,1],[887,6],[894,1],[896,11],[908,11],[920,45],[1079,7],[1087,12],[1100,9],[1110,9],[1120,11],[1132,6],[1163,9],[1173,7],[1181,6],[1188,7],[1196,7],[1204,6],[1211,12],[1224,7],[1232,5],[1238,2],[1241,3],[1245,3],[1249,9],[1259,9],[1338,27],[1366,7],[1374,3],[1378,6],[1385,6],[1429,1],[1431,7],[1439,6],[1446,10],[1457,4],[1462,6],[1469,1],[1474,1],[1476,11],[1488,9],[1498,5],[1504,8],[1513,2],[1516,10],[1527,9],[1537,9],[1547,7],[1555,9],[1567,4],[1572,6],[1579,6],[1586,2],[1589,9],[1599,8],[1608,5],[1616,3],[1620,7],[1628,6],[1635,2],[1638,9],[1648,8],[1657,5],[1665,10],[1676,7],[1684,8],[1693,3],[1697,7],[1705,5],[1711,10],[1722,8],[1731,6],[1740,10],[1751,7],[1759,8],[1768,3],[1772,7],[1780,6],[1787,10],[1798,8],[1807,6],[1816,10],[1827,7],[1835,8],[1844,3],[1848,7],[1856,6],[1863,10],[1874,8],[1883,10],[1894,8],[1903,5],[1909,2],[1912,6],[1919,5],[1925,8],[1934,16],[1951,6],[1958,7],[1966,3],[1970,5],[1976,5],[1982,15],[1998,7],[2006,32],[2039,7],[2047,10],[2058,6],[2065,1],[2067,9],[2077,8],[2086,6],[2095,12],[2110,7],[2118,8],[2127,11],[2139,5],[2145,9],[2157,6],[2166,3],[2170,10],[2181,6],[2188,9],[2200,6],[2207,2],[2210,12],[2225,5],[2231,11],[2243,1],[2245,8],[2254,3],[2258,6],[2265,5],[2271,8],[2282,6],[2291,8],[2300,6],[2307,6],[2314,3],[2318,12],[2331,12],[2344,1],[2346,55],[2402,30],[2433,7],[2441,6],[2448,17],[2466,19],[2501,51],[2553,11],[2565,54],[2620,18],[2639,43]]},"230":{"position":[[0,3],[4,9],[14,6],[21,4],[26,12],[43,10],[54,8],[63,9],[73,9],[83,3],[87,1],[89,8],[98,3],[102,1],[104,1],[106,7],[114,8],[123,6],[130,14],[145,4],[150,1],[152,5],[158,9],[168,6],[175,18],[196,10],[207,8],[216,10],[227,6],[234,17],[254,10],[265,8],[274,9],[284,6],[291,6],[300,10],[311,6],[318,6],[325,8],[334,15],[350,8],[359,6],[368,10],[379,6],[386,8],[395,15],[411,8],[420,24],[447,10],[458,8],[467,10],[478,6],[485,6],[492,8],[501,15],[517,8],[526,23],[552,10],[563,8],[572,9],[582,6],[589,6],[596,8],[605,15],[621,8],[630,21],[654,6],[661,8],[670,8],[679,2],[682,7],[690,7],[698,15],[714,10],[725,8],[734,16],[753,10],[764,9],[774,10],[785,8],[794,8],[803,9],[813,8],[822,7],[830,15],[848,11],[860,4],[865,2],[868,1],[870,10],[881,7],[889,9],[899,8],[908,7],[916,15],[934,9],[944,8],[953,8],[962,7]]},"232":{"position":[[0,7],[10,9],[20,8],[29,10],[40,7],[48,2],[51,4],[56,27],[86,13],[100,8],[109,9],[119,6],[126,28],[157,13],[171,8],[180,10],[191,6],[198,9],[210,9],[220,11],[232,13],[246,9],[256,1],[258,10],[269,5],[275,8],[284,5],[290,2],[293,14],[308,4],[313,3],[317,1],[319,8],[328,3],[332,1],[334,1],[336,8]]},"234":{"position":[[0,3],[4,13],[18,8],[27,6],[34,7],[42,10],[53,7],[61,9],[71,8],[80,3],[84,5],[90,2],[93,6],[100,12]]},"236":{"position":[[0,5],[6,7],[14,1],[16,6],[23,6],[30,9],[40,9],[50,6],[59,8],[68,4],[73,1],[75,11],[87,3],[91,4],[96,5],[110,3],[114,10],[125,5],[131,1],[133,10],[144,4],[149,3],[153,11],[165,6],[172,5],[178,7],[186,5],[192,14],[207,4],[212,5],[218,7],[226,1],[228,5],[234,7],[242,2],[245,9],[255,11],[267,3],[271,4],[276,6],[283,7],[291,4],[296,5],[302,10],[313,7],[321,2],[324,3],[328,4],[333,6],[340,5],[346,7],[354,4],[359,5],[365,10],[376,6],[383,2],[386,6],[393,3],[397,5],[403,6],[410,5],[416,5],[422,9],[432,13],[446,11],[458,6],[465,8],[474,17],[492,7],[500,37],[538,2],[541,13],[555,10],[566,3],[570,11],[582,5],[588,7],[596,48],[645,2],[648,13],[662,10],[673,3],[677,6],[684,6],[691,23],[715,21],[737,2],[740,13],[754,10],[765,3],[769,6],[776,6],[783,23],[807,1],[809,5],[815,8],[824,6],[831,5],[837,11],[849,1],[851,10],[862,6],[869,9],[879,4],[884,4],[889,10],[900,5],[906,15],[922,11],[934,7],[942,1],[944,10],[955,13],[969,6],[976,4],[981,1],[983,7],[991,29],[1021,1],[1023,28],[1052,3],[1056,10],[1067,6],[1074,9],[1084,12],[1097,5],[1103,6],[1110,10],[1121,3],[1125,9],[1135,7],[1143,48],[1238,5],[1244,10],[1255,5],[1261,9],[1271,4],[1276,5],[1282,5],[1288,3],[1292,5],[1298,9],[1308,1],[1310,3],[1314,9],[1324,21],[1346,34],[1427,10],[1438,1],[1440,10],[1451,13],[1465,5],[1471,1],[1473,2],[1476,6],[1483,3],[1487,6],[1494,7],[1502,6],[1509,9],[1519,3],[1523,5],[1529,2],[1532,5],[1538,8],[1547,5],[1553,6],[1560,10],[1571,7],[1579,14],[1594,3],[1598,14],[1613,9],[1623,9],[1633,7],[1641,48],[1690,2],[1693,13],[1707,10],[1718,3],[1722,6],[1729,6],[1736,10],[1747,3],[1751,6],[1758,4],[1763,5],[1769,5],[1775,11],[1787,1],[1789,5],[1795,11],[1807,7],[1815,5],[1821,8],[1830,2],[1833,9],[1843,7],[1851,6]]},"238":{"position":[[0,1],[2,9],[12,8],[21,12],[34,1],[36,10],[47,11],[59,10],[70,4],[75,11],[87,5],[93,2],[96,9],[106,2],[109,6],[116,1],[118,10],[129,10],[140,12],[153,10],[164,11],[176,10],[187,9],[197,6],[204,2],[207,7],[215,5],[221,6],[228,10],[239,1],[241,8],[250,8],[259,3],[263,8],[272,9],[282,7],[290,5],[296,7],[304,8],[313,8],[322,8],[331,7],[339,3],[343,3],[347,9],[357,5],[363,3],[367,11],[379,5],[385,7],[393,5],[399,25],[425,8],[434,5],[440,3],[444,11],[456,1],[458,2],[461,8],[470,3],[474,9],[484,7],[492,6],[499,7],[507,2],[510,5],[520,6],[527,9],[537,6],[544,12],[557,4],[562,6],[569,7],[577,1],[579,10],[590,6],[597,5],[603,5],[609,6],[616,10],[627,7],[635,4],[640,4],[645,2],[648,10],[663,9],[673,6],[680,7],[688,48],[737,2],[740,13],[754,3],[758,11],[770,5],[776,7],[784,59],[844,2],[847,13],[861,3],[865,4],[870,6],[877,6],[884,23],[908,32],[941,2],[944,13],[958,3],[962,4],[967,6],[974,6],[981,23],[1005,46],[1052,2],[1055,9],[1065,1],[1067,11],[1079,23],[1103,8],[1112,2],[1115,10],[1126,11],[1138,1],[1140,10],[1151,1],[1153,9],[1163,3],[1167,9],[1177,1],[1179,7],[1191,7],[1199,1],[1201,6],[1208,9],[1218,9],[1228,10],[1239,7],[1247,6],[1254,9],[1264,1],[1266,7],[1274,7],[1282,6],[1289,9],[1299,3],[1303,5],[1309,2],[1312,12],[1325,8],[1334,8],[1343,1],[1345,6],[1352,8],[1361,6],[1368,7],[1376,9],[1386,8],[1395,9],[1405,2],[1408,12],[1421,6],[1428,5],[1434,5],[1440,6],[1447,8],[1456,8],[1465,1],[1467,6],[1474,6],[1481,9],[1491,10],[1502,6],[1509,6],[1516,7],[1524,4],[1529,7],[1537,6],[1544,1],[1546,7],[1554,2],[1557,2],[1560,6],[1567,2],[1570,5],[1576,10],[1587,5],[1593,5],[1599,8],[1608,9],[1618,2],[1621,6],[1628,6],[1635,13],[1649,8],[1658,5],[1664,5],[1670,7],[1678,9],[1688,19],[1708,7],[1716,12],[1729,1],[1731,32],[1764,14],[1779,9],[1789,22],[1812,7],[1820,12],[1833,1],[1835,32],[1868,14],[1883,9],[1893,17],[1911,7],[1919,11],[1931,1],[1933,32],[1966,14],[1981,9],[1991,6],[1998,7],[2006,6],[2013,1],[2015,32],[2048,14],[2063,3],[2067,10],[2078,7],[2086,6],[2093,5],[2099,5],[2105,12],[2120,6],[2127,4],[2132,11],[2144,5],[2150,6],[2157,6],[2164,9],[2174,8],[2183,8],[2192,12],[2207,6],[2214,4],[2219,11],[2231,5],[2237,7],[2245,11],[2257,1],[2259,6],[2268,6],[2275,4],[2280,11],[2292,5],[2298,5],[2304,6],[2311,10]]},"240":{"position":[[0,3],[4,10],[15,9],[25,13],[39,5],[45,24],[70,3],[74,10],[85,5],[91,4],[96,7],[104,4],[109,5],[115,7],[123,9],[133,2],[136,7],[144,13],[158,1],[160,3],[164,10],[175,10],[186,10],[197,9],[207,4],[212,5],[218,8],[227,1],[229,8]]},"242":{"position":[[10,3],[14,10],[25,12],[38,1],[40,8],[49,8],[58,6],[65,7],[73,8],[82,1],[84,8],[93,5],[99,2],[102,9],[112,9],[122,6],[129,3],[133,7],[141,2],[144,9],[170,6],[177,5],[183,5],[189,6],[196,5],[202,7],[210,10],[221,5],[227,5],[233,2],[236,6],[243,11],[255,8],[264,4],[269,6],[276,4],[281,3],[285,12],[298,1],[300,13],[322,6],[329,12]]},"244":{"position":[[0,5],[6,5],[12,5],[18,8],[27,8],[36,8],[45,9],[55,11],[67,6],[74,16],[91,2],[94,1],[96,6],[105,10],[116,4],[121,5],[127,7],[135,6],[142,3],[146,2],[149,10],[160,1],[162,6],[169,11],[181,1],[183,4],[188,11],[200,11],[212,6],[219,17],[237,11],[249,5],[255,20],[276,7],[284,11],[296,6],[303,10],[314,1],[316,6],[323,8],[332,7],[340,9],[350,21],[372,7],[380,2],[383,11],[395,6],[402,7],[410,2],[413,11],[425,6],[432,9],[442,5],[448,6],[455,11],[467,38],[506,8],[515,2],[518,5],[526,11],[538,6],[545,25],[571,2],[574,11],[586,3],[590,11],[602,9],[612,3],[616,11],[628,6],[635,26],[662,12],[675,2],[678,5],[684,5],[690,7],[698,13],[712,5],[718,26],[745,18],[764,1],[766,9],[776,2],[779,8],[788,11],[800,2],[803,9],[813,4],[818,11],[830,2],[833,4],[838,10],[849,6],[856,45],[902,2],[905,4],[910,9],[920,5],[926,3],[930,11],[942,10],[953,6],[960,42],[1003,8],[1012,2],[1015,8],[1024,2],[1027,4],[1032,9],[1042,5],[1048,3],[1052,11],[1064,9],[1074,6],[1081,33],[1115,8],[1124,25],[1150,30],[1181,14],[1196,9],[1206,10],[1217,7],[1225,2],[1228,4],[1233,8],[1242,14],[1257,1],[1259,3],[1263,13],[1277,3],[1281,9],[1291,5],[1297,5],[1303,7],[1311,5],[1317,19],[1337,10],[1348,7],[1356,3],[1360,7],[1368,9],[1378,6],[1385,3],[1389,8],[1398,7],[1406,7],[1414,2],[1417,10],[1428,5],[1434,7],[1442,1],[1444,3],[1448,2],[1451,5],[1457,9],[1467,5],[1473,2],[1476,8],[1485,6],[1492,3],[1496,9],[1506,14],[1521,2],[1524,6],[1531,6],[1538,6],[1545,6],[1552,6],[1559,7],[1567,11],[1579,1],[1581,9],[1591,6],[1598,11],[1610,5],[1616,6],[1623,6],[1630,8],[1639,2],[1642,10],[1653,16],[1670,6],[1677,1],[1679,12],[1692,7],[1700,9],[1710,11],[1722,12],[1737,4],[1742,11],[1754,2],[1757,4],[1762,10],[1773,9],[1783,6],[1790,22],[1815,4],[1820,11],[1832,2],[1835,7],[1843,21],[1867,4],[1872,11],[1884,2],[1887,7],[1895,21],[1917,9],[1927,13],[1941,5],[1947,1],[1949,6],[1956,9],[1966,9],[1976,10],[1987,5],[1993,7],[2001,7],[2009,5],[2015,14],[2030,7],[2038,12],[2051,10],[2062,11],[2076,4],[2081,11],[2093,1],[2095,10],[2106,8],[2115,8],[2124,6],[2131,24],[2158,6],[2165,9],[2175,6],[2182,5],[2188,7],[2196,5],[2202,3],[2206,9],[2216,1],[2218,7],[2230,6],[2239,15],[2255,3],[2259,11],[2271,2],[2274,10],[2285,12],[2300,8],[2309,5],[2315,5],[2321,6],[2328,1],[2330,10],[2341,11],[2353,9],[2363,12],[2376,7],[2384,5],[2392,10],[2403,5],[2409,5],[2415,5],[2421,10],[2432,5],[2438,6],[2445,5],[2453,10],[2464,5],[2470,5],[2476,5],[2482,10],[2493,5],[2499,6]]},"246":{"position":[[0,6],[7,1],[9,7],[17,9],[27,8],[36,10],[47,5],[53,15],[69,4],[74,5],[80,10],[91,5],[97,6],[104,17],[126,2],[129,13],[143,10],[154,1],[156,6],[163,16],[180,9],[190,11],[202,14]]},"248":{"position":[[0,11],[12,6],[19,1],[21,9],[31,7],[39,5],[45,9],[55,2],[58,9],[68,7],[76,10],[87,9],[97,8],[106,6],[113,8],[122,6],[129,1],[131,14],[146,4],[151,6],[158,8],[167,2],[170,7],[178,6],[185,1],[187,7]]},"250":{"position":[[0,3],[4,3],[8,10],[19,1],[21,6],[28,1],[38,6],[45,7],[53,4],[58,2],[61,9],[71,9],[81,8],[90,7],[98,7],[106,9],[116,8],[125,8],[134,1],[136,9],[146,10],[157,9],[167,5],[173,8],[182,1],[184,5],[190,6],[197,2],[200,5],[206,6],[213,2],[216,3],[220,2],[223,4],[228,1],[230,3],[234,2],[237,15],[253,8],[262,9],[272,6],[279,10],[290,2],[293,9],[303,11],[315,9],[325,5],[331,29],[363,9],[373,9],[383,5],[389,1],[391,9],[401,9],[411,42],[456,9],[466,9],[476,13],[490,5],[496,12],[509,10],[520,42],[565,9],[575,9],[585,13],[599,5],[605,12],[618,9],[628,6],[635,30],[668,9],[678,9],[688,6],[695,9],[705,5],[711,37],[751,9],[761,9],[771,8],[780,13],[794,7],[802,8],[811,6],[818,4],[823,5],[829,3],[833,6],[840,14],[855,6],[862,2],[865,11],[877,8],[886,5],[892,4],[897,7],[905,6],[912,3],[916,8],[925,14],[974,9],[984,9],[997,5],[1003,37],[1043,9],[1053,9],[1063,5],[1069,8],[1078,31],[1112,7],[1120,6],[1127,2],[1130,4],[1135,6],[1142,11],[1154,14],[1169,4],[1174,28],[1205,9],[1215,9],[1225,4],[1230,1],[1232,9],[1242,9],[1252,29],[1284,9],[1294,9],[1304,5],[1310,36],[1349,9],[1359,9],[1369,4],[1374,1],[1376,7],[1384,7],[1392,8],[1401,1],[1403,12],[1416,10],[1427,12],[1440,9],[1450,7],[1483,7],[1493,5],[1499,12],[1512,4],[1517,1],[1519,9],[1529,13],[1543,11],[1555,1],[1559,5],[1565,36],[1604,9],[1614,9],[1624,4],[1629,1],[1631,7],[1639,7],[1647,8],[1656,1],[1658,12],[1671,10],[1682,11],[1694,9],[1704,7],[1737,7],[1747,5],[1753,12],[1766,4],[1771,1],[1773,9],[1783,12],[1800,5],[1806,12],[1819,33],[1855,9],[1865,9],[1875,5],[1881,7],[1889,6],[1896,9],[1906,1],[1908,12],[1921,10],[1932,12],[1945,9],[1955,7],[1963,24],[1991,7],[2001,5],[2007,12],[2020,4],[2025,1],[2027,9],[2037,6],[2044,4],[2049,1],[2053,5],[2059,30],[2092,9],[2102,9],[2112,5],[2118,7],[2126,6],[2133,9],[2143,1],[2145,12],[2158,10],[2169,11],[2181,9],[2191,7],[2199,21],[2224,7],[2234,5],[2240,12],[2253,4],[2258,1],[2260,9],[2270,5],[2280,5],[2286,5],[2292,6],[2299,30],[2332,10],[2343,9],[2353,6],[2360,9],[2370,10],[2381,2],[2384,17],[2402,6],[2409,40],[2452,10],[2463,9],[2473,8],[2482,2],[2485,10],[2496,6],[2503,17],[2521,1],[2523,29],[2563,7],[2571,60],[2632,44],[2679,10],[2690,9],[2700,8],[2709,12],[2722,8],[2731,4],[2736,1],[2738,67],[2806,2],[2809,5],[2815,8],[2824,8],[2833,5],[2839,8],[2848,9],[2858,4],[2863,1],[2865,69],[2935,2],[2938,3],[2942,3],[2946,7],[2954,10],[2965,9],[2975,3],[2979,6],[2986,1],[2988,8],[2997,48],[3048,10],[3059,9],[3069,16],[3086,8],[3095,8],[3104,4],[3109,1],[3111,70],[3182,2],[3185,5],[3191,8],[3200,8],[3209,5],[3215,8],[3224,9],[3234,4],[3239,1],[3241,71],[3313,2],[3316,3],[3320,3],[3324,7],[3332,10],[3343,9],[3353,3],[3357,6],[3364,1],[3366,8],[3375,26],[3404,9],[3414,14],[3429,7],[3437,10],[3448,9],[3458,6],[3465,2],[3468,4],[3473,9],[3483,8],[3492,11],[3510,3],[3518,33],[3552,3],[3558,9],[3568,9],[3578,3],[3582,7],[3592,9],[3602,9],[3612,7],[3620,3],[3626,9],[3636,9],[3646,3],[3650,8],[3661,9],[3671,9],[3681,8],[3690,3],[3696,9],[3706,9],[3716,3],[3720,5],[3728,9],[3738,9],[3748,5],[3754,37],[3792,12],[3807,9],[3817,9],[3827,12],[3840,8],[3849,3],[3855,9],[3865,9],[3875,3],[3879,8],[3888,3],[3894,9],[3904,9],[3914,3],[3918,8],[3927,34],[3962,10],[3975,9],[3985,9],[3995,5],[4001,11],[4013,5],[4019,3],[4025,9],[4035,9],[4045,8],[4054,3],[4058,5]]},"252":{"position":[[0,8],[9,8],[20,11],[32,8],[41,1],[43,11],[55,11],[67,7],[75,12],[88,5],[94,3],[98,5],[104,6],[111,13],[125,5],[131,2],[134,2],[137,5],[143,2],[146,10],[157,29],[189,7],[197,5],[203,7],[211,11],[223,3],[227,5],[233,5],[239,13],[253,5],[259,1],[261,50],[312,2],[315,2],[318,9],[328,9],[338,5],[344,1],[346,52],[399,2],[402,2],[405,9],[415,5],[421,9],[431,15],[447,1],[449,28],[478,36],[515,1],[517,7],[525,5],[531,1],[533,51],[585,1],[587,1],[589,17],[607,2],[610,6],[617,1],[619,6],[626,21],[648,1],[650,6],[657,30],[690,7],[698,5],[704,8],[713,5],[719,1],[721,54],[776,2],[779,2],[782,9],[792,9],[802,5],[808,1],[810,56],[867,2],[870,2],[873,9],[883,5],[889,9],[899,28],[930,7],[938,5],[944,6],[951,11],[963,3],[967,5],[973,5],[979,13],[993,5],[999,1],[1001,52],[1054,2],[1057,2],[1060,9],[1070,9],[1080,5],[1086,1],[1088,54],[1143,2],[1146,2],[1149,9],[1159,5],[1165,9],[1175,21],[1199,7],[1207,5],[1213,6],[1220,2],[1223,9],[1233,3],[1237,4],[1242,5],[1248,1],[1250,58],[1309,5],[1315,1],[1317,27],[1345,46],[1392,5],[1398,1],[1400,27],[1428,43],[1472,31],[1504,2],[1507,5],[1513,6],[1520,9],[1530,3],[1534,34],[1569,1],[1571,7],[1579,8],[1588,2],[1591,6],[1598,7],[1606,6],[1613,14],[1628,4],[1633,1],[1635,12],[1648,12],[1661,11],[1673,10],[1684,1],[1686,5],[1692,10],[1703,5],[1709,9],[1719,6],[1726,5],[1732,6],[1739,6],[1746,1],[1748,10],[1759,3],[1763,13],[1777,6],[1784,11],[1796,2],[1799,1],[1801,5],[1807,8],[1816,8],[1825,8],[1834,6],[1841,4],[1848,6],[1855,1],[1857,24],[1882,13],[1896,8],[1905,15],[1921,8],[1930,11],[1942,5],[1948,7],[1956,8],[1965,6],[1972,2],[1975,6],[1982,3],[1986,5],[1992,10],[2003,1],[2005,8],[2014,8],[2023,2],[2026,9],[2036,8],[2045,8],[2054,5],[2060,9],[2070,6],[2077,1],[2079,7],[2087,1],[2089,7],[2097,2],[2100,2],[2103,9],[2113,5],[2119,11],[2131,1],[2133,59],[2193,20],[2214,16],[2231,26],[2258,26],[2285,3],[2289,3],[2293,1],[2297,2],[2302,4],[2307,28],[2336,16],[2353,19],[2426,25],[2500,20],[2521,31],[2553,1],[2555,38],[2594,11],[2606,7],[2614,23]]},"254":{"position":[[0,6],[7,1],[9,8],[18,7],[26,1],[28,9],[38,6]]},"256":{"position":[[0,24],[27,7],[35,5],[41,5],[47,7],[55,5],[61,6],[68,5],[74,5],[80,38],[121,10],[132,3],[136,6],[143,6],[150,2],[153,9],[163,10],[174,5],[180,4],[185,4],[190,5],[196,6]]},"259":{"position":[[0,5],[6,6],[13,5],[19,11],[31,1],[33,58],[92,6],[99,11],[111,1],[113,60],[174,10],[185,11],[197,20],[218,16],[235,17],[253,26],[280,89],[370,8],[379,26],[406,3],[415,1],[419,2],[458,4],[463,28],[492,16],[509,19],[582,25],[656,20],[677,31],[709,1],[711,38],[750,11],[762,6],[769,1],[771,23]]},"261":{"position":[[0,7],[8,20],[29,13],[43,1],[45,13],[59,7],[67,8],[76,1],[78,37],[116,7],[124,26],[189,32],[275,35],[362,38],[401,23],[425,1],[431,49],[481,20],[502,1],[504,25],[530,32],[619,26],[646,5],[652,10],[663,29],[693,3],[697,3],[701,1],[705,2],[746,4],[751,41],[793,11],[805,7],[813,9],[823,12],[836,7],[844,28],[873,7],[881,8],[890,1],[892,5],[898,12],[911,33],[950,1],[952,1],[954,36],[991,35],[1027,29],[1057,40],[1098,44],[1143,7],[1156,26],[1221,27],[1249,10],[1260,30],[1291,27],[1394,37],[1473,37],[1552,40],[1593,66],[1660,38],[1699,4],[1704,31],[1736,73],[1810,29],[1882,31],[1952,7],[1960,9],[1970,12],[1983,7],[2016,11],[2028,1],[2030,7],[2038,7],[2046,6],[2053,1],[2055,5],[2061,17],[2079,16],[2096,13],[2110,26],[2137,12],[2150,1],[2191,1],[2193,7],[2201,22],[2224,1],[2226,7],[2234,19],[2254,1],[2332,30],[2363,1],[2365,12],[2378,7],[2444,7],[2452,8],[2461,12]]},"264":{"position":[[0,5],[6,10],[17,6],[24,3],[28,11],[40,7],[48,14],[63,5],[69,2],[72,7],[80,6],[87,9],[97,6],[104,10],[115,8],[124,6],[131,1],[133,7],[141,2],[144,9],[154,1],[156,13],[170,8],[179,8],[188,10],[199,5],[205,1],[207,6],[214,2],[217,7],[225,8],[234,5],[240,8],[249,11],[261,4],[266,2],[269,11],[286,2],[289,10],[300,7],[308,7],[316,5],[322,3],[326,9]]},"266":{"position":[[0,2],[3,3],[7,11],[19,5],[25,4],[30,7],[42,3],[46,13],[60,1],[62,7],[70,4],[75,11],[87,12],[100,1],[102,10],[113,1],[115,8],[124,7],[141,5],[147,1],[149,13],[171,7],[179,1],[181,11],[193,3],[197,5],[203,4],[208,3],[212,9],[222,11],[234,3],[238,1],[240,10],[251,7],[259,9],[269,2],[272,6],[279,1],[281,7],[289,4],[294,9],[304,2],[307,6],[314,8],[323,1],[325,6],[332,2],[335,11],[347,7],[355,3],[359,7],[367,5],[373,10],[384,12],[397,10],[408,7],[416,10],[427,7],[435,5],[441,6],[448,1],[450,10],[461,7],[469,1],[471,2],[474,16],[491,7],[499,3],[518,3],[522,5],[528,3],[532,6],[539,8],[548,5],[568,9],[578,5],[584,9],[594,7],[602,10],[613,9],[623,1],[625,13],[639,20],[660,3],[664,7],[672,5],[678,9],[688,7],[696,5],[702,10],[713,5],[719,11],[731,6],[738,7],[746,8],[755,7],[763,3],[767,3],[771,1],[788,6],[795,1],[797,6],[804,10],[815,7],[823,5],[829,6],[836,8],[845,6],[852,4],[857,11],[883,9],[893,21],[915,7],[923,14],[938,11],[950,2],[953,5],[959,14],[974,3],[978,8],[987,9],[997,3],[1001,5],[1007,3],[1011,10],[1022,7],[1030,10],[1041,6],[1048,7],[1056,5],[1062,13],[1076,4],[1081,1],[1083,16],[1100,3],[1104,1],[1106,6],[1113,20],[1148,9],[1158,21],[1180,7],[1188,33],[1222,14],[1237,9],[1247,10],[1258,7],[1266,14],[1281,2],[1284,11],[1296,6],[1303,8],[1312,6],[1319,8],[1328,2],[1331,8],[1340,5],[1346,7],[1354,11],[1366,9],[1376,5],[1382,1],[1384,11],[1396,2],[1399,10],[1410,11],[1422,6],[1429,10],[1442,14],[1457,6],[1464,1],[1466,10],[1477,1],[1479,6],[1486,8],[1495,1],[1497,7],[1505,7],[1513,32],[1546,2],[1549,9],[1559,4],[1564,8],[1573,1],[1575,8],[1584,6],[1591,2],[1594,4],[1599,5],[1605,5],[1611,3],[1615,9],[1625,3],[1629,5],[1635,6],[1642,7],[1650,8],[1659,8],[1668,6],[1675,8],[1684,3],[1690,1],[1694,1],[1713,9],[1723,10],[1734,7],[1742,17],[1760,1],[1764,1],[1769,2],[1774,35],[1810,2],[1826,2],[1831,14],[1846,4],[1851,9],[1861,12],[1874,3],[1878,7],[1888,1],[1892,4],[1897,5],[1903,4],[1908,5],[1914,6],[1921,2],[1924,6],[1931,14],[1946,9],[1956,8],[1965,11],[1977,10],[1988,10],[1999,3],[2003,5],[2009,9],[2019,35],[2055,10],[2066,3],[2070,17],[2088,5],[2096,1],[2098,7],[2106,11],[2118,11],[2130,10],[2141,8],[2150,12],[2163,2],[2166,6],[2173,16],[2190,4],[2195,2],[2198,5],[2204,11],[2216,9],[2226,13],[2240,2],[2243,3],[2247,8],[2256,8],[2265,7],[2273,4],[2278,4],[2283,12],[2296,2],[2299,5],[2305,9],[2315,11],[2327,7],[2335,13],[2349,1],[2351,6],[2358,1],[2360,13],[2374,7],[2382,5],[2388,9],[2398,3],[2402,6],[2409,5],[2415,3],[2419,3],[2423,7],[2431,8],[2440,1],[2442,7],[2450,5],[2456,10],[2467,2],[2470,7],[2478,5],[2484,1],[2486,13],[2500,1],[2502,7],[2510,4],[2515,5],[2521,10],[2532,4],[2537,1],[2539,5],[2545,9],[2555,8],[2575,2],[2589,1],[2591,3],[2595,3],[2599,10],[2610,2],[2613,4],[2618,3],[2622,7],[2630,4],[2635,6],[2642,1],[2644,2],[2647,7],[2655,9],[2665,2],[2668,7],[2676,5],[2682,3],[2686,10],[2697,3],[2701,5],[2707,9],[2717,6],[2724,8],[2733,9],[2743,3],[2747,5],[2753,5],[2759,6],[2766,9],[2776,6],[2797,9],[2807,21],[2829,7],[2837,7],[2845,25],[2938,1],[2981,1],[2983,14],[2998,9],[3008,23],[3032,14],[3047,10],[3058,7],[3066,17],[3084,1],[3086,13],[3100,1],[3102,14],[3117,35],[3153,18],[3172,14],[3187,3],[3191,11],[3203,11],[3215,10],[3226,1],[3228,8],[3237,6],[3244,4],[3249,6],[3256,5],[3262,9],[3272,9],[3282,10],[3293,5],[3299,3],[3303,7],[3311,9],[3321,1],[3323,9],[3333,4],[3338,2],[3341,13],[3355,4],[3360,11],[3372,5],[3378,5],[3384,8],[3393,9],[3417,9],[3427,23],[3451,14],[3466,10],[3477,7],[3485,17],[3503,1],[3505,13],[3519,1],[3521,14],[3536,35],[3572,12],[3585,17],[3603,8],[3612,18],[3631,14],[3646,10],[3657,1],[3659,6],[3666,13],[3680,7],[3688,9],[3698,11],[3710,1],[3712,9],[3722,5],[3728,2],[3731,7],[3739,6],[3746,7],[3754,1],[3756,8],[3765,5],[3771,8],[3780,5],[3786,3],[3790,5],[3796,10],[3807,7],[3815,7],[3823,6],[3830,6],[3837,5],[3843,6],[3850,8],[3859,8],[3907,5],[3913,4],[3918,5],[3924,5],[3930,7],[3938,7],[3946,2],[3949,3],[3953,2],[3956,8]]},"268":{"position":[[10,3],[14,10],[25,3],[45,7],[53,10],[64,8],[73,1],[75,6],[82,8]]},"270":{"position":[[15,6],[29,3],[33,6]]},"273":{"position":[[0,7],[8,5],[14,6],[21,8],[30,2],[33,6],[40,10],[51,13],[65,1],[67,8],[90,1],[92,4],[97,7],[105,1],[107,11],[119,3],[123,1],[136,11],[148,6],[155,10],[166,1],[178,11],[190,15],[206,6],[213,10],[224,1],[226,12],[239,9],[249,12],[262,1],[264,13],[278,7],[286,1],[288,10],[299,10],[310,5],[316,1],[318,6],[325,2],[328,7],[336,8],[345,7],[353,5],[359,10],[370,1],[372,9],[382,7],[390,5],[396,3],[400,8],[409,10],[420,6],[427,13],[441,10],[452,6]]},"275":{"position":[[0,7],[8,5],[14,6],[21,4],[26,2],[29,12],[42,7],[50,2],[53,9],[63,5],[69,12],[82,13],[96,6],[103,6],[110,13],[124,2],[127,2],[130,9],[140,7],[148,13],[162,10],[173,9],[183,11],[199,6],[206,8],[217,7],[225,1],[227,5],[233,6],[240,9],[250,6],[257,13],[271,8],[280,9],[290,5],[296,3],[300,14],[315,9],[325,1],[327,11],[339,3],[343,10],[354,7],[362,8],[371,12],[384,7]]},"277":{"position":[[0,7],[8,10],[25,6],[32,9],[42,1],[44,12],[57,7],[65,1],[67,10],[78,10],[89,5],[95,1],[97,6],[104,2],[107,7],[115,8],[124,6]]},"279":{"position":[[0,7],[8,5],[14,9],[24,16],[41,9],[51,6],[66,11],[78,1],[80,13],[94,7],[102,9],[131,8],[140,4],[145,2],[148,13],[164,9],[174,10],[185,4],[190,1],[192,9],[202,6],[209,1],[211,8],[220,7],[228,9],[238,6],[245,15],[261,4],[266,1],[268,6],[275,11],[287,1],[289,6],[296,6],[303,9],[388,7],[396,12],[413,8],[426,9],[436,6],[443,9],[453,7],[461,9],[473,3],[477,7],[485,8],[494,12],[507,5],[513,11],[525,7],[533,3],[537,25],[563,2],[566,8],[575,13],[589,6],[596,7],[604,6],[611,1],[613,4],[618,2],[621,8],[630,9],[640,8],[649,9],[659,1],[661,14],[676,7],[684,9],[694,8],[703,1],[705,57],[763,24],[788,10],[799,2],[802,13],[816,8],[825,9],[835,10],[846,15],[862,2],[865,10],[876,9],[886,5],[892,16],[909,2],[912,10],[923,9],[933,6],[940,16],[957,2],[960,7],[968,10],[979,7],[987,17],[1005,2],[1008,7],[1016,10],[1027,7],[1035,25],[1061,2],[1064,11],[1076,8],[1085,2],[1088,6],[1095,1],[1097,9],[1107,6],[1114,9],[1124,17],[1142,2],[1145,9],[1155,6],[1162,9],[1172,6],[1179,16],[1196,5],[1202,22],[1225,11],[1237,2],[1240,7],[1248,10],[1259,6],[1266,2],[1269,11],[1281,11],[1293,15],[1309,2],[1312,10],[1323,9],[1333,5],[1339,12],[1352,8],[1361,9],[1371,1],[1373,14],[1388,7],[1396,9],[1406,26],[1433,29],[1463,2],[1466,10],[1477,3],[1481,4],[1486,9],[1496,10],[1507,30],[1538,2],[1541,10],[1552,3],[1556,5],[1562,9],[1572,9],[1582,30],[1613,2],[1616,10],[1627,3],[1631,5],[1637,9],[1647,9],[1657,31],[1689,2],[1692,10],[1703,3],[1707,6],[1714,9],[1724,10],[1769,2],[1772,10],[1783,3],[1787,9],[1797,5],[1803,8],[1812,5],[1818,5],[1868,2],[1871,10],[1882,3],[1886,5],[1892,2],[1895,6],[1902,6],[1909,8],[1975,2],[1978,1],[1980,5],[1986,11],[1998,7],[2006,7],[2014,7],[2022,4],[2027,5],[2033,4],[2038,2],[2041,11],[2053,3],[2057,13],[2071,7],[2079,10],[2090,9],[2100,8],[2109,9],[2119,1],[2121,11],[2133,9],[2143,8],[2152,8],[2161,1],[2163,41],[2205,18],[2224,1],[2226,10],[2237,13],[2251,1],[2253,31],[2285,14],[2300,1],[2302,33],[2336,14],[2351,1],[2353,53],[2407,15],[2423,1],[2425,54],[2480,12],[2493,1],[2495,27],[2523,18],[2542,1],[2544,53],[2598,5],[2604,22],[2627,12],[2640,17],[2658,1],[2660,45],[2706,51],[2758,6],[2765,1],[2767,16],[2784,3],[2788,7],[2796,9],[2806,13],[2820,2],[2823,3],[2827,7],[2835,7],[2843,11],[2855,1],[2857,58],[2916,35],[2952,11],[2964,27],[2992,28],[3021,28],[3050,29],[3080,37],[3118,29],[3148,27],[3176,5],[3182,22],[3205,12],[3218,27],[3246,8],[3255,1],[3257,23],[3281,6],[3288,7],[3296,2],[3299,14],[3314,7],[3322,10],[3333,2],[3336,8],[3345,12],[3358,4],[3363,10],[3374,1],[3376,9],[3386,3],[3390,14],[3405,5],[3411,7],[3419,12],[3432,9],[3442,4],[3447,5],[3453,6],[3460,11],[3472,8],[3481,1],[3483,6],[3490,6],[3497,2],[3500,3],[3504,3],[3508,13],[3522,6],[3529,2],[3532,3],[3536,4],[3541,7],[3549,9],[3559,5],[3565,1],[3567,3],[3571,8],[3580,8],[3589,1],[3591,9],[3601,6],[3608,9],[3618,5],[3624,6],[3631,8],[3640,6],[3647,6],[3654,2],[3657,6],[3664,2],[3667,8],[3676,11],[3688,9],[3698,1],[3700,13],[3714,5],[3720,3],[3724,1],[3726,3],[3730,5],[3736,10],[3747,13],[3761,8],[3770,1],[3772,12],[3785,12],[3798,14],[3813,10]]},"281":{"position":[[0,7],[8,9],[18,8],[27,2],[30,4],[35,8],[44,9],[54,5],[60,9],[70,11],[82,3],[86,4],[91,3],[95,7],[103,11],[115,9],[125,7],[133,10],[144,6],[151,6],[158,4],[163,19],[183,10],[194,3],[198,4],[203,2],[206,7],[214,3],[218,5],[224,7],[232,7],[240,1],[242,4],[247,7],[255,9],[265,1],[267,7],[275,14],[290,4],[295,3],[299,6],[306,7],[314,9],[324,9],[334,4],[339,6],[346,8],[355,8],[364,1],[366,15],[382,11],[399,1],[404,3],[408,5],[414,11],[426,1],[428,4],[433,6],[440,10],[451,5],[457,7],[465,1],[475,8],[484,11],[496,8],[505,14],[520,5],[526,34],[561,11],[573,8],[627,8],[636,7],[644,6],[695,8],[704,7],[712,1],[719,8],[761,1],[763,5],[769,6],[776,5],[786,11],[798,2],[801,7],[809,10],[820,3],[824,11],[836,5],[842,5],[848,6],[855,1],[857,8],[866,9],[876,1],[878,10],[889,10],[900,5],[906,6],[913,10],[924,1],[926,7],[934,2],[937,10],[948,9],[962,9],[972,1],[974,2],[977,8],[986,1],[988,2],[991,7],[999,8],[1008,12],[1021,5],[1027,7],[1035,7],[1043,1],[1045,11],[1057,6],[1068,2],[1071,10],[1082,11],[1094,9],[1104,10],[1115,9],[1125,4],[1130,5],[1136,3],[1140,8],[1149,14],[1164,5],[1170,6],[1177,4],[1182,6],[1189,2],[1192,8],[1201,10],[1212,14],[1227,3],[1231,3],[1235,8],[1244,11],[1256,2],[1259,11],[1271,10],[1282,7],[1290,5],[1296,8],[1305,6],[1312,1],[1314,12],[1327,10],[1338,9],[1348,3],[1352,11],[1364,6],[1371,10],[1382,1],[1384,6],[1391,6],[1398,2],[1401,13],[1415,7],[1423,5],[1429,6],[1436,6],[1443,20],[1464,6],[1471,9],[1481,9],[1491,2],[1494,11],[1506,10],[1517,3],[1521,9],[1531,7],[1539,11],[1551,1],[1553,6],[1560,5],[1566,5],[1572,2],[1575,8],[1584,1],[1586,7],[1594,6],[1601,7],[1609,18]]},"283":{"position":[[0,3],[4,4],[9,5],[15,5],[21,6],[28,12],[41,1],[43,9],[53,6],[60,7],[68,13],[82,6],[89,2],[92,12],[105,1],[107,6],[114,17],[132,11],[144,7],[152,1],[154,8],[163,13],[177,1],[179,5],[185,2],[188,7],[196,1],[198,4],[203,3],[207,2],[210,11],[222,7],[230,4],[235,1],[237,15],[253,5],[259,11],[271,5],[277,2],[280,3],[284,11],[296,1],[298,6],[305,13],[319,13],[333,6],[340,3],[344,7],[352,5],[358,2],[361,9],[371,1],[373,16],[390,6],[397,1],[399,11],[411,6],[420,3],[424,12],[437,3],[441,4],[446,3],[450,8],[459,6],[466,1],[468,8],[477,3],[481,9],[491,6],[498,10],[509,3],[513,3],[517,5],[523,5],[529,9],[539,6],[546,1],[548,7],[556,1],[558,8],[567,3],[571,3],[575,12],[588,14],[603,7],[611,5],[617,3],[621,4],[626,13],[640,10]]},"285":{"position":[[0,4],[5,1],[7,3],[11,1],[13,8],[22,9],[32,6],[39,12],[52,14],[67,2],[70,3],[74,8],[83,9],[93,5],[99,11],[111,10],[122,12],[135,8],[144,11],[156,1],[158,10],[169,5],[179,8],[188,5],[194,7],[202,4],[207,6],[214,6],[221,2],[224,4],[229,9],[239,7],[247,1],[249,7],[257,2],[260,6],[267,8],[276,12],[289,12],[302,3],[306,5],[312,10]]},"287":{"position":[[0,3],[4,9],[14,6],[21,2],[24,5],[30,9],[40,3],[44,2],[47,6],[54,4],[59,1],[61,3],[65,7],[73,3],[77,2],[80,6],[87,12],[100,2],[103,2],[106,9],[116,3],[120,3],[124,7],[132,11],[144,2],[147,6],[154,9],[164,5],[170,6],[177,1],[179,10],[190,7],[198,7],[206,8],[215,9],[225,6],[232,3],[236,6],[243,9],[253,5],[259,3],[263,6],[270,8],[279,8],[288,7],[296,9],[306,12],[319,5],[325,8],[334,1],[336,3],[340,6],[347,7],[355,7],[363,8],[372,2],[375,11],[387,6],[394,1],[396,5],[402,5],[408,1],[410,7],[418,4],[423,5],[429,8],[438,6],[445,6],[452,1],[454,8],[463,10],[474,3],[478,11]]},"289":{"position":[[0,11],[12,1],[14,3],[18,4],[23,10],[34,10],[45,8],[54,7],[62,8],[71,9],[81,12],[94,11],[106,1],[108,11],[120,8],[129,9],[139,11],[151,3],[155,11],[167,3],[171,12],[184,4],[189,5],[195,11],[207,7],[215,5],[221,7],[229,3],[233,1],[235,9],[245,5],[251,7],[259,43],[303,7],[311,29],[341,6],[348,9],[358,1],[360,13],[374,7],[382,11],[394,1],[396,63],[460,26],[487,21],[509,4],[514,9],[524,1],[526,12],[539,5],[545,32],[578,5],[584,35],[620,11],[632,9],[642,7],[650,11],[662,25],[688,17],[706,27],[734,6],[741,21],[763,15],[779,12],[792,12],[805,6],[812,7],[820,5],[826,7],[834,6],[841,15],[857,8],[866,7],[874,5],[880,10],[891,5],[897,7],[905,10],[916,11],[928,7],[936,1],[938,7],[946,12],[959,4],[964,7],[972,5],[978,7],[986,8],[995,3],[999,9],[1009,7],[1017,43],[1061,7],[1069,35],[1105,9],[1115,1],[1117,13],[1131,7],[1139,11],[1151,1],[1153,63],[1217,26],[1244,21],[1266,4],[1271,9],[1281,1],[1283,12],[1296,5],[1302,32],[1335,5],[1341,35],[1377,11],[1389,9],[1399,7],[1407,12],[1420,12],[1433,7],[1441,29],[1471,6],[1478,9],[1488,1],[1490,13],[1504,7],[1512,11],[1524,1],[1526,35],[1562,11],[1574,7],[1582,11],[1594,25],[1620,17],[1638,27],[1666,6],[1673,21],[1695,15],[1711,12],[1724,12],[1737,7],[1745,37],[1783,6],[1790,7],[1798,9],[1808,1],[1810,14],[1825,11],[1837,1],[1839,35],[1875,11],[1887,7],[1895,11],[1907,25],[1933,17],[1951,27],[1979,6],[1986,21],[2008,15],[2024,12],[2037,12],[2050,7],[2058,38],[2097,6],[2104,7],[2112,9],[2122,1],[2124,15],[2140,11],[2152,1],[2154,35],[2190,11],[2202,7],[2210,11],[2222,25],[2248,17],[2266,27],[2294,6],[2301,21],[2323,15],[2339,12],[2352,12]]},"291":{"position":[[0,12],[13,13],[27,1],[29,5],[40,1],[42,5],[48,5],[54,9],[64,10]]},"293":{"position":[[0,3],[4,9],[14,3],[18,8],[27,2],[30,9],[40,8],[71,8],[80,4],[85,9],[95,11],[107,6],[114,6],[149,6],[156,6],[163,1],[165,13],[179,9],[189,9],[215,1],[244,2],[247,4],[252,1],[254,12],[267,7],[275,5],[281,7],[289,3],[293,7],[301,2],[304,8],[313,5],[319,6],[326,4],[331,7],[339,3],[343,4],[348,1],[350,5],[385,7],[393,8],[417,2],[420,10],[431,12],[468,7],[476,5],[482,6],[489,10],[500,12],[536,8],[545,4],[550,9],[560,12],[573,9],[583,4],[604,2],[607,4],[612,1],[614,6],[621,1],[623,7],[631,5],[637,7],[645,7],[653,9],[663,10],[679,8],[692,4],[697,7]]},"295":{"position":[[0,3],[4,9],[14,3],[18,8],[27,2],[30,9],[40,8],[76,6],[83,4],[88,11],[100,2],[103,7],[111,8],[120,5],[145,6],[152,4],[157,8],[166,2],[169,7],[177,8],[186,5],[209,6],[216,6],[223,5],[229,1],[231,11],[243,6],[250,5],[256,10],[267,7],[293,2],[296,13],[310,6],[317,4],[322,8],[331,8],[340,7],[348,5],[354,11],[382,2],[385,13],[399,6],[406,6],[413,7],[421,5],[427,11],[459,6],[466,4],[471,10],[482,11],[494,1],[496,7],[504,5],[510,11],[522,5],[545,2],[548,13],[562,6],[569,6],[576,5],[582,1],[584,11],[596,6]]},"297":{"position":[[0,3],[4,9],[14,3],[18,8],[27,2],[30,9],[40,8],[61,2],[64,4],[69,1],[71,5],[77,4],[102,13],[116,11],[128,4],[133,2],[136,7],[144,7],[152,2],[155,9],[170,1],[181,4],[186,11],[200,4],[205,4],[210,3],[216,4],[243,5],[249,4],[254,1],[263,9],[294,7],[302,11],[314,5],[320,9],[330,9],[365,8],[374,9],[384,5],[390,13],[404,1],[406,7],[444,7],[452,11],[464,2],[467,10],[478,1],[480,9],[490,5],[496,1],[498,7],[512,1],[524,1],[572,2],[669,1],[671,9],[681,3],[685,5],[691,2],[694,10],[713,1],[715,9],[725,5],[731,4],[762,9],[772,9],[782,5],[788,11],[800,2],[803,9],[813,1],[825,1],[853,2],[900,1],[902,9],[912,3],[916,5],[922,1],[924,7],[932,10],[943,4],[948,1],[950,5],[956,9],[966,5],[972,4],[1002,1],[1060,1],[1117,1],[1119,1]]},"299":{"position":[[0,3],[4,5],[10,3],[14,2],[17,3],[21,1],[23,3],[27,4],[32,5],[38,6],[45,5],[51,2],[54,11],[66,6],[73,3],[82,1],[84,3],[88,7],[96,2],[99,8],[108,9],[118,1],[120,10],[131,4],[136,6],[143,13],[157,10],[168,11],[180,1],[182,3],[186,2],[189,3],[193,3],[197,9],[207,7],[215,3],[219,10],[230,15],[246,11],[258,12],[285,10],[296,5],[302,6],[309,9],[324,9],[334,1],[336,10],[347,5],[353,2],[356,2],[359,4],[364,9],[374,9],[384,5],[390,12],[403,8],[412,11],[432,3],[436,6],[447,2],[661,5],[667,3],[671,9],[681,9],[691,5],[697,6],[704,7],[712,10],[723,2],[726,5],[732,11],[744,2],[747,4],[752,6],[759,3],[763,8],[772,6],[779,9],[789,9],[799,11],[811,1],[813,15],[829,13],[843,1],[845,13],[864,10],[879,5],[885,5],[891,15],[907,1],[909,3],[913,10]]},"302":{"position":[[0,5],[6,11],[18,1],[20,11],[32,13],[46,2],[49,6],[56,2],[59,10],[70,1],[72,8],[81,4],[86,7],[94,9],[104,11],[116,6],[123,1],[125,8],[134,8],[143,11],[155,10],[166,7],[174,9],[184,7],[192,10],[203,15],[219,10],[230,13],[244,1],[246,9],[256,11],[268,3],[272,9],[282,2],[285,7],[293,7],[301,6],[308,11],[320,18],[339,5],[345,13],[359,5],[365,9],[375,6],[382,5],[388,2],[391,7],[399,1],[401,11],[413,8],[422,2],[425,1],[427,5],[433,8],[442,10],[453,6],[460,8],[469,3],[473,3],[477,8],[486,1],[488,8],[497,7],[505,6],[512,13],[526,2],[529,11],[541,9],[551,12],[564,5],[570,7],[578,11]]},"304":{"position":[[0,5],[6,13],[20,1],[22,5],[28,7],[36,3],[40,16],[57,8],[66,6],[73,7],[81,6],[88,8],[97,7],[105,2],[108,9],[118,7],[126,5],[132,11],[144,6],[151,20],[172,1],[174,6],[181,11],[193,10],[204,11],[216,3],[220,5],[226,2],[229,3],[233,14],[248,9],[258,10],[269,10],[280,7],[288,8],[297,7],[305,10],[316,4],[321,6],[328,11],[340,8],[349,3],[353,14],[368,7],[376,2],[379,4],[384,11],[396,6],[403,7],[411,9],[421,4],[426,5],[432,6],[439,1],[441,8],[450,9],[460,5],[466,2],[469,6],[476,7],[484,1],[486,8],[495,5],[501,2],[504,6],[511,10],[522,5],[528,7],[536,12],[549,9],[559,12],[572,8],[581,8],[590,3],[594,5],[600,3],[604,5],[610,4],[615,1],[617,4],[622,8],[631,1],[633,8],[642,9],[652,10],[663,11],[675,11],[687,5],[693,10],[704,1],[706,10],[717,3],[721,4],[726,7],[734,1],[736,10],[747,3],[751,4],[756,7],[764,3],[768,14],[783,1],[785,7],[793,3],[801,1],[803,4],[808,2],[811,10],[822,2],[825,7],[833,1],[835,9],[845,12],[858,5],[864,6],[871,1],[873,11],[885,8]]},"306":{"position":[[0,4],[5,7],[13,2],[16,4],[21,12],[34,7],[42,11],[54,1],[56,6],[63,19],[83,10],[94,6]]},"308":{"position":[[0,1],[2,5],[8,6],[15,6],[22,6],[29,11],[41,8],[65,1],[67,10],[92,3],[96,13],[110,5],[116,7],[124,4],[129,1],[131,5],[137,12],[150,7],[158,3],[162,9],[172,7],[180,7],[188,3],[192,9],[202,5],[208,8],[217,4],[222,6],[229,8],[238,5],[244,5],[250,8],[259,10],[270,1],[272,14],[287,4],[292,10],[303,9],[313,1],[315,4],[320,10],[331,5],[337,1],[339,6],[346,2],[349,7],[357,8]]},"310":{"position":[[0,4],[5,2],[8,11],[25,2],[28,9],[38,6],[45,2],[48,9],[58,11],[70,9],[80,5],[86,8],[95,5],[101,7],[114,3],[118,9],[128,4],[133,7],[141,9],[151,9],[161,5],[167,1],[169,6],[176,7]]},"312":{"position":[[0,6],[7,9],[17,1],[23,5],[29,3],[33,12],[46,7],[54,11],[66,1],[68,2],[71,7],[79,2],[82,6],[89,9],[99,5],[105,5],[111,3],[115,1],[132,8],[141,6],[148,13],[162,5],[168,3],[172,9],[182,1],[184,11],[196,12],[209,7],[217,9],[227,6],[234,2],[237,5],[243,8],[252,6],[259,8],[268,8]]},"314":{"position":[[0,5],[6,6],[13,9],[23,9],[33,5],[39,5],[45,2],[48,6],[55,3],[59,6],[66,8],[75,4],[80,2],[83,9],[93,1],[95,6],[102,1],[104,8],[113,2],[116,5],[122,1],[124,6],[131,8],[140,7],[148,2],[151,7],[159,6],[166,8],[175,7],[183,2],[186,3],[190,2],[193,7],[201,9],[211,10],[222,5],[228,3],[232,7],[240,2],[243,6],[250,6],[257,19],[277,2],[280,9],[290,3],[294,5],[300,7],[308,7],[316,7],[324,9],[334,1],[336,5],[342,7]]},"316":{"position":[[0,6],[7,9],[17,5],[23,9],[33,6],[40,3],[44,6],[51,1],[53,8],[62,5],[68,7],[76,4],[81,1],[83,7],[91,8],[100,2],[103,6],[110,8],[119,11],[131,8],[140,1],[142,10],[153,1],[155,2],[158,10],[169,7],[177,10],[188,7],[196,7],[218,5],[230,1],[232,4],[237,8],[246,6],[253,8]]},"318":{"position":[[0,11],[12,13],[26,2],[29,5],[35,8],[44,7],[52,4],[57,6],[64,4],[69,6],[76,9],[86,6],[93,7],[101,4],[106,12],[119,7],[127,7],[135,1],[137,7],[145,5],[151,9],[161,7],[169,4],[174,1],[176,5],[182,12],[195,7],[203,1],[205,10],[216,7],[228,3],[232,18],[251,6],[258,7],[266,7],[274,8],[283,5],[289,9],[299,3],[303,7],[311,13],[325,11],[337,7],[345,7],[353,8],[362,5],[368,7],[376,5],[382,1],[384,3],[388,2],[391,5],[397,6],[404,10],[415,9],[425,9],[435,1],[437,3],[441,2],[444,4],[449,1],[451,9],[461,7],[469,6],[476,7],[484,8],[493,2],[496,2],[499,13]]},"320":{"position":[[0,3],[4,7],[12,6],[19,2],[22,11],[34,10],[45,15],[61,8],[70,6],[77,12]]},"322":{"position":[[0,5],[6,1],[8,7],[31,10],[42,11],[54,1],[56,3],[60,10],[71,12],[132,3],[136,12],[149,6],[156,7],[164,5],[170,15],[186,11],[198,9],[208,7],[345,6],[352,6],[359,1],[361,6],[368,7],[376,7],[384,2],[387,14],[402,4],[418,3],[422,13],[442,2],[445,12],[458,9],[468,1],[470,5]]},"324":{"position":[[0,10],[11,9],[21,1],[23,9],[33,9],[43,12],[56,5],[62,6],[69,5],[75,6],[82,2],[85,4],[90,2],[93,6],[100,12],[113,9],[123,5],[129,3],[133,12],[146,4],[151,12],[164,8]]},"326":{"position":[[0,3],[4,7],[12,1],[14,7],[22,6],[29,2],[32,6],[39,15],[55,8],[64,7],[72,7],[80,5],[86,13],[100,9],[110,3],[114,5],[120,1],[122,8],[131,1],[133,4],[138,6],[145,16],[162,2],[165,8],[174,7],[182,10],[193,2],[196,4],[201,5],[207,2],[210,6],[217,9],[227,6],[234,6],[241,1],[243,5],[249,2],[252,7],[260,9],[270,8]]},"329":{"position":[[0,3],[4,10],[15,8],[24,12],[37,11],[49,5],[55,17],[73,5],[79,5],[85,6],[92,9],[102,1],[104,10],[115,4],[120,5],[126,3],[130,14],[145,4],[150,3],[154,7],[162,1],[164,7],[172,3],[176,12],[189,12],[202,3],[206,7],[214,9],[224,4],[229,6],[236,2],[239,8],[248,16],[265,8],[274,12],[287,9],[297,8],[306,1],[308,9],[318,16],[335,9],[345,7],[353,11],[365,5],[371,1],[373,8],[382,6],[389,7],[397,2],[400,9],[410,1],[412,9],[422,3],[426,13]]},"332":{"position":[[0,3],[4,8],[13,6],[20,2],[23,7],[31,8],[40,5],[46,32],[79,2],[82,10],[93,9],[103,6],[110,2],[113,9],[123,5],[129,18],[148,3],[152,17],[170,1],[172,8],[191,9],[201,6],[208,2],[211,7],[219,1],[221,2],[224,6],[231,9],[241,2],[244,4],[249,6],[256,1],[258,10],[269,7],[277,2],[280,5],[286,6],[293,5],[299,9],[309,9],[319,6],[326,7],[334,9],[344,8],[353,1],[355,9],[365,5],[371,1],[373,9],[383,6],[390,1],[392,4],[397,6],[404,6],[411,10],[422,10],[433,5],[439,15],[455,9],[465,4],[470,10],[481,5],[487,5],[495,9],[507,5],[523,5],[541,5],[549,9],[561,5],[577,5],[585,9],[597,5],[616,6],[623,6],[644,12],[657,6],[664,1],[666,4],[671,6],[678,10],[689,2],[692,11],[704,5],[710,3],[714,12],[727,7],[735,3],[739,13],[753,2],[756,6],[763,5],[769,6],[776,4],[781,1],[783,8],[792,1],[794,10],[805,18],[828,3],[832,14],[847,10],[858,9],[868,1],[870,7],[878,8],[887,12],[900,7],[908,10],[919,2],[922,11],[934,6],[941,9],[951,6],[958,5],[964,9],[974,14],[989,1],[991,8],[1000,4],[1005,1],[1007,4],[1012,3],[1016,7],[1024,6],[1031,1],[1033,3],[1037,2],[1040,19],[1060,2],[1063,2],[1066,3],[1070,12],[1083,8],[1092,14],[1107,3],[1111,1],[1113,1],[1115,9],[1125,10],[1136,5],[1142,9],[1152,8],[1161,9],[1171,11],[1183,8],[1192,3],[1196,8],[1205,7],[1213,8],[1222,6],[1229,10],[1240,7],[1248,10],[1259,8],[1268,10],[1279,1],[1281,4],[1286,7],[1294,3],[1298,5],[1304,10],[1315,8],[1324,7],[1332,15],[1348,1],[1350,10],[1361,1],[1363,7],[1371,7],[1379,6],[1386,9],[1396,17],[1414,9],[1424,7],[1432,12],[1445,12],[1458,1],[1460,7],[1468,10],[1479,3],[1483,9],[1493,7],[1501,4],[1506,3],[1510,8],[1519,6],[1526,11],[1538,4],[1543,1],[1545,9],[1555,16],[1572,2],[1575,12],[1588,5],[1594,9],[1604,8],[1613,2],[1616,5],[1622,9],[1632,1],[1634,7],[1642,5],[1648,3],[1652,6],[1659,6],[1666,5],[1672,6],[1679,5],[1685,1],[1687,15],[1703,5],[1712,1],[1714,7],[1724,1],[1728,5],[1734,12],[1747,8],[1756,2],[1759,4],[1766,5],[1775,1],[1780,1],[1785,6],[1794,7],[1802,5],[1808,7],[1820,3],[1824,8],[1833,5],[1839,12],[1852,5],[1858,10],[1869,6],[1876,8],[1885,8],[1894,4],[1899,5],[1905,1],[1907,9],[1917,6],[1924,9],[1934,1],[1936,6],[1943,5],[1949,1],[1951,7],[1959,9],[1969,9],[1979,5],[1985,9],[1995,6],[2002,2],[2005,9],[2015,5],[2021,15],[2037,7],[2045,8],[2054,10],[2065,8],[2074,11],[2086,5],[2092,11],[2104,11],[2116,1],[2118,13],[2132,14],[2147,1],[2149,77],[2227,16],[2244,13],[2258,17],[2276,1],[2383,13],[2401,8],[2410,1],[2412,7],[2420,7],[2428,8],[2437,15],[2453,7],[2461,3],[2465,11],[2477,8],[2486,4],[2491,7],[2499,2],[2502,9],[2512,12],[2525,1],[2527,8],[2536,14],[2551,3],[2555,6],[2562,1],[2564,11],[2576,2],[2579,5],[2585,5],[2591,2],[2594,4],[2599,10],[2610,8],[2619,8],[2628,15],[2644,3],[2648,9],[2658,3],[2662,8],[2671,6],[2678,2],[2681,13],[2695,3],[2699,4],[2704,8],[2713,16],[2730,5],[2736,8],[2745,4],[2750,6],[2757,8],[2766,1],[2768,7],[2776,7],[2784,13],[2798,9],[2808,8],[2817,1],[2819,6],[2826,9],[2836,2],[2839,1],[2841,7],[2849,11],[2861,9],[2871,9],[2881,2],[2884,6],[2891,7],[2899,1],[2901,3],[2905,6],[2912,5],[2918,6],[2925,2],[2928,4],[2933,7],[2941,5],[2947,11],[2959,2],[2962,16],[2979,14]]},"335":{"position":[[0,1],[2,8],[11,9],[21,6],[28,5],[34,12],[47,4],[52,9],[62,9],[72,1],[74,4],[79,6],[86,5],[92,8],[101,7],[109,9],[119,7],[127,1],[131,2],[134,6],[141,1],[145,2],[148,7],[156,10],[167,9],[177,2],[180,6],[187,6],[194,7],[202,8],[211,6],[218,5],[224,15],[240,9],[250,4],[255,10],[266,5],[272,5],[280,9],[292,5],[308,5],[326,5],[334,9],[346,5],[362,5],[370,9],[382,5],[401,6],[408,6],[434,4],[439,3],[443,8],[452,1],[454,2],[457,7],[465,1],[467,2],[470,7],[478,3],[482,7],[490,11],[502,5],[508,7],[516,9],[526,3],[530,7],[540,6],[547,8],[556,13],[570,1],[572,5],[578,13],[592,31],[624,5],[630,42],[673,30],[704,5],[710,24],[735,36],[772,5],[778,24],[803,31],[835,5],[841,24],[866,14],[881,1],[953,15],[969,32],[1002,28]]},"337":{"position":[[0,5],[6,8],[15,9],[25,7],[33,2],[36,10],[47,9],[57,1],[59,12],[72,2],[75,1],[77,8],[86,9],[96,6],[103,3],[107,7],[115,9],[125,5],[131,7],[139,1],[141,5],[147,9],[157,9],[167,5],[173,7],[181,9],[191,7],[199,6],[206,4],[211,5],[217,3],[221,8],[230,6],[237,7],[245,2],[248,5],[254,2],[257,8],[266,7],[274,9],[284,7],[292,9],[302,5],[308,11],[320,1],[322,5],[328,7],[336,10],[347,9],[359,8],[368,7],[376,12],[389,1],[391,8],[400,9],[410,10],[421,1],[423,1],[425,6],[434,7],[442,1],[444,9],[454,10],[465,8],[474,6],[481,5],[487,15],[503,9],[513,10],[524,5],[532,9],[544,5],[552,5],[560,9],[572,5],[580,6],[587,6],[596,5],[602,4],[607,10],[618,5],[624,5],[642,5],[663,6],[684,13],[698,1],[700,5],[706,13],[720,31],[752,5],[758,42],[801,36],[838,5],[844,24],[869,2],[872,3],[876,6],[883,13],[897,9],[907,8],[916,12],[929,10],[940,12],[953,2],[956,1],[958,4],[963,9],[973,10],[984,10],[995,6],[1002,8],[1011,2],[1014,5],[1020,1],[1022,5],[1028,8],[1037,5],[1043,6],[1050,15],[1066,4],[1071,8],[1080,11],[1094,2],[1097,5],[1103,10],[1114,1],[1116,9],[1126,7],[1134,11],[1146,1],[1148,7],[1156,5],[1162,9],[1172,12],[1185,2],[1188,12],[1201,1],[1203,7],[1211,2],[1214,8],[1223,11],[1235,1],[1237,5],[1243,13],[1257,21],[1279,1],[1281,33],[1361,14],[1376,11],[1388,2],[1391,13],[1405,1],[1407,5],[1413,13],[1427,31],[1459,5],[1465,42],[1508,30],[1539,5],[1545,24],[1570,36],[1607,5],[1613,24],[1638,31],[1670,5],[1676,24],[1701,24],[1726,1],[1728,33],[1808,14],[1823,11],[1835,2],[1838,17],[1856,1],[1927,35],[1963,33]]},"339":{"position":[[0,14],[15,4],[20,3],[24,8],[33,12],[46,8],[55,9],[65,2],[68,10],[79,9],[89,1],[91,6],[98,7],[108,9],[118,5],[124,10],[135,2],[138,6],[147,9],[157,6],[164,10],[175,1],[177,7],[187,9],[197,8],[206,2],[209,9],[219,7],[227,5],[233,15],[249,1],[251,6],[258,2],[261,8],[270,3],[274,11],[286,7],[294,1],[296,9],[306,7],[334,12],[347,4],[352,9],[362,6],[369,5],[375,11],[387,8],[398,4],[403,9],[413,6],[420,5],[426,11],[438,7],[472,8],[481,5],[487,15],[503,9],[513,4],[518,10],[529,5],[535,8],[546,5],[554,9],[564,5],[580,8],[591,5],[599,9],[609,5],[628,8],[639,6],[646,6],[667,7],[694,6],[701,10],[712,11],[724,11],[736,5],[742,5],[748,10],[759,4],[764,6],[771,6],[778,8],[789,5],[795,5],[805,4],[810,6],[817,6],[824,8],[835,5],[841,5],[851,4],[856,6],[863,6],[870,8],[881,5],[887,6],[896,11],[908,1],[910,5],[916,13],[930,11],[942,1],[944,35],[980,9],[990,1],[992,54],[1047,13],[1061,13],[1075,1],[1077,31],[1109,2],[1112,4],[1117,5],[1123,2],[1126,9],[1136,5],[1142,9],[1152,1],[1154,12],[1167,13],[1181,2],[1184,9],[1194,9],[1204,6],[1211,2],[1214,5],[1220,12],[1233,12],[1248,2],[1251,8],[1260,2],[1263,10],[1274,9],[1284,1],[1286,7],[1294,9],[1304,18],[1323,1],[1325,5],[1331,13],[1345,42],[1388,13],[1402,40],[1443,11],[1455,35],[1491,15],[1507,13],[1521,1],[1523,5],[1529,13],[1543,38],[1582,5],[1588,46],[1635,30],[1666,5],[1672,23],[1696,37],[1734,5],[1740,47],[1788,35],[1824,5],[1830,47],[1878,31],[1910,5],[1916,42],[1959,32],[1992,5],[1998,42],[2041,17],[2059,1],[2061,33],[2151,14],[2166,12],[2179,18],[2198,2],[2201,13],[2215,1],[2217,5],[2223,13],[2237,34],[2272,5],[2278,46],[2325,31],[2357,5],[2363,42],[2406,30],[2437,5],[2443,24],[2468,36],[2505,5],[2511,24],[2536,31],[2568,5],[2574,24],[2599,14],[2614,1],[2616,33],[2713,14],[2728,12],[2741,18],[2760,2],[2763,13],[2777,1],[2779,5],[2785,13],[2799,32],[2832,5],[2838,23],[2862,36],[2899,5],[2905,25],[2931,37],[2969,5],[2975,40],[3016,37],[3054,5],[3060,46],[3107,31],[3139,5],[3145,42],[3188,31],[3220,5],[3226,42],[3269,36],[3306,5],[3312,24],[3337,15],[3353,1],[3355,33],[3445,14],[3460,12],[3473,18],[3492,2],[3495,3],[3499,7],[3507,16],[3524,2],[3527,17],[3545,4],[3550,5],[3556,1],[3558,5],[3564,21],[3586,31],[3618,15],[3634,1],[3636,34],[3671,14],[3686,1],[3688,43],[3732,49],[3782,57],[3840,14],[3855,1],[3857,39],[3897,27],[3925,22],[3948,1],[3950,27],[3978,5],[3984,1],[3986,5],[3992,24],[4017,31],[4049,23],[4073,1],[4075,35],[4111,40],[4152,32],[4185,11]]},"341":{"position":[[0,8],[9,1],[11,10],[22,8],[31,7],[39,11],[51,1],[53,5],[59,10],[70,33],[104,2],[107,15],[123,4],[128,4],[133,5],[139,12],[152,7],[160,12],[173,10],[184,21],[206,4],[211,7],[219,7],[227,1],[229,9],[239,6],[246,6],[253,5],[259,15],[275,10],[286,9],[296,1],[298,7],[306,9],[316,1],[318,5],[324,8],[333,3],[337,1],[339,7],[347,9],[357,7],[365,9],[375,9],[385,1],[387,58],[446,29],[476,15],[492,12],[505,2],[508,1],[510,9],[520,9],[530,6],[537,4],[542,7],[550,17],[568,2],[571,9],[581,6],[588,11],[600,2],[603,1],[605,4],[610,6],[617,1],[619,7],[627,8],[636,7],[644,9],[654,10],[665,2],[668,12],[681,18],[700,1],[702,5],[708,13],[722,34],[757,11],[769,11],[781,15],[797,1],[799,33],[833,18],[852,14],[867,13],[881,18],[900,2],[903,33]]},"343":{"position":[[0,5],[6,12],[19,9],[29,4],[34,1],[36,8],[45,7],[53,9],[63,2],[66,8],[75,8],[84,10],[95,3],[99,5],[105,7],[113,2],[116,15],[132,5],[138,15],[154,13],[168,21],[190,4],[195,11],[207,1],[209,4],[214,7],[222,8],[231,8],[240,6],[247,6],[254,12],[267,1],[269,5],[275,70],[346,13],[360,1],[362,5],[368,13],[382,35],[418,14],[433,9],[443,1],[445,55],[501,5],[507,1],[509,50],[560,18],[579,1],[581,5],[587,13],[601,38],[640,13],[654,11],[666,38],[705,9],[715,7],[723,15],[739,1],[741,33],[775,18],[794,14],[809,13],[823,18],[842,2],[845,33],[963,1]]},"345":{"position":[[0,3],[4,13],[18,2],[21,6],[28,10],[39,7],[47,1],[49,7],[57,5],[63,1],[65,5],[75,4],[80,2],[83,11],[100,2],[103,7],[111,13],[125,13],[139,6],[146,1],[148,9],[158,7],[182,1],[184,2],[187,5],[193,1],[195,4],[200,1],[202,10],[213,1],[215,5],[221,1],[223,2],[234,1],[242,1],[255,1],[263,1],[265,2],[268,5],[276,1],[282,1],[286,1],[292,1],[294,2],[297,5],[305,1],[313,1],[317,1],[324,1],[326,2],[329,6],[336,1],[344,1],[348,1],[356,3],[360,13],[374,1],[376,5],[382,13],[396,31],[428,5],[434,42],[477,30],[508,5],[514,24],[539,36],[576,5],[582,24],[607,31],[639,5],[645,24],[670,6],[677,1],[729,15]]},"347":{"position":[[33,6],[40,7],[57,1],[59,6],[66,8],[75,5],[81,1],[83,2],[86,3],[90,1],[92,12],[105,1],[107,11],[119,1],[121,6],[128,1],[130,9],[140,1],[142,9],[152,1],[154,9],[164,1],[166,7],[174,1],[176,18],[195,1],[197,14],[212,1],[214,2],[240,1],[266,1],[289,1],[298,1],[310,1],[322,1],[334,1],[344,1],[365,1],[382,1],[384,2],[387,10],[398,1],[400,11],[412,1],[414,14],[429,1],[431,1],[433,1],[435,1],[437,1],[439,1],[441,1],[443,1],[445,1],[447,1],[449,1],[451,1],[453,2],[456,8],[465,1],[467,9],[477,1],[479,15],[495,1],[497,1],[499,1],[501,1],[503,1],[505,1],[507,1],[509,1],[511,1],[513,1],[515,1],[517,2],[520,22],[543,1],[545,23],[569,1],[571,14],[586,1],[588,1],[590,1],[592,1],[594,1],[596,1],[598,1],[600,1],[602,1],[604,1],[606,1],[608,1],[610,2],[613,10],[624,1],[626,11],[638,1],[640,11],[652,1],[654,1],[656,1],[658,1],[660,1],[662,1],[664,1],[666,1],[668,1],[670,1],[672,1],[674,2],[677,16],[694,1],[696,17],[714,1],[716,17],[734,1],[736,1],[738,1],[740,1],[742,1],[744,1],[746,1],[748,1],[750,1],[752,1],[754,1],[756,2],[759,10],[770,1],[772,11],[784,1],[786,11],[798,1],[800,1],[802,1],[804,1],[806,1],[808,1],[810,1],[812,1],[814,1],[816,1],[818,1],[820,2],[823,15],[839,1],[841,16],[858,1],[860,19],[880,1],[882,1],[884,1],[886,1],[888,1],[890,1],[892,1],[894,1],[896,1],[898,1],[900,1],[902,2],[905,17],[923,1],[925,18],[944,1],[946,19],[966,1],[968,1],[970,1],[972,1],[974,1],[976,1],[978,1],[980,1],[982,1],[984,1],[986,1],[988,2],[991,18],[1010,1],[1012,19],[1032,1],[1034,19],[1054,1],[1056,1],[1058,1],[1060,1],[1062,1],[1064,1],[1066,1],[1068,1],[1070,1],[1072,1],[1074,1],[1076,2],[1079,14],[1094,1],[1096,15],[1112,1],[1114,19],[1134,1],[1136,1],[1138,1],[1140,1],[1142,1],[1144,1],[1146,1],[1148,1],[1150,1],[1152,1],[1154,1],[1156,2],[1159,13],[1173,1],[1175,14],[1190,1],[1192,20],[1213,1],[1215,1],[1217,1],[1219,1],[1221,1],[1223,1],[1225,1],[1227,1],[1229,1],[1231,1],[1233,1],[1235,2],[1238,6],[1245,1],[1247,6],[1254,1],[1256,13],[1270,1],[1272,1],[1274,1],[1276,1],[1278,1],[1280,1],[1282,1],[1284,1],[1286,1],[1288,1],[1290,1],[1292,1],[1294,3],[1298,17],[1316,1],[1359,14],[1374,1],[1376,5],[1382,12],[1395,3],[1399,7],[1407,6],[1414,2],[1417,17],[1435,4],[1440,8],[1449,1],[1451,5],[1457,12],[1470,24],[1495,12],[1508,33],[1542,21],[1564,32],[1597,20],[1618,27],[1646,13],[1660,1],[1662,5],[1668,30],[1699,16],[1716,1],[1718,5],[1724,30],[1755,16],[1772,1],[1774,5],[1780,30],[1811,16],[1828,1],[1830,5],[1836,28],[1865,14],[1880,1],[1882,5],[1888,39],[1928,25],[1954,1],[1956,5],[1962,35],[1998,21],[2020,1],[2022,5],[2028,37],[2066,10],[2077,46],[2124,10],[2135,11],[2147,7],[2155,15],[2206,6],[2213,7],[2230,1],[2232,9],[2242,7],[2250,17],[2268,7],[2276,5],[2282,1],[2284,2],[2287,3],[2291,1],[2293,12],[2306,1],[2308,2],[2334,1],[2360,1],[2362,2],[2365,10],[2376,1],[2378,11],[2390,1],[2392,2],[2395,8],[2404,1],[2406,9],[2416,1],[2418,2],[2421,22],[2444,1],[2446,23],[2470,1],[2472,2],[2475,10],[2486,1],[2488,11],[2500,1],[2502,2],[2505,16],[2522,1],[2524,17],[2542,1],[2544,2],[2547,10],[2558,1],[2560,11],[2572,1],[2574,2],[2577,15],[2593,1],[2595,16],[2612,1],[2614,2],[2617,17],[2635,1],[2637,18],[2656,1],[2658,2],[2661,18],[2680,1],[2682,19],[2702,1],[2704,2],[2707,14],[2722,1],[2724,15],[2740,1],[2742,2],[2745,13],[2759,1],[2761,14],[2776,1],[2778,2],[2781,6],[2788,1],[2790,6],[2797,1],[2799,3],[2803,8],[2812,1],[2856,7],[2864,7],[2872,27],[2900,12]]}}}],["0",{"_index":120,"t":{"108":{"position":[[1022,22]]},"181":{"position":[[1544,44],[1619,31]]},"197":{"position":[[658,40],[907,27],[935,22],[1199,32],[1259,36]]},"199":{"position":[[794,14],[2252,12],[2286,3]]},"201":{"position":[[1022,33]]},"203":{"position":[[1547,21]]},"206":{"position":[[397,10]]},"224":{"position":[[3677,11],[3723,1],[3751,1],[3910,11],[3956,1],[3984,1],[4012,1]]},"250":{"position":[[2556,2]]},"279":{"position":[[1827,40],[1918,56]]},"293":{"position":[[674,2]]},"335":{"position":[[1046,48],[1099,64],[1164,64]]},"341":{"position":[[937,70]]},"343":{"position":[[879,43]]}}}],["000",{"_index":279,"t":{"332":{"position":[[605,3]]},"335":{"position":[[390,3]]},"337":{"position":[[652,3]]},"339":{"position":[[617,3]]},"345":{"position":[[309,3]]}}}],["000000001",{"_index":117,"t":{"108":{"position":[[972,9]]}}}],["02",{"_index":258,"t":{"299":{"position":[[455,2]]}}}],["0].количество\").больше(0",{"_index":180,"t":{"208":{"position":[[425,43]]}}}],["0].количество\").равно(1",{"_index":283,"t":{"335":{"position":[[1229,36]]}}}],["0].номерстроки\").равно(2",{"_index":115,"t":{"108":{"position":[[731,43]]}}}],["0].параметры[0",{"_index":196,"t":{"228":{"position":[[2683,44]]}}}],["0].сумма\").равно(100",{"_index":181,"t":{"208":{"position":[[469,39]]},"335":{"position":[[1299,33]]}}}],["0].товар\").равно(данныеобъекта.товары[0",{"_index":116,"t":{"108":{"position":[[775,66]]}}}],["0].товар\").равно(товар1",{"_index":178,"t":{"208":{"position":[[344,42]]}}}],["0].цена\").больше(0",{"_index":179,"t":{"208":{"position":[[387,37]]}}}],["0].цена\").равно(100",{"_index":284,"t":{"335":{"position":[[1266,32]]}}}],["1",{"_index":109,"t":{"104":{"position":[[169,1]]},"108":{"position":[[716,14]]},"141":{"position":[[920,32],[1012,22]]},"145":{"position":[[992,29],[1316,3],[1498,3]]},"148":{"position":[[333,30],[379,2],[834,30]]},"159":{"position":[[166,3]]},"165":{"position":[[525,14]]},"171":{"position":[[89,15]]},"179":{"position":[[466,3]]},"185":{"position":[[1074,15],[1153,1],[1164,18],[1226,34],[1461,9],[1501,3],[1545,3],[1549,26]]},"195":{"position":[[3198,2]]},"199":{"position":[[313,31],[609,31],[676,12],[1418,15],[1434,3],[1444,14],[1464,2],[1501,36],[1596,4],[1601,47],[1649,2],[1710,4],[1728,3],[2086,31],[2424,31]]},"203":{"position":[[940,4],[992,39],[1202,48],[1634,10],[1675,2]]},"212":{"position":[[90,3],[120,5],[183,31],[215,6],[297,18]]},"222":{"position":[[3807,10]]},"224":{"position":[[3529,16],[3588,9],[3657,15],[3700,8],[3725,8],[3753,8],[3879,26],[3933,8],[3958,8],[3986,8],[4761,3],[4824,26],[6479,44],[7912,11]]},"228":{"position":[[672,10],[966,26],[997,9],[1069,9]]},"236":{"position":[[1192,22],[1381,22]]},"242":{"position":[[154,15]]},"250":{"position":[[2553,2],[2559,3],[3514,3]]},"252":{"position":[[2295,1]]},"259":{"position":[[410,4],[417,1],[422,32]]},"261":{"position":[[703,1],[708,34],[1354,34],[1432,34],[1511,34],[1914,37]]},"266":{"position":[[773,14],[1772,1],[2916,2]]},"268":{"position":[[29,15]]},"270":{"position":[[0,14]]},"279":{"position":[[384,3],[409,3],[422,3],[1735,33],[1824,2]]},"281":{"position":[[401,2]]},"293":{"position":[[402,14],[688,1]]},"297":{"position":[[414,14],[537,17]]},"308":{"position":[[50,14]]},"312":{"position":[[117,14]]},"322":{"position":[[16,3]]},"332":{"position":[[493,1],[505,1],[517,1],[529,1],[547,1],[595,1],[609,1],[636,1],[1709,2],[1772,2],[2278,80],[2359,23]]},"335":{"position":[[129,1],[143,1],[278,1],[290,1],[302,1],[314,1],[332,1],[380,1],[394,1],[421,1],[1095,3]]},"337":{"position":[[530,1],[542,1],[550,1],[570,1],[578,1],[594,1],[630,1],[636,1],[656,1],[676,1],[1858,68]]},"339":{"position":[[396,1],[544,1],[552,1],[574,1],[589,1],[621,1],[637,1],[659,1],[787,1],[801,1],[803,1],[833,1],[849,1],[879,1],[894,1]]},"343":{"position":[[923,39]]},"345":{"position":[[274,1],[284,1],[315,1],[346,1]]}}}],["1).равно(значение2",{"_index":172,"t":{"185":{"position":[[1625,45]]}}}],["10",{"_index":185,"t":{"212":{"position":[[316,19]]},"261":{"position":[[311,50]]}}}],["100",{"_index":169,"t":{"179":{"position":[[1945,48],[2037,48]]},"332":{"position":[[513,3],[519,3],[531,3],[567,3]]},"335":{"position":[[298,3],[304,3],[316,3],[352,3]]},"337":{"position":[[632,3],[638,3]]},"339":{"position":[[570,3],[576,3]]},"345":{"position":[[278,3],[288,3]]}}}],["102",{"_index":52,"t":{"51":{"position":[[272,4]]}}}],["1024",{"_index":201,"t":{"261":{"position":[[563,50]]}}}],["106",{"_index":40,"t":{"41":{"position":[[128,5]]}}}],["108",{"_index":42,"t":{"44":{"position":[[55,5]]}}}],["114",{"_index":46,"t":{"46":{"position":[[105,5]]}}}],["116",{"_index":45,"t":{"44":{"position":[[239,4]]}}}],["118",{"_index":44,"t":{"44":{"position":[[148,4]]}}}],["12.03.2024",{"_index":118,"t":{"108":{"position":[[985,10]]}}}],["121",{"_index":50,"t":{"51":{"position":[[145,4]]}}}],["122",{"_index":38,"t":{"39":{"position":[[41,5]]}}}],["123",{"_index":41,"t":{"41":{"position":[[214,4]]}}}],["124",{"_index":39,"t":{"41":{"position":[[55,5]]}}}],["130",{"_index":63,"t":{"60":{"position":[[91,5]]}}}],["132",{"_index":51,"t":{"51":{"position":[[212,4]]}}}],["133",{"_index":49,"t":{"51":{"position":[[61,5]]}}}],["136",{"_index":55,"t":{"55":{"position":[[66,4]]}}}],["138",{"_index":53,"t":{"53":{"position":[[75,5]]}}}],["142",{"_index":59,"t":{"57":{"position":[[67,4]]}}}],["143",{"_index":86,"t":{"71":{"position":[[309,4]]}}}],["144",{"_index":60,"t":{"57":{"position":[[117,4]]}}}],["148",{"_index":61,"t":{"60":{"position":[[38,5]]}}}],["158",{"_index":85,"t":{"71":{"position":[[275,4]]}}}],["16",{"_index":204,"t":{"261":{"position":[[1467,5],[1546,5]]}}}],["16*16",{"_index":26,"t":{"32":{"position":[[30,5]]}}}],["160",{"_index":94,"t":{"80":{"position":[[44,4]]}}}],["162",{"_index":75,"t":{"67":{"position":[[477,4]]}}}],["165",{"_index":84,"t":{"71":{"position":[[237,4]]}}}],["167",{"_index":66,"t":{"65":{"position":[[228,4]]}}}],["169",{"_index":83,"t":{"71":{"position":[[215,4]]}}}],["170",{"_index":82,"t":{"71":{"position":[[169,4]]}}}],["172",{"_index":74,"t":{"67":{"position":[[424,4]]}}}],["175",{"_index":98,"t":{"94":{"position":[[52,4]]}}}],["179",{"_index":73,"t":{"67":{"position":[[352,4]]}}}],["181",{"_index":65,"t":{"65":{"position":[[113,4]]}}}],["187",{"_index":72,"t":{"67":{"position":[[269,4]]}}}],["188",{"_index":91,"t":{"74":{"position":[[319,4]]}}}],["193",{"_index":90,"t":{"74":{"position":[[221,4]]}}}],["198",{"_index":108,"t":{"104":{"position":[[107,4]]}}}],["199",{"_index":71,"t":{"67":{"position":[[198,4]]}}}],["1].количество\").равно(2",{"_index":286,"t":{"335":{"position":[[1387,36]]}}}],["1].параметры[0",{"_index":197,"t":{"228":{"position":[[2728,42]]}}}],["1].сумма\").равно(200",{"_index":183,"t":{"208":{"position":[[572,21]]},"335":{"position":[[1457,33]]}}}],["1].товар\").равно(таблицатоваров[0",{"_index":285,"t":{"335":{"position":[[1333,53]]}}}],["1].товар\").равно(товар2",{"_index":182,"t":{"208":{"position":[[528,24]]}}}],["1].цена\").равно(100",{"_index":287,"t":{"335":{"position":[[1424,32]]}}}],["1cd",{"_index":168,"t":{"175":{"position":[[193,5]]}}}],["1cgh",{"_index":88,"t":{"74":{"position":[[50,5]]},"100":{"position":[[89,5]]}}}],["1спредприятие83",{"_index":209,"t":{"261":{"position":[[2256,75]]}}}],["2",{"_index":121,"t":{"108":{"position":[[1059,2]]},"110":{"position":[[96,1],[192,1],[265,18],[375,1],[410,2]]},"141":{"position":[[1132,23]]},"145":{"position":[[100,29],[209,3],[268,29],[571,29],[680,3],[811,1],[1104,30]]},"185":{"position":[[1505,9],[1578,23]]},"195":{"position":[[3240,2]]},"199":{"position":[[345,2],[395,20],[641,2],[782,11],[1459,4],[1467,2],[1732,35],[1834,4],[1839,35],[1875,2],[1944,4],[1962,3],[2118,2],[2456,2],[2604,11],[2628,3]]},"206":{"position":[[173,11],[482,13]]},"208":{"position":[[310,33]]},"210":{"position":[[291,3]]},"224":{"position":[[2854,1],[3034,11],[3200,11],[3546,10],[3600,9],[3673,3],[3709,3],[3734,2],[3762,2],[3906,3],[3942,3],[3967,2],[3995,2],[4765,2],[4851,2],[6700,12],[6853,11],[7150,12],[7295,11],[7924,11]]},"226":{"position":[[980,3],[984,11],[1251,3],[1280,1]]},"228":{"position":[[695,9],[853,9],[993,3],[1065,3]]},"236":{"position":[[1215,22],[1404,22]]},"250":{"position":[[1458,24],[1557,1],[1712,24],[1798,1],[1988,2],[2051,1],[2221,2],[2278,1]]},"252":{"position":[[2422,3]]},"259":{"position":[[578,3]]},"261":{"position":[[427,3],[1151,4]]},"266":{"position":[[1688,1],[1692,1],[1762,1],[1766,2],[1813,1],[1886,1],[1890,1],[2871,16],[2894,16],[2919,18],[2944,2],[2951,18],[2974,2]]},"297":{"position":[[429,14],[555,16]]},"332":{"position":[[535,1],[559,1],[583,1],[603,1],[1722,1]]},"335":{"position":[[320,1],[344,1],[368,1],[388,1],[1698,3]]},"337":{"position":[[558,1],[648,1],[650,1]]},"339":{"position":[[597,1],[615,1],[847,1]]},"345":{"position":[[303,1],[307,1]]}}}],["2\").перед(\"перед_набор2",{"_index":131,"t":{"141":{"position":[[1035,54]]}}}],["20",{"_index":200,"t":{"252":{"position":[[2452,47]]},"259":{"position":[[608,47]]}}}],["200",{"_index":277,"t":{"332":{"position":[[537,3]]},"335":{"position":[[322,3]]}}}],["2000",{"_index":280,"t":{"332":{"position":[[611,4]]},"335":{"position":[[396,4]]},"337":{"position":[[658,4]]},"339":{"position":[[623,4]]},"345":{"position":[[319,4]]}}}],["2000010101",{"_index":176,"t":{"206":{"position":[[601,22]]}}}],["2000010101000003",{"_index":177,"t":{"206":{"position":[[681,27]]}}}],["2023",{"_index":257,"t":{"299":{"position":[[450,4]]}}}],["203",{"_index":101,"t":{"96":{"position":[[83,4]]}}}],["207",{"_index":69,"t":{"67":{"position":[[114,4]]}}}],["211",{"_index":93,"t":{"78":{"position":[[64,4]]}}}],["212",{"_index":89,"t":{"74":{"position":[[128,4]]}}}],["214",{"_index":81,"t":{"71":{"position":[[120,4]]}}}],["216",{"_index":110,"t":{"104":{"position":[[210,4]]}}}],["217",{"_index":92,"t":{"76":{"position":[[71,4]]}}}],["222",{"_index":103,"t":{"98":{"position":[[46,4]]}}}],["223",{"_index":78,"t":{"69":{"position":[[150,4]]}}}],["224",{"_index":68,"t":{"67":{"position":[[59,4]]}}}],["23",{"_index":175,"t":{"206":{"position":[[575,13]]}}}],["23.04",{"_index":3,"t":{"4":{"position":[[8,5]]},"17":{"position":[[8,5]]}}}],["23.05",{"_index":9,"t":{"21":{"position":[[8,5]]}}}],["23.07",{"_index":32,"t":{"34":{"position":[[8,5]]}}}],["23.08",{"_index":47,"t":{"48":{"position":[[8,5]]}}}],["231",{"_index":77,"t":{"69":{"position":[[59,4]]}}}],["234",{"_index":95,"t":{"82":{"position":[[75,4]]}}}],["238",{"_index":79,"t":{"71":{"position":[[36,4]]}}}],["24.01",{"_index":64,"t":{"62":{"position":[[8,5]]}}}],["24.02",{"_index":96,"t":{"84":{"position":[[8,5]]},"91":{"position":[[8,5]]}}}],["241",{"_index":87,"t":{"74":{"position":[[37,4]]}}}],["243",{"_index":67,"t":{"65":{"position":[[330,4]]}}}],["246",{"_index":99,"t":{"94":{"position":[[130,4]]}}}],["247",{"_index":112,"t":{"104":{"position":[[286,4]]}}}],["250",{"_index":100,"t":{"94":{"position":[[219,4]]}}}],["251",{"_index":105,"t":{"100":{"position":[[75,5]]}}}],["253",{"_index":113,"t":{"104":{"position":[[385,4]]}}}],["255",{"_index":107,"t":{"102":{"position":[[23,4]]}}}],["266",{"_index":114,"t":{"104":{"position":[[439,4]]}}}],["2].количество\").равно(3",{"_index":289,"t":{"335":{"position":[[1545,36]]}}}],["2].параметры[1]\").равно(2",{"_index":198,"t":{"228":{"position":[[2771,39]]}}}],["2].сумма\").равно(300",{"_index":291,"t":{"335":{"position":[[1615,33]]}}}],["2].товар\").равно(таблицатоваров[0",{"_index":288,"t":{"335":{"position":[[1491,53]]}}}],["2].цена\").равно(100",{"_index":290,"t":{"335":{"position":[[1582,32]]}}}],["3",{"_index":123,"t":{"110":{"position":[[100,1],[196,1],[379,1],[415,1]]},"195":{"position":[[3300,2]]},"199":{"position":[[348,3],[380,14],[644,3],[2121,3],[2459,3]]},"206":{"position":[[185,3],[496,3],[624,3]]},"214":{"position":[[175,14]]},"222":{"position":[[3076,1]]},"224":{"position":[[3557,9],[3569,2],[3612,10],[3737,3],[3970,3],[4768,2],[4854,20],[7587,12],[7800,12],[7936,11]]},"228":{"position":[[450,9],[1471,2],[2486,14]]},"252":{"position":[[2300,1]]},"261":{"position":[[270,4],[614,4],[743,2]]},"266":{"position":[[1829,1],[2578,10],[2888,2],[2912,2],[2940,3],[2947,3],[2971,2],[2977,3]]},"332":{"position":[[571,1],[1726,1]]},"335":{"position":[[356,1],[1649,48],[1702,64],[1767,64]]}}}],["3).равно(5",{"_index":125,"t":{"110":{"position":[[286,12]]}}}],["300",{"_index":278,"t":{"332":{"position":[[573,3]]},"335":{"position":[[358,3]]}}}],["300,5",{"_index":281,"t":{"332":{"position":[[630,5]]},"335":{"position":[[415,5]]},"337":{"position":[[670,5]]},"339":{"position":[[653,5]]}}}],["300,9",{"_index":304,"t":{"345":{"position":[[338,5],[350,5]]}}}],["300.5",{"_index":282,"t":{"332":{"position":[[638,5]]},"335":{"position":[[423,5]]},"337":{"position":[[678,5]]},"339":{"position":[[661,5]]}}}],["36",{"_index":76,"t":{"67":{"position":[[528,3]]}}}],["3:06:17",{"_index":119,"t":{"108":{"position":[[996,7]]}}}],["3].количество\").равно(1",{"_index":292,"t":{"335":{"position":[[1832,36]]}}}],["3].сумма\").равно(2000",{"_index":294,"t":{"335":{"position":[[1903,34]]}}}],["3].цена\").равно(2000",{"_index":293,"t":{"335":{"position":[[1869,33]]}}}],["4",{"_index":173,"t":{"199":{"position":[[416,20],[437,16]]},"224":{"position":[[3765,3],[3998,3]]},"261":{"position":[[222,47],[1389,4]]},"266":{"position":[[1696,2],[1815,10],[2094,1],[2564,10]]},"332":{"position":[[1777,2]]},"335":{"position":[[1938,51],[1990,46],[2037,65]]}}}],["49",{"_index":54,"t":{"55":{"position":[[42,4]]}}}],["4].количество\").равно(1",{"_index":295,"t":{"335":{"position":[[2103,36]]}}}],["4].сумма\").равно(300.5",{"_index":297,"t":{"335":{"position":[[2175,36]]}}}],["4].цена\").равно(300.5",{"_index":296,"t":{"335":{"position":[[2140,34]]}}}],["5",{"_index":124,"t":{"110":{"position":[[121,2],[204,2],[384,1],[420,13]]},"206":{"position":[[427,10]]},"259":{"position":[[455,2]]},"266":{"position":[[2891,2]]},"332":{"position":[[1782,2]]},"335":{"position":[[1031,14]]}}}],["55",{"_index":16,"t":{"24":{"position":[[512,3]]}}}],["62",{"_index":22,"t":{"26":{"position":[[222,3]]}}}],["69",{"_index":10,"t":{"24":{"position":[[65,3]]}}}],["7",{"_index":191,"t":{"224":{"position":[[3779,2]]}}}],["70",{"_index":23,"t":{"28":{"position":[[52,3]]}}}],["74",{"_index":11,"t":{"24":{"position":[[127,3]]}}}],["75",{"_index":13,"t":{"24":{"position":[[304,3]]}}}],["76",{"_index":19,"t":{"26":{"position":[[153,4]]}}}],["78",{"_index":27,"t":{"32":{"position":[[36,4]]}}}],["8.3.10",{"_index":213,"t":{"270":{"position":[[22,6]]}}}],["80",{"_index":36,"t":{"37":{"position":[[52,4]]}}}],["84",{"_index":31,"t":{"32":{"position":[[158,3]]}}}],["85",{"_index":29,"t":{"32":{"position":[[86,4]]}}}],["86",{"_index":12,"t":{"24":{"position":[[217,3]]}}}],["88",{"_index":35,"t":{"37":{"position":[[47,4]]}}}],["90",{"_index":15,"t":{"24":{"position":[[446,3]]}}}],["92",{"_index":14,"t":{"24":{"position":[[388,3]]}}}],["93",{"_index":17,"t":{"24":{"position":[[610,3]]}}}],["94",{"_index":25,"t":{"30":{"position":[[38,3]]}}}],["98",{"_index":18,"t":{"26":{"position":[[68,3]]}}}],["9999",{"_index":145,"t":{"155":{"position":[[718,7]]},"222":{"position":[[3473,7]]},"252":{"position":[[2373,48]]},"259":{"position":[[529,48]]}}}],["_",{"_index":184,"t":{"210":{"position":[[0,35],[186,35],[359,35],[503,35]]},"222":{"position":[[196,45],[646,45],[1157,35],[1877,54],[2553,30]]},"266":{"position":[[503,14],[869,13],[1134,13],[1699,13],[2783,13],[3403,13]]},"335":{"position":[[883,69]]},"339":{"position":[[314,19],[675,18]]}}}],["_макеттестовыхданных.r1c1r4c4",{"_index":298,"t":{"337":{"position":[[1315,45]]}}}],["_макеттестовыхданных.r2c1:r5c11",{"_index":186,"t":{"214":{"position":[[21,80]]}}}],["_макеттестовыхданных.r5c1r8c4",{"_index":299,"t":{"337":{"position":[[1762,45]]}}}],["_макеттестовыхданных.ожидаемые_",{"_index":303,"t":{"339":{"position":[[3389,55]]}}}],["_макеттестовыхданных.реквизиты_",{"_index":301,"t":{"339":{"position":[[2095,55]]}}}],["_макеттестовыхданных.табличная_часть_",{"_index":302,"t":{"339":{"position":[[2650,62]]}}}],["_набор2",{"_index":132,"t":{"141":{"position":[[1117,14]]}}}],["_провайдер1",{"_index":147,"t":{"155":{"position":[[742,39]]},"222":{"position":[[3516,39],[3727,40]]},"224":{"position":[[571,39]]}}}],["_часть_",{"_index":300,"t":{"339":{"position":[[446,25]]}}}],["absoluteposit",{"_index":160,"t":{"161":{"position":[[235,16]]}}}],["admin",{"_index":273,"t":{"322":{"position":[[299,5],[436,5]]}}}],["ado.recordset",{"_index":102,"t":{"98":{"position":[[32,13]]},"161":{"position":[[109,14],[204,13]]},"281":{"position":[[651,14]]}}}],["adorecordset",{"_index":127,"t":{"128":{"position":[[992,29]]},"161":{"position":[[154,27],[387,27]]},"281":{"position":[[666,28]]}}}],["advancedglobalsearchon",{"_index":212,"t":{"266":{"position":[[3882,24]]}}}],["alexandr",{"_index":20,"t":{"26":{"position":[[166,9]]},"41":{"position":[[142,9]]},"46":{"position":[[119,9]]}}}],["allur",{"_index":106,"t":{"102":{"position":[[16,6]]},"165":{"position":[[383,6]]},"167":{"position":[[130,6]]},"293":{"position":[[217,8]]}}}],["apache24",{"_index":208,"t":{"261":{"position":[[2180,10]]}}}],["api",{"_index":24,"t":{"30":{"position":[[11,3]]},"122":{"position":[[10,3]]},"124":{"position":[[114,3]]},"126":{"position":[[10,3]]},"128":{"position":[[10,3]]},"130":{"position":[[205,4],[334,3]]},"183":{"position":[[58,3]]},"195":{"position":[[0,3]]},"224":{"position":[[152,3]]},"230":{"position":[[39,3]]},"238":{"position":[[516,3],[659,3],[1187,3]]},"244":{"position":[[2226,3]]},"279":{"position":[[347,4]]},"281":{"position":[[394,4],[782,3],[958,3],[1064,3]]}}}],["array",{"_index":238,"t":{"295":{"position":[[60,5],[134,5],[198,5],[282,5],[371,5],[448,5],[534,5]]}}}],["artbear",{"_index":7,"t":{"19":{"position":[[264,9]]}}}],["assert",{"_index":225,"t":{"279":{"position":[[372,11]]}}}],["baseurl",{"_index":150,"t":{"159":{"position":[[688,7]]}}}],["bellerag",{"_index":129,"t":{"134":{"position":[[130,9]]},"266":{"position":[[3868,9]]}}}],["beta",{"_index":205,"t":{"261":{"position":[[1840,41]]}}}],["bof",{"_index":159,"t":{"161":{"position":[[231,3],[324,5]]}}}],["boolean",{"_index":232,"t":{"293":{"position":[[372,7],[455,7]]},"297":{"position":[[89,7],[229,7]]}}}],["builder",{"_index":220,"t":{"279":{"position":[[317,7]]}}}],["c",{"_index":219,"t":{"279":{"position":[[313,3],[362,3]]},"322":{"position":[[84,2],[305,2]]}}}],["c:\\\\temp\\\\junit\\\\report.xml",{"_index":252,"t":{"297":{"position":[[589,30],[870,29],[1018,30]]}}}],["c:\\\\temp\\\\junit\\\\tests.log",{"_index":254,"t":{"297":{"position":[[1070,29]]}}}],["c:\\program",{"_index":268,"t":{"322":{"position":[[216,11]]}}}],["c:\\temp\\junit\\report.xml",{"_index":253,"t":{"297":{"position":[[736,25],[977,24]]}}}],["c:\\tmp\\test",{"_index":276,"t":{"322":{"position":[[476,11]]}}}],["caution",{"_index":174,"t":{"203":{"position":[[734,7]]}}}],["cfe",{"_index":216,"t":{"277":{"position":[[19,5]]}}}],["ci",{"_index":6,"t":{"15":{"position":[[53,2]]},"57":{"position":[[7,3]]},"165":{"position":[[417,3]]},"169":{"position":[[19,2]]},"175":{"position":[[106,3]]}}}],["close",{"_index":165,"t":{"161":{"position":[[301,7]]}}}],["closeaftertest",{"_index":231,"t":{"293":{"position":[[356,15]]},"297":{"position":[[645,18]]}}}],["config.json",{"_index":275,"t":{"322":{"position":[[333,11],[488,11]]}}}],["consol",{"_index":245,"t":{"297":{"position":[[172,8],[221,7]]}}}],["context",{"_index":241,"t":{"295":{"position":[[439,8]]}}}],["cpu",{"_index":203,"t":{"261":{"position":[[1319,34]]}}}],["ctrl+enter",{"_index":104,"t":{"100":{"position":[[64,10]]}}}],["ctrl+shift+t",{"_index":265,"t":{"316":{"position":[[204,13]]}}}],["daabramov",{"_index":37,"t":{"37":{"position":[[65,10]]},"53":{"position":[[89,10]]}}}],["dataprocessor.ютhttpservicerequest",{"_index":111,"t":{"104":{"position":[[224,34]]}}}],["debug",{"_index":249,"t":{"297":{"position":[[286,7],[340,8],[1109,7]]}}}],["deliv",{"_index":146,"t":{"155":{"position":[[726,15]]},"222":{"position":[[3481,15]]}}}],["develop",{"_index":256,"t":{"299":{"position":[[424,7]]}}}],["dlyubanevich",{"_index":43,"t":{"44":{"position":[[69,13]]},"51":{"position":[[89,13]]}}}],["docker",{"_index":206,"t":{"261":{"position":[[1991,24],[2386,57]]}}}],["documentation/blog",{"_index":1,"t":{"2":{"position":[[212,18]]}}}],["dsl",{"_index":224,"t":{"279":{"position":[[357,4]]}}}],["dt",{"_index":167,"t":{"175":{"position":[[169,3]]}}}],["dummi",{"_index":138,"t":{"153":{"position":[[891,7]]}}}],["eclips",{"_index":255,"t":{"299":{"position":[[271,7]]}}}],["edt",{"_index":122,"t":{"108":{"position":[[1105,4]]},"165":{"position":[[216,4],[623,4]]},"167":{"position":[[112,4]]},"264":{"position":[[281,4]]},"266":{"position":[[38,3]]},"275":{"position":[[195,3]]},"299":{"position":[[77,4],[279,5],[319,4],[443,3],[875,3]]},"304":{"position":[[797,3]]},"310":{"position":[[20,4]]},"312":{"position":[[19,3]]},"345":{"position":[[95,4]]}}}],["enabl",{"_index":244,"t":{"297":{"position":[[82,6]]}}}],["enter",{"_index":266,"t":{"316":{"position":[[224,5]]}}}],["enterpris",{"_index":267,"t":{"322":{"position":[[20,10],[266,10]]}}}],["eof",{"_index":158,"t":{"161":{"position":[[227,3],[318,5]]}}}],["error",{"_index":251,"t":{"297":{"position":[[357,7]]}}}],["exitcod",{"_index":236,"t":{"293":{"position":[[588,8]]}}}],["extens",{"_index":237,"t":{"295":{"position":[[49,10]]},"297":{"position":[[827,13]]}}}],["exts/yaxunit",{"_index":214,"t":{"273":{"position":[[76,13]]}}}],["faker",{"_index":33,"t":{"37":{"position":[[0,5]]},"250":{"position":[[3504,5]]}}}],["fals",{"_index":246,"t":{"297":{"position":[[237,5]]}}}],["field",{"_index":162,"t":{"161":{"position":[[264,6],[309,8]]}}}],["file",{"_index":243,"t":{"297":{"position":[[49,4],[165,4],[1062,7]]}}}],["files\\1cv8\\8.3.18.1698\\bin\\1cv8c.ex",{"_index":269,"t":{"322":{"position":[[228,37]]}}}],["filter",{"_index":226,"t":{"293":{"position":[[49,6]]},"297":{"position":[[514,9],[815,9]]}}}],["fluent",{"_index":217,"t":{"279":{"position":[[112,7]]}}}],["ftp",{"_index":193,"t":{"226":{"position":[[923,56]]}}}],["getbodyasbinarydata",{"_index":155,"t":{"159":{"position":[[849,21]]}}}],["getbodyasstr",{"_index":157,"t":{"159":{"position":[[940,17]]}}}],["getbodyasstream",{"_index":156,"t":{"159":{"position":[[896,17]]}}}],["git",{"_index":8,"t":{"19":{"position":[[313,3]]},"285":{"position":[[175,3]]}}}],["github",{"_index":56,"t":{"57":{"position":[[0,6]]}}}],["gitlab.ru/orais/ci_cd/1cw",{"_index":207,"t":{"261":{"position":[[2152,27]]}}}],["h2",{"_index":137,"t":{"153":{"position":[[604,3]]}}}],["header",{"_index":151,"t":{"159":{"position":[[708,7]]}}}],["http",{"_index":4,"t":{"9":{"position":[[255,4]]},"128":{"position":[[137,4],[731,33],[815,4]]},"153":{"position":[[1030,4],[1119,17]]},"159":{"position":[[54,4],[101,17],[395,17],[564,31],[626,16],[652,9]]},"224":{"position":[[2624,28],[2653,58],[2937,28],[2966,58],[3088,28],[6161,9],[6450,28],[6596,28],[6741,28],[6770,58],[7030,28],[7191,28],[7220,66],[7400,28],[7628,28],[7657,114],[7849,28]]},"226":{"position":[[722,28],[1052,51]]},"228":{"position":[[190,29],[364,69],[513,104],[1139,23],[1269,68],[1392,36]]},"281":{"position":[[714,4],[728,32]]}}}],["http.отправитьобъектнасервер(1",{"_index":195,"t":{"228":{"position":[[1007,57]]}}}],["http.отправитьобъектнасервер(справочники.источникиданных.ftp",{"_index":194,"t":{"226":{"position":[[1182,68]]}}}],["httpmethod",{"_index":148,"t":{"159":{"position":[[664,10]]}}}],["https://bia",{"_index":259,"t":{"299":{"position":[[458,11],[520,11],[586,11]]}}}],["httpсервисответ(1",{"_index":190,"t":{"222":{"position":[[3361,19]]}}}],["httpсервисответ(200",{"_index":141,"t":{"155":{"position":[[604,21]]}}}],["ibnam",{"_index":270,"t":{"322":{"position":[[277,7]]}}}],["id",{"_index":143,"t":{"155":{"position":[[694,14]]},"165":{"position":[[278,4]]},"222":{"position":[[3449,14]]},"299":{"position":[[859,4]]}}}],["imap",{"_index":189,"t":{"222":{"position":[[1193,17],[1308,18],[1596,18]]}}}],["info",{"_index":250,"t":{"297":{"position":[[349,7]]},"310":{"position":[[109,4]]},"335":{"position":[[429,4]]}}}],["interfac",{"_index":218,"t":{"279":{"position":[[120,10]]}}}],["ip",{"_index":199,"t":{"250":{"position":[[940,31],[994,2]]},"261":{"position":[[151,37],[1183,37]]}}}],["java",{"_index":187,"t":{"216":{"position":[[48,4]]},"279":{"position":[[334,5]]}}}],["json",{"_index":142,"t":{"155":{"position":[[626,67]]},"159":{"position":[[1096,29]]},"185":{"position":[[1916,5]]},"222":{"position":[[3381,67]]},"224":{"position":[[6195,7]]},"291":{"position":[[35,4]]},"293":{"position":[[208,6]]}}}],["junit",{"_index":166,"t":{"165":{"position":[[171,5],[742,6]]},"293":{"position":[[141,7],[199,8]]},"297":{"position":[[506,5],[636,8]]}}}],["level",{"_index":248,"t":{"297":{"position":[[273,5],[1100,8]]}}}],["linux",{"_index":58,"t":{"57":{"position":[[61,5]]}}}],["lite",{"_index":136,"t":{"153":{"position":[[598,5]]}}}],["log",{"_index":235,"t":{"293":{"position":[[513,7]]},"297":{"position":[[1049,10]]}}}],["markdown",{"_index":48,"t":{"51":{"position":[[52,8]]},"332":{"position":[[181,9]]},"345":{"position":[[166,15],[679,49]]},"347":{"position":[[0,30],[48,8],[1318,40],[2171,32],[2221,8],[2814,41]]}}}],["mockito",{"_index":188,"t":{"216":{"position":[[81,8]]}}}],["modul",{"_index":239,"t":{"295":{"position":[[126,7]]},"297":{"position":[[526,10]]}}}],["movefirst",{"_index":163,"t":{"161":{"position":[[278,11]]}}}],["movenext",{"_index":164,"t":{"161":{"position":[[290,10]]}}}],["myinfobas",{"_index":271,"t":{"322":{"position":[[285,10],[407,10]]}}}],["n",{"_index":272,"t":{"322":{"position":[[296,2]]}}}],["null",{"_index":171,"t":{"185":{"position":[[638,7],[687,4],[692,9],[746,4]]},"187":{"position":[[141,4],[223,4]]},"295":{"position":[[140,4],[204,4],[288,4],[377,4],[454,4],[540,4]]},"297":{"position":[[97,4]]}}}],["object",{"_index":227,"t":{"293":{"position":[[56,6],[63,7],[521,6],[528,7]]}}}],["path",{"_index":242,"t":{"295":{"position":[[528,5]]}}}],["pattern",{"_index":221,"t":{"279":{"position":[[325,8]]}}}],["petypen",{"_index":28,"t":{"32":{"position":[[49,8]]}}}],["php",{"_index":223,"t":{"279":{"position":[[352,4]]}}}],["post",{"_index":192,"t":{"224":{"position":[[6173,7]]}}}],["potoyalo",{"_index":30,"t":{"32":{"position":[[99,9]]},"39":{"position":[[55,9]]},"41":{"position":[[69,9]]},"60":{"position":[[105,9]]}}}],["queryopt",{"_index":154,"t":{"159":{"position":[[795,12]]}}}],["recordcount",{"_index":161,"t":{"161":{"position":[[252,11]]}}}],["relativeurl",{"_index":152,"t":{"159":{"position":[[735,11]]}}}],["releas",{"_index":2,"t":{"4":{"position":[[0,7]]},"17":{"position":[[0,7]]},"21":{"position":[[0,7]]},"34":{"position":[[0,7]]},"48":{"position":[[0,7]]},"62":{"position":[[0,7]]},"84":{"position":[[0,7]]},"91":{"position":[[0,7]]}}}],["reportformat",{"_index":228,"t":{"293":{"position":[[121,12]]},"297":{"position":[[620,15]]}}}],["reportpath",{"_index":230,"t":{"293":{"position":[[226,10]]},"297":{"position":[[575,13],[856,13],[1004,13]]}}}],["req",{"_index":202,"t":{"261":{"position":[[945,4]]}}}],["richardthelionjok",{"_index":80,"t":{"71":{"position":[[49,20]]}}}],["runner/dev/repositori",{"_index":262,"t":{"299":{"position":[[564,21]]}}}],["runner/repositori",{"_index":261,"t":{"299":{"position":[[502,17]]}}}],["runner/repository/updates/23.x",{"_index":263,"t":{"299":{"position":[[630,30]]}}}],["rununittest",{"_index":264,"t":{"308":{"position":[[78,13]]},"322":{"position":[[87,44]]}}}],["rununittests=c:\\tmp\\test",{"_index":274,"t":{"322":{"position":[[308,24]]}}}],["seiokami",{"_index":62,"t":{"60":{"position":[[52,9]]},"65":{"position":[[126,9]]},"74":{"position":[[234,9]]}}}],["server",{"_index":140,"t":{"155":{"position":[[503,6]]}}}],["showreport",{"_index":234,"t":{"293":{"position":[[444,10]]}}}],["smtp",{"_index":133,"t":{"153":{"position":[[320,4]]}}}],["soap",{"_index":134,"t":{"153":{"position":[[386,4]]}}}],["sql",{"_index":128,"t":{"128":{"position":[[1066,4]]},"153":{"position":[[593,4]]}}}],["ssl",{"_index":130,"t":{"134":{"position":[[140,3]]},"266":{"position":[[3878,3]]}}}],["statu",{"_index":144,"t":{"155":{"position":[[709,8]]},"222":{"position":[[3464,8]]}}}],["stdout",{"_index":247,"t":{"297":{"position":[[256,6]]}}}],["stolya",{"_index":70,"t":{"67":{"position":[[127,7]]},"74":{"position":[[141,7]]}}}],["stream",{"_index":222,"t":{"279":{"position":[[340,6]]}}}],["string",{"_index":229,"t":{"293":{"position":[[134,6],[237,6],[597,6]]},"297":{"position":[[54,6],[279,6]]}}}],["suit",{"_index":211,"t":{"266":{"position":[[560,7]]},"295":{"position":[[275,6]]}}}],["tag",{"_index":240,"t":{"295":{"position":[[366,4]]}}}],["technologies.github.io/edt",{"_index":260,"t":{"299":{"position":[[470,26],[532,26],[598,26]]}}}],["test",{"_index":210,"t":{"266":{"position":[[554,5]]},"279":{"position":[[366,5]]},"295":{"position":[[66,9],[192,5]]},"299":{"position":[[497,4],[559,4],[625,4]]}}}],["tip",{"_index":170,"t":{"181":{"position":[[189,3]]},"183":{"position":[[0,3]]},"246":{"position":[[122,3]]},"318":{"position":[[224,3]]},"332":{"position":[[824,3],[1816,3],[2397,3]]},"345":{"position":[[71,3]]}}}],["true",{"_index":233,"t":{"293":{"position":[[380,4],[463,4]]},"297":{"position":[[664,4]]}}}],["ui",{"_index":97,"t":{"86":{"position":[[121,2]]}}}],["ui/postman/wiremock",{"_index":135,"t":{"153":{"position":[[391,19]]}}}],["url",{"_index":149,"t":{"159":{"position":[[675,10],[716,16],[747,12],[1197,21],[1227,12],[1240,18]]}}}],["urlparamet",{"_index":153,"t":{"159":{"position":[[762,13]]}}}],["viktorermakov",{"_index":5,"t":{"11":{"position":[[46,15]]}}}],["web",{"_index":139,"t":{"155":{"position":[[499,3]]},"159":{"position":[[214,3]]}}}],["window",{"_index":57,"t":{"57":{"position":[[51,7]]}}}],["workspac",{"_index":215,"t":{"273":{"position":[[125,10],[168,9]]}}}],["xdto",{"_index":126,"t":{"126":{"position":[[870,38],[946,4]]},"281":{"position":[[582,5],[588,38]]}}}],["yang",{"_index":21,"t":{"26":{"position":[[176,4]]},"41":{"position":[[152,4]]},"46":{"position":[[129,4]]}}}],["yaxunit",{"_index":34,"t":{"37":{"position":[[10,7]]},"108":{"position":[[238,8]]},"120":{"position":[[0,7]]},"124":{"position":[[46,7]]},"136":{"position":[[0,7]]},"159":{"position":[[555,8]]},"165":{"position":[[83,7]]},"236":{"position":[[102,7]]},"242":{"position":[[0,7],[314,7]]},"250":{"position":[[30,7]]},"266":{"position":[[132,8],[163,7]]},"268":{"position":[[0,7]]},"279":{"position":[[58,7]]},"281":{"position":[[467,7]]},"297":{"position":[[705,7],[841,11]]}}}]],"pipeline":["stemmer"]}}]