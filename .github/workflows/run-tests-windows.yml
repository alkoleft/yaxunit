name: Run tests on Windows

on:
  workflow_call:
    inputs:
      v8_version:
        description: 'Platform version'
        type: string
        required: true

      locale:
        type: string
        required: false
        default: ru-RU

      artifact_name:
        type: string
        required: true
        
      fail_on_failure:
        type: boolean
        required: false
        default: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-${{ inputs.v8_version }}-${{ inputs.locale }}-Windows
  cancel-in-progress: true

jobs:
  execute-tests:
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh

    steps:

    - name: download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact_name }}
        path: binary

    - name: install platform
      uses: IT-Medved/onec-setup-build-env-action@develop
      with:
        type: onec
        onec_version: ${{ inputs.v8_version }}
        cache: true
      env: 
        ONEC_USERNAME: ${{ secrets.ONEC_USERNAME }}
        ONEC_PASSWORD: ${{ secrets.ONEC_PASSWORD }}
      timeout-minutes: 10

    - name: prepare
      shell: powershell
      run: |
        mkdir data\data
        mkdir logs
      
    - name: create test-config
      uses: DamianReeves/write-file-action@master
      with:
        path: C:\Program Files\1cv8\${{ inputs.v8_version }}\bin\conf\logcfg.xml
        contents: |
          <?xml version="1.0"?>
          <config xmlns="http://v8.1c.ru/v8/tech-log">
          	<log location="${{github.workspace}}\logs" history="48">
          		<event>
          		  <ne property="Name" value="" />
          		</event>
          		<property name="all" />
          	</log>
          </config> 
 
    - name: create IB
      run: ibcmd.exe infobase create --data=data --load=binary\configuration.cf --apply --force
      timeout-minutes: 5

    - name: load yaxunit
      run: |
        ibcmd.exe infobase config load --data=data --extension=YAXUNIT --force binary\yaxunit.cfe
        ibcmd.exe infobase config apply --data=data --extension=YAXUNIT --force
        ibcmd.exe infobase config extension update --data=data --name=YAXUNIT --safe-mode=no --unsafe-action-protection=no
      timeout-minutes: 5

    - name: load tests
      run: |
        ibcmd.exe infobase config load --data=data --extension=tests --force binary\tests.cfe
        ibcmd.exe infobase config apply --data=data --extension=tests --force
        ibcmd.exe infobase config extension update --data=data --name=tests --safe-mode=no --unsafe-action-protection=no
      timeout-minutes: 5

    - name: create test-config
      uses: DamianReeves/write-file-action@master
      with:
        path: unit.json
        contents: |
          {
            "reportFormat": "jUnit",
            "reportPath": "reports\\report.xml",
            "closeAfterTests": true,
            "exitCode": "exit-code.txt",
            "logging": {
              "console": true
            }
          }
    
    - name: Test
      run: |
        Set-WinSystemLocale ru-RU
        Set-Culture en-US
        Set-WinSystemLocale -SystemLocale ru-RU
        Set-WinUILanguageOverride -Language ru-RU
        Set-WinUserLanguageList ru-RU -Force
        Set-WinHomeLocation -GeoId 203

        Start-Process ibsrv.exe -ArgumentList "--data=data  --port=8081"
        Start-Process -NoNewWindow -PassThru -Wait 1cv8c.exe -ArgumentList '/WS "http://localhost:8081" /C"RunUnitTests=unit.json" /L ru /VL ru_RU /DisableStartupDialogs /DisableStartupMessages /DisableUnrecoverableErrorMessage /Out logs\1cv8c-output.log'
      timeout-minutes: 10
   
    - name: view output
      if: always()
      run: type logs\1cv8c-output.log
    
    - name: upload-artifact
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: Tests report. Windows ${{ inputs.v8_version }} ${{ inputs.locale }}
        path: reports\*.*
            
    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        job_name: Tests Windows ${{ inputs.v8_version }} ${{ inputs.locale }}
        check_name: Tests report. Windows ${{ inputs.v8_version }} ${{ inputs.locale }}
        report_paths: reports\report.xml
        fail_on_failure: ${{ inputs.fail_on_failure }}
        require_passed_tests: true
